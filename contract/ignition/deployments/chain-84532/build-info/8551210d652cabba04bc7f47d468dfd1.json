{
  "id": "8551210d652cabba04bc7f47d468dfd1",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
      },
      "contracts/USDCRewardContract.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title USDCRewardContract\n * @dev A contract for managing point-based USDC rewards for users who upload conversation data\n * @author Oto Team\n */\ncontract USDCRewardContract is Ownable, Pausable, ReentrancyGuard {\n  // ==================== State Variables ====================\n\n  /// @dev Mapping of user addresses to their point balances\n  mapping(address => uint256) private pointBalances;\n\n  /// @dev Exchange rate from points to USDC (1 point = exchangeRate USDC wei)\n  uint256 private exchangeRate;\n\n  /// @dev USDC token contract interface\n  IERC20 private usdcToken;\n\n  // ==================== Custom Errors ====================\n\n  /// @dev Thrown when user has insufficient points for the requested operation\n  /// @param required The amount of points required\n  /// @param available The amount of points available\n  error InsufficientPoints(uint256 required, uint256 available);\n\n  /// @dev Thrown when contract has insufficient USDC balance for the requested operation\n  /// @param required The amount of USDC required\n  /// @param available The amount of USDC available\n  error InsufficientUSDCBalance(uint256 required, uint256 available);\n\n  /// @dev Thrown when an invalid address (zero address) is provided\n  error InvalidAddress();\n\n  /// @dev Thrown when an invalid amount (zero or negative) is provided\n  error InvalidAmount();\n\n  /// @dev Thrown when exchange rate is not set (zero)\n  error ExchangeRateNotSet();\n\n  /// @dev Thrown when unauthorized access is attempted\n  error Unauthorized();\n\n  /// @dev Thrown when contract is paused and operation is not allowed\n  error ContractIsPaused();\n\n  // ==================== Events ====================\n\n  /// @dev Emitted when points are added to a user's balance\n  /// @param user The user address\n  /// @param amount The amount of points added\n  event PointsAdded(address indexed user, uint256 amount);\n\n  /// @dev Emitted when points are transferred to a user\n  /// @param user The user address\n  /// @param amount The amount of points transferred\n  event PointsTransferred(address indexed user, uint256 amount);\n\n  /// @dev Emitted when exchange rate is updated\n  /// @param newRate The new exchange rate\n  event ExchangeRateSet(uint256 newRate);\n\n  /// @dev Emitted when USDC is claimed by a user\n  /// @param user The user address\n  /// @param pointsUsed The amount of points used\n  /// @param usdcAmount The amount of USDC claimed\n  event USDCClaimed(\n    address indexed user,\n    uint256 pointsUsed,\n    uint256 usdcAmount\n  );\n\n  /// @dev Emitted when USDC is deposited to the contract\n  /// @param amount The amount of USDC deposited\n  event USDCDeposited(uint256 amount);\n\n  /// @dev Emitted when USDC is withdrawn from the contract\n  /// @param amount The amount of USDC withdrawn\n  event USDCWithdrawn(uint256 amount);\n\n  /// @dev Emitted when contract is paused\n  event ContractPaused();\n\n  /// @dev Emitted when contract is unpaused\n  event ContractUnpaused();\n\n  // ==================== Constructor ====================\n\n  /// @dev Constructor to initialize the contract with USDC token address\n  /// @param _usdcToken The address of the USDC token contract\n  constructor(address _usdcToken) Ownable(msg.sender) {\n    if (_usdcToken == address(0)) {\n      revert InvalidAddress();\n    }\n\n    usdcToken = IERC20(_usdcToken);\n    exchangeRate = 0; // Initially not set, must be configured by owner\n  }\n\n  // ==================== Point Management Functions ====================\n\n  /// @dev Adds points to a user's balance (only owner)\n  /// @param user The user address to add points to\n  /// @param amount The amount of points to add\n  function addPoints(address user, uint256 amount) external onlyOwner {\n    _validateAddress(user);\n\n    if (amount == 0) {\n      revert InvalidAmount();\n    }\n\n    pointBalances[user] += amount;\n\n    emit PointsAdded(user, amount);\n  }\n\n  /// @dev Transfers points to a user (only owner)\n  /// @param user The user address to transfer points to\n  /// @param amount The amount of points to transfer\n  function transferPoints(address user, uint256 amount) external onlyOwner {\n    _validateAddress(user);\n\n    if (amount == 0) {\n      revert InvalidAmount();\n    }\n\n    uint256 currentBalance = pointBalances[user];\n    if (currentBalance < amount) {\n      revert InsufficientPoints(amount, currentBalance);\n    }\n\n    pointBalances[user] -= amount;\n\n    emit PointsTransferred(user, amount);\n  }\n\n  /// @dev Gets the point balance of a user\n  /// @param user The user address to check\n  /// @return The point balance of the user\n  function getPointBalance(address user) external view returns (uint256) {\n    return pointBalances[user];\n  }\n\n  // ==================== Exchange Rate Management Functions ====================\n\n  /// @dev Sets the exchange rate from points to USDC (only owner)\n  /// @param rate The new exchange rate (1 point = rate USDC wei)\n  function setExchangeRate(uint256 rate) external onlyOwner {\n    exchangeRate = rate;\n\n    emit ExchangeRateSet(rate);\n  }\n\n  /// @dev Calculates the USDC amount for a given point amount\n  /// @param pointAmount The amount of points to convert\n  /// @return The equivalent USDC amount in wei\n  function calculateUSDCAmount(\n    uint256 pointAmount\n  ) external view returns (uint256) {\n    if (exchangeRate == 0) {\n      return 0;\n    }\n\n    return pointAmount * exchangeRate;\n  }\n\n  // ==================== USDC Claim Functions ====================\n\n  /// @dev Allows users to claim USDC by spending their points\n  /// @param pointAmount The amount of points to spend for USDC\n  function claimUSDC(uint256 pointAmount) external whenNotPaused nonReentrant {\n    _validateAddress(msg.sender);\n\n    if (pointAmount == 0) {\n      revert InvalidAmount();\n    }\n\n    // Check if exchange rate is set\n    if (exchangeRate == 0) {\n      revert ExchangeRateNotSet();\n    }\n\n    // Check user's point balance\n    uint256 userBalance = pointBalances[msg.sender];\n    if (userBalance < pointAmount) {\n      revert InsufficientPoints(pointAmount, userBalance);\n    }\n\n    // Calculate USDC amount\n    uint256 usdcAmount = pointAmount * exchangeRate;\n\n    // Check contract's USDC balance\n    uint256 contractUSDCBalance = usdcToken.balanceOf(address(this));\n    if (contractUSDCBalance < usdcAmount) {\n      revert InsufficientUSDCBalance(usdcAmount, contractUSDCBalance);\n    }\n\n    // Reduce user's point balance\n    pointBalances[msg.sender] -= pointAmount;\n\n    // Transfer USDC to user\n    _transferUSDC(msg.sender, usdcAmount);\n\n    // Emit event\n    emit USDCClaimed(msg.sender, pointAmount, usdcAmount);\n  }\n\n  // ==================== USDC Supply Management Functions ====================\n\n  /// @dev Deposits USDC to the contract (only owner)\n  /// @param amount The amount of USDC to deposit\n  function depositUSDC(uint256 amount) external onlyOwner {\n    if (amount == 0) {\n      revert InvalidAmount();\n    }\n\n    // Transfer USDC from owner to contract\n    bool success = usdcToken.transferFrom(msg.sender, address(this), amount);\n    if (!success) {\n      revert InsufficientUSDCBalance(amount, usdcToken.balanceOf(msg.sender));\n    }\n\n    emit USDCDeposited(amount);\n  }\n\n  /// @dev Withdraws USDC from the contract (only owner)\n  /// @param amount The amount of USDC to withdraw\n  function withdrawUSDC(uint256 amount) external onlyOwner {\n    if (amount == 0) {\n      revert InvalidAmount();\n    }\n\n    // Check contract's USDC balance\n    uint256 contractBalance = usdcToken.balanceOf(address(this));\n    if (contractBalance < amount) {\n      revert InsufficientUSDCBalance(amount, contractBalance);\n    }\n\n    // Transfer USDC from contract to owner\n    bool success = usdcToken.transfer(msg.sender, amount);\n    if (!success) {\n      revert InsufficientUSDCBalance(amount, contractBalance);\n    }\n\n    emit USDCWithdrawn(amount);\n  }\n\n  // ==================== Pause/Unpause Functions ====================\n\n  /// @dev Pauses the contract (only owner)\n  /// @notice When paused, user functions like claimUSDC are disabled, but admin functions remain available\n  function pause() external onlyOwner {\n    _pause();\n    emit ContractPaused();\n  }\n\n  /// @dev Unpauses the contract (only owner)\n  /// @notice Restores normal contract functionality\n  function unpause() external onlyOwner {\n    _unpause();\n    emit ContractUnpaused();\n  }\n\n  // ==================== Internal Functions ====================\n\n  /// @dev Internal function to transfer USDC to a user\n  /// @param to The address to transfer USDC to\n  /// @param amount The amount of USDC to transfer\n  function _transferUSDC(address to, uint256 amount) private {\n    bool success = usdcToken.transfer(to, amount);\n    if (!success) {\n      revert InsufficientUSDCBalance(\n        amount,\n        usdcToken.balanceOf(address(this))\n      );\n    }\n  }\n\n  /// @dev Validates that an address is not zero\n  /// @param addr The address to validate\n  function _validateAddress(address addr) private pure {\n    if (addr == address(0)) {\n      revert InvalidAddress();\n    }\n  }\n}\n"
      }
    },
    "settings": {
      "viaIR": true,
      "evmVersion": "paris",
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              255
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 256,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 255,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 255,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                255
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 237,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 237,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              225
            ]
          },
          "id": 226,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:25:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 150,
                "nodeType": "StructuredDocumentation",
                "src": "133:71:1",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 225,
              "linearizedBaseContracts": [
                225
              ],
              "name": "IERC20",
              "nameLocation": "215:6:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 151,
                    "nodeType": "StructuredDocumentation",
                    "src": "228:158:1",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 159,
                  "name": "Transfer",
                  "nameLocation": "397:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 153,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "422:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "406:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "406:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 155,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "444:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "428:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "428:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 157,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "456:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "448:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "448:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "405:57:1"
                  },
                  "src": "391:72:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 160,
                    "nodeType": "StructuredDocumentation",
                    "src": "469:148:1",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 168,
                  "name": "Approval",
                  "nameLocation": "628:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "653:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "637:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "637:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 164,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "676:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "660:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 163,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "660:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 166,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "693:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "685:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "685:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "636:63:1"
                  },
                  "src": "622:78:1"
                },
                {
                  "documentation": {
                    "id": 169,
                    "nodeType": "StructuredDocumentation",
                    "src": "706:65:1",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 174,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "785:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 170,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "796:2:1"
                  },
                  "returnParameters": {
                    "id": 173,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 172,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 174,
                        "src": "822:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "821:9:1"
                  },
                  "scope": 225,
                  "src": "776:55:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 175,
                    "nodeType": "StructuredDocumentation",
                    "src": "837:71:1",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 182,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "922:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 177,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "940:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "932:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 176,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "932:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "931:17:1"
                  },
                  "returnParameters": {
                    "id": 181,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 180,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "972:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 179,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "972:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "971:9:1"
                  },
                  "scope": 225,
                  "src": "913:68:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 183,
                    "nodeType": "StructuredDocumentation",
                    "src": "987:213:1",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 192,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1214:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1231:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "1223:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1223:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1243:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "1235:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1235:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1222:27:1"
                  },
                  "returnParameters": {
                    "id": 191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 190,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "1268:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1268:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1267:6:1"
                  },
                  "scope": 225,
                  "src": "1205:69:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 193,
                    "nodeType": "StructuredDocumentation",
                    "src": "1280:264:1",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 202,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1558:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 195,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1576:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1568:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1568:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 197,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1591:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1583:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1583:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1567:32:1"
                  },
                  "returnParameters": {
                    "id": 201,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 200,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1623:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1623:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1622:9:1"
                  },
                  "scope": 225,
                  "src": "1549:83:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 203,
                    "nodeType": "StructuredDocumentation",
                    "src": "1638:667:1",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 212,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2319:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 205,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2335:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 212,
                        "src": "2327:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2327:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2352:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 212,
                        "src": "2344:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2344:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2326:32:1"
                  },
                  "returnParameters": {
                    "id": 211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 210,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 212,
                        "src": "2377:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 209,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2377:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2376:6:1"
                  },
                  "scope": 225,
                  "src": "2310:73:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 213,
                    "nodeType": "StructuredDocumentation",
                    "src": "2389:297:1",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 224,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2700:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 220,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 215,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2721:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2713:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 214,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2713:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2735:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2727:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2727:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2747:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2739:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2739:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2712:41:1"
                  },
                  "returnParameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2772:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2772:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2771:6:1"
                  },
                  "scope": 225,
                  "src": "2691:87:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 226,
              "src": "205:2575:1",
              "usedErrors": [],
              "usedEvents": [
                159,
                168
              ]
            }
          ],
          "src": "106:2675:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              255
            ]
          },
          "id": 256,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 227,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:2"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 228,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:2",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 255,
              "linearizedBaseContracts": [
                255
              ],
              "name": "Context",
              "nameLocation": "642:7:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 236,
                    "nodeType": "Block",
                    "src": "718:34:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 233,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 232,
                        "id": 235,
                        "nodeType": "Return",
                        "src": "728:17:2"
                      }
                    ]
                  },
                  "id": 237,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 229,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:2"
                  },
                  "returnParameters": {
                    "id": 232,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 231,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 237,
                        "src": "709:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 230,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:2"
                  },
                  "scope": 255,
                  "src": "656:96:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 245,
                    "nodeType": "Block",
                    "src": "825:32:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 242,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:2",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 241,
                        "id": 244,
                        "nodeType": "Return",
                        "src": "835:15:2"
                      }
                    ]
                  },
                  "id": 246,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 238,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:2"
                  },
                  "returnParameters": {
                    "id": 241,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 240,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 246,
                        "src": "809:14:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 239,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:2"
                  },
                  "scope": 255,
                  "src": "758:99:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 253,
                    "nodeType": "Block",
                    "src": "935:25:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 250,
                        "id": 252,
                        "nodeType": "Return",
                        "src": "945:8:2"
                      }
                    ]
                  },
                  "id": 254,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 247,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:2"
                  },
                  "returnParameters": {
                    "id": 250,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 249,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "926:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 248,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:2"
                  },
                  "scope": 255,
                  "src": "863:97:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 256,
              "src": "624:338:2",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              255
            ],
            "Pausable": [
              363
            ]
          },
          "id": 364,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 257,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 259,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 364,
              "sourceUnit": 256,
              "src": "128:45:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 258,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 255,
                    "src": "136:7:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 261,
                    "name": "Context",
                    "nameLocations": [
                      "645:7:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 255,
                    "src": "645:7:3"
                  },
                  "id": 262,
                  "nodeType": "InheritanceSpecifier",
                  "src": "645:7:3"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 260,
                "nodeType": "StructuredDocumentation",
                "src": "175:439:3",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 363,
              "linearizedBaseContracts": [
                363,
                255
              ],
              "name": "Pausable",
              "nameLocation": "633:8:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 264,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "672:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "659:20:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 265,
                    "nodeType": "StructuredDocumentation",
                    "src": "686:73:3",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 269,
                  "name": "Paused",
                  "nameLocation": "770:6:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 268,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 267,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "785:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 269,
                        "src": "777:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 266,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "776:17:3"
                  },
                  "src": "764:30:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 270,
                    "nodeType": "StructuredDocumentation",
                    "src": "800:70:3",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 274,
                  "name": "Unpaused",
                  "nameLocation": "881:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 273,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 272,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "898:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 274,
                        "src": "890:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 271,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:17:3"
                  },
                  "src": "875:32:3"
                },
                {
                  "documentation": {
                    "id": 275,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:76:3",
                    "text": " @dev The operation failed because the contract is paused."
                  },
                  "errorSelector": "d93c0665",
                  "id": 277,
                  "name": "EnforcedPause",
                  "nameLocation": "1000:13:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 276,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1013:2:3"
                  },
                  "src": "994:22:3"
                },
                {
                  "documentation": {
                    "id": 278,
                    "nodeType": "StructuredDocumentation",
                    "src": "1022:80:3",
                    "text": " @dev The operation failed because the contract is not paused."
                  },
                  "errorSelector": "8dfc202b",
                  "id": 280,
                  "name": "ExpectedPause",
                  "nameLocation": "1113:13:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 279,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1126:2:3"
                  },
                  "src": "1107:22:3"
                },
                {
                  "body": {
                    "id": 287,
                    "nodeType": "Block",
                    "src": "1340:47:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 283,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "1350:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1350:19:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 285,
                        "nodeType": "ExpressionStatement",
                        "src": "1350:19:3"
                      },
                      {
                        "id": 286,
                        "nodeType": "PlaceholderStatement",
                        "src": "1379:1:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 281,
                    "nodeType": "StructuredDocumentation",
                    "src": "1135:175:3",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 288,
                  "name": "whenNotPaused",
                  "nameLocation": "1324:13:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 282,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1337:2:3"
                  },
                  "src": "1315:72:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 295,
                    "nodeType": "Block",
                    "src": "1587:44:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 291,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 330,
                            "src": "1597:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1597:16:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 293,
                        "nodeType": "ExpressionStatement",
                        "src": "1597:16:3"
                      },
                      {
                        "id": 294,
                        "nodeType": "PlaceholderStatement",
                        "src": "1623:1:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 289,
                    "nodeType": "StructuredDocumentation",
                    "src": "1393:167:3",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 296,
                  "name": "whenPaused",
                  "nameLocation": "1574:10:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 290,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1584:2:3"
                  },
                  "src": "1565:66:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 304,
                    "nodeType": "Block",
                    "src": "1779:31:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 302,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 264,
                          "src": "1796:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 301,
                        "id": 303,
                        "nodeType": "Return",
                        "src": "1789:14:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 297,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:84:3",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 305,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1735:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 298,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1741:2:3"
                  },
                  "returnParameters": {
                    "id": 301,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 300,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "1773:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 299,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1772:6:3"
                  },
                  "scope": 363,
                  "src": "1726:84:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 316,
                    "nodeType": "Block",
                    "src": "1929:77:3",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 309,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "1943:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1943:8:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 315,
                        "nodeType": "IfStatement",
                        "src": "1939:61:3",
                        "trueBody": {
                          "id": 314,
                          "nodeType": "Block",
                          "src": "1953:47:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 311,
                                  "name": "EnforcedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 277,
                                  "src": "1974:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1974:15:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 313,
                              "nodeType": "RevertStatement",
                              "src": "1967:22:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 306,
                    "nodeType": "StructuredDocumentation",
                    "src": "1816:57:3",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 317,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "1887:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 307,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1904:2:3"
                  },
                  "returnParameters": {
                    "id": 308,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1929:0:3"
                  },
                  "scope": 363,
                  "src": "1878:128:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 329,
                    "nodeType": "Block",
                    "src": "2126:78:3",
                    "statements": [
                      {
                        "condition": {
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2140:9:3",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 321,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "2141:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2141:8:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 328,
                        "nodeType": "IfStatement",
                        "src": "2136:62:3",
                        "trueBody": {
                          "id": 327,
                          "nodeType": "Block",
                          "src": "2151:47:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 324,
                                  "name": "ExpectedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 280,
                                  "src": "2172:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2172:15:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 326,
                              "nodeType": "RevertStatement",
                              "src": "2165:22:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 318,
                    "nodeType": "StructuredDocumentation",
                    "src": "2012:61:3",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 330,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "2087:14:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 319,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2101:2:3"
                  },
                  "returnParameters": {
                    "id": 320,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2126:0:3"
                  },
                  "scope": 363,
                  "src": "2078:126:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 345,
                    "nodeType": "Block",
                    "src": "2388:66:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 336,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "2398:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2408:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2398:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 339,
                        "nodeType": "ExpressionStatement",
                        "src": "2398:14:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 341,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 237,
                                "src": "2434:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2434:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 340,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "2427:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2427:20:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 344,
                        "nodeType": "EmitStatement",
                        "src": "2422:25:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 331,
                    "nodeType": "StructuredDocumentation",
                    "src": "2210:124:3",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 346,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 334,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 333,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2374:13:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 288,
                        "src": "2374:13:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2374:13:3"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2348:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 332,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2354:2:3"
                  },
                  "returnParameters": {
                    "id": 335,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2388:0:3"
                  },
                  "scope": 363,
                  "src": "2339:115:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 361,
                    "nodeType": "Block",
                    "src": "2634:69:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 352,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "2644:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2654:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2644:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 355,
                        "nodeType": "ExpressionStatement",
                        "src": "2644:15:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 357,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 237,
                                "src": "2683:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2683:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 356,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 274,
                            "src": "2674:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2674:22:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 360,
                        "nodeType": "EmitStatement",
                        "src": "2669:27:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 347,
                    "nodeType": "StructuredDocumentation",
                    "src": "2460:121:3",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 362,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 350,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 349,
                        "name": "whenPaused",
                        "nameLocations": [
                          "2623:10:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 296,
                        "src": "2623:10:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2623:10:3"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2595:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 348,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:3"
                  },
                  "returnParameters": {
                    "id": 351,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2634:0:3"
                  },
                  "scope": 363,
                  "src": "2586:117:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 364,
              "src": "615:2090:3",
              "usedErrors": [
                277,
                280
              ],
              "usedEvents": [
                269,
                274
              ]
            }
          ],
          "src": "102:2604:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              432
            ]
          },
          "id": 433,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 365,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:4"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 366,
                "nodeType": "StructuredDocumentation",
                "src": "135:894:4",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 432,
              "linearizedBaseContracts": [
                432
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "1048:15:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 369,
                  "mutability": "constant",
                  "name": "NOT_ENTERED",
                  "nameLocation": "1843:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "1818:40:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1857:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 372,
                  "mutability": "constant",
                  "name": "ENTERED",
                  "nameLocation": "1889:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "1864:36:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1899:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 374,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1923:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "1907:23:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1907:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 375,
                    "nodeType": "StructuredDocumentation",
                    "src": "1937:52:4",
                    "text": " @dev Unauthorized reentrant call."
                  },
                  "errorSelector": "3ee5aeb5",
                  "id": 377,
                  "name": "ReentrancyGuardReentrantCall",
                  "nameLocation": "2000:28:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2028:2:4"
                  },
                  "src": "1994:37:4"
                },
                {
                  "body": {
                    "id": 384,
                    "nodeType": "Block",
                    "src": "2051:38:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 380,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "2061:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 381,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 369,
                            "src": "2071:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2061:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 383,
                        "nodeType": "ExpressionStatement",
                        "src": "2061:21:4"
                      }
                    ]
                  },
                  "id": 385,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 378,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2048:2:4"
                  },
                  "returnParameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2051:0:4"
                  },
                  "scope": 432,
                  "src": "2037:52:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 395,
                    "nodeType": "Block",
                    "src": "2490:79:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 388,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 412,
                            "src": "2500:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2500:21:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 390,
                        "nodeType": "ExpressionStatement",
                        "src": "2500:21:4"
                      },
                      {
                        "id": 391,
                        "nodeType": "PlaceholderStatement",
                        "src": "2531:1:4"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 392,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "2542:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2542:20:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 394,
                        "nodeType": "ExpressionStatement",
                        "src": "2542:20:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 386,
                    "nodeType": "StructuredDocumentation",
                    "src": "2095:366:4",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 396,
                  "name": "nonReentrant",
                  "nameLocation": "2475:12:4",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 387,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2487:2:4"
                  },
                  "src": "2466:103:4",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 411,
                    "nodeType": "Block",
                    "src": "2614:268:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 399,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "2702:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 400,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 372,
                            "src": "2713:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2702:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 406,
                        "nodeType": "IfStatement",
                        "src": "2698:86:4",
                        "trueBody": {
                          "id": 405,
                          "nodeType": "Block",
                          "src": "2722:62:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 402,
                                  "name": "ReentrancyGuardReentrantCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 377,
                                  "src": "2743:28:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2743:30:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 404,
                              "nodeType": "RevertStatement",
                              "src": "2736:37:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 407,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "2858:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 408,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 372,
                            "src": "2868:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2858:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 410,
                        "nodeType": "ExpressionStatement",
                        "src": "2858:17:4"
                      }
                    ]
                  },
                  "id": 412,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2584:19:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 397,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:4"
                  },
                  "returnParameters": {
                    "id": 398,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2614:0:4"
                  },
                  "scope": 432,
                  "src": "2575:307:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 419,
                    "nodeType": "Block",
                    "src": "2926:170:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 415,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "3068:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 416,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 369,
                            "src": "3078:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3068:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 418,
                        "nodeType": "ExpressionStatement",
                        "src": "3068:21:4"
                      }
                    ]
                  },
                  "id": 420,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2897:18:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 413,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2915:2:4"
                  },
                  "returnParameters": {
                    "id": 414,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2926:0:4"
                  },
                  "scope": 432,
                  "src": "2888:208:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 430,
                    "nodeType": "Block",
                    "src": "3339:42:4",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 426,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "3356:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 427,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 372,
                            "src": "3367:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3356:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 425,
                        "id": 429,
                        "nodeType": "Return",
                        "src": "3349:25:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 421,
                    "nodeType": "StructuredDocumentation",
                    "src": "3102:168:4",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 431,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3284:23:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 422,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3307:2:4"
                  },
                  "returnParameters": {
                    "id": 425,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 424,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 431,
                        "src": "3333:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 423,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3332:6:4"
                  },
                  "scope": 432,
                  "src": "3275:106:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 433,
              "src": "1030:2353:4",
              "usedErrors": [
                377
              ],
              "usedEvents": []
            }
          ],
          "src": "109:3275:4"
        },
        "id": 4
      },
      "contracts/USDCRewardContract.sol": {
        "ast": {
          "absolutePath": "contracts/USDCRewardContract.sol",
          "exportedSymbols": {
            "Context": [
              255
            ],
            "IERC20": [
              225
            ],
            "Ownable": [
              147
            ],
            "Pausable": [
              363
            ],
            "ReentrancyGuard": [
              432
            ],
            "USDCRewardContract": [
              974
            ]
          },
          "id": 975,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 434,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 435,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 975,
              "sourceUnit": 148,
              "src": "58:52:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "@openzeppelin/contracts/utils/Pausable.sol",
              "id": 436,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 975,
              "sourceUnit": 364,
              "src": "111:52:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 437,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 975,
              "sourceUnit": 433,
              "src": "164:59:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 438,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 975,
              "sourceUnit": 226,
              "src": "224:56:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 440,
                    "name": "Ownable",
                    "nameLocations": [
                      "466:7:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "466:7:5"
                  },
                  "id": 441,
                  "nodeType": "InheritanceSpecifier",
                  "src": "466:7:5"
                },
                {
                  "baseName": {
                    "id": 442,
                    "name": "Pausable",
                    "nameLocations": [
                      "475:8:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 363,
                    "src": "475:8:5"
                  },
                  "id": 443,
                  "nodeType": "InheritanceSpecifier",
                  "src": "475:8:5"
                },
                {
                  "baseName": {
                    "id": 444,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "485:15:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 432,
                    "src": "485:15:5"
                  },
                  "id": 445,
                  "nodeType": "InheritanceSpecifier",
                  "src": "485:15:5"
                }
              ],
              "canonicalName": "USDCRewardContract",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 439,
                "nodeType": "StructuredDocumentation",
                "src": "282:152:5",
                "text": " @title USDCRewardContract\n @dev A contract for managing point-based USDC rewards for users who upload conversation data\n @author Oto Team"
              },
              "fullyImplemented": true,
              "id": 974,
              "linearizedBaseContracts": [
                974,
                432,
                363,
                147,
                255
              ],
              "name": "USDCRewardContract",
              "nameLocation": "444:18:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "documentation": {
                    "id": 446,
                    "nodeType": "StructuredDocumentation",
                    "src": "569:58:5",
                    "text": "@dev Mapping of user addresses to their point balances"
                  },
                  "id": 450,
                  "mutability": "mutable",
                  "name": "pointBalances",
                  "nameLocation": "666:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 974,
                  "src": "630:49:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 449,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 447,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "638:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "630:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 448,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "649:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 451,
                    "nodeType": "StructuredDocumentation",
                    "src": "684:76:5",
                    "text": "@dev Exchange rate from points to USDC (1 point = exchangeRate USDC wei)"
                  },
                  "id": 453,
                  "mutability": "mutable",
                  "name": "exchangeRate",
                  "nameLocation": "779:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 974,
                  "src": "763:28:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "763:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 454,
                    "nodeType": "StructuredDocumentation",
                    "src": "796:38:5",
                    "text": "@dev USDC token contract interface"
                  },
                  "id": 457,
                  "mutability": "mutable",
                  "name": "usdcToken",
                  "nameLocation": "852:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 974,
                  "src": "837:24:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$225",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 456,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 455,
                      "name": "IERC20",
                      "nameLocations": [
                        "837:6:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 225,
                      "src": "837:6:5"
                    },
                    "referencedDeclaration": 225,
                    "src": "837:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$225",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 458,
                    "nodeType": "StructuredDocumentation",
                    "src": "928:183:5",
                    "text": "@dev Thrown when user has insufficient points for the requested operation\n @param required The amount of points required\n @param available The amount of points available"
                  },
                  "errorSelector": "8059c747",
                  "id": 464,
                  "name": "InsufficientPoints",
                  "nameLocation": "1120:18:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 463,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "required",
                        "nameLocation": "1147:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 464,
                        "src": "1139:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1139:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 462,
                        "mutability": "mutable",
                        "name": "available",
                        "nameLocation": "1165:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 464,
                        "src": "1157:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 461,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1157:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1138:37:5"
                  },
                  "src": "1114:62:5"
                },
                {
                  "documentation": {
                    "id": 465,
                    "nodeType": "StructuredDocumentation",
                    "src": "1180:189:5",
                    "text": "@dev Thrown when contract has insufficient USDC balance for the requested operation\n @param required The amount of USDC required\n @param available The amount of USDC available"
                  },
                  "errorSelector": "0e45ed66",
                  "id": 471,
                  "name": "InsufficientUSDCBalance",
                  "nameLocation": "1378:23:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 470,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 467,
                        "mutability": "mutable",
                        "name": "required",
                        "nameLocation": "1410:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 471,
                        "src": "1402:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 466,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1402:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 469,
                        "mutability": "mutable",
                        "name": "available",
                        "nameLocation": "1428:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 471,
                        "src": "1420:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 468,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1420:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1401:37:5"
                  },
                  "src": "1372:67:5"
                },
                {
                  "documentation": {
                    "id": 472,
                    "nodeType": "StructuredDocumentation",
                    "src": "1443:66:5",
                    "text": "@dev Thrown when an invalid address (zero address) is provided"
                  },
                  "errorSelector": "e6c4247b",
                  "id": 474,
                  "name": "InvalidAddress",
                  "nameLocation": "1518:14:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 473,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1532:2:5"
                  },
                  "src": "1512:23:5"
                },
                {
                  "documentation": {
                    "id": 475,
                    "nodeType": "StructuredDocumentation",
                    "src": "1539:69:5",
                    "text": "@dev Thrown when an invalid amount (zero or negative) is provided"
                  },
                  "errorSelector": "2c5211c6",
                  "id": 477,
                  "name": "InvalidAmount",
                  "nameLocation": "1617:13:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 476,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1630:2:5"
                  },
                  "src": "1611:22:5"
                },
                {
                  "documentation": {
                    "id": 478,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:52:5",
                    "text": "@dev Thrown when exchange rate is not set (zero)"
                  },
                  "errorSelector": "62f216e5",
                  "id": 480,
                  "name": "ExchangeRateNotSet",
                  "nameLocation": "1698:18:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1716:2:5"
                  },
                  "src": "1692:27:5"
                },
                {
                  "documentation": {
                    "id": 481,
                    "nodeType": "StructuredDocumentation",
                    "src": "1723:53:5",
                    "text": "@dev Thrown when unauthorized access is attempted"
                  },
                  "errorSelector": "82b42900",
                  "id": 483,
                  "name": "Unauthorized",
                  "nameLocation": "1785:12:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 482,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1797:2:5"
                  },
                  "src": "1779:21:5"
                },
                {
                  "documentation": {
                    "id": 484,
                    "nodeType": "StructuredDocumentation",
                    "src": "1804:68:5",
                    "text": "@dev Thrown when contract is paused and operation is not allowed"
                  },
                  "errorSelector": "6d39fcd0",
                  "id": 486,
                  "name": "ContractIsPaused",
                  "nameLocation": "1881:16:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 485,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1897:2:5"
                  },
                  "src": "1875:25:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 487,
                    "nodeType": "StructuredDocumentation",
                    "src": "1959:140:5",
                    "text": "@dev Emitted when points are added to a user's balance\n @param user The user address\n @param amount The amount of points added"
                  },
                  "eventSelector": "0fe6fcb45adaaa54f7e3491f6a7964049817f1e437f33587e634a4629fbcf3a6",
                  "id": 493,
                  "name": "PointsAdded",
                  "nameLocation": "2108:11:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 492,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 489,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "2136:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 493,
                        "src": "2120:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 488,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2120:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 491,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2150:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 493,
                        "src": "2142:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 490,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2142:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2119:38:5"
                  },
                  "src": "2102:56:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 494,
                    "nodeType": "StructuredDocumentation",
                    "src": "2162:142:5",
                    "text": "@dev Emitted when points are transferred to a user\n @param user The user address\n @param amount The amount of points transferred"
                  },
                  "eventSelector": "2254df2302625e26a2b6c7e8e9df285aae8492e23f60fdd9b01f7bd6aeb7b5ea",
                  "id": 500,
                  "name": "PointsTransferred",
                  "nameLocation": "2313:17:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 499,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 496,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "2347:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 500,
                        "src": "2331:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 495,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2331:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 498,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2361:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 500,
                        "src": "2353:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 497,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2353:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2330:38:5"
                  },
                  "src": "2307:62:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 501,
                    "nodeType": "StructuredDocumentation",
                    "src": "2373:89:5",
                    "text": "@dev Emitted when exchange rate is updated\n @param newRate The new exchange rate"
                  },
                  "eventSelector": "972aba470577c14606bbf4bbdec1fed4925f242fcef40b4a8d242983365d0291",
                  "id": 505,
                  "name": "ExchangeRateSet",
                  "nameLocation": "2471:15:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 504,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 503,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newRate",
                        "nameLocation": "2495:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 505,
                        "src": "2487:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 502,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2487:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2486:17:5"
                  },
                  "src": "2465:39:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 506,
                    "nodeType": "StructuredDocumentation",
                    "src": "2508:183:5",
                    "text": "@dev Emitted when USDC is claimed by a user\n @param user The user address\n @param pointsUsed The amount of points used\n @param usdcAmount The amount of USDC claimed"
                  },
                  "eventSelector": "eb9a8c68a32bc6989217e69f932cf098ff5d0e2f11305800394c73b554d2ce9e",
                  "id": 514,
                  "name": "USDCClaimed",
                  "nameLocation": "2700:11:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 513,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 508,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "2733:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "2717:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 507,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2717:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 510,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pointsUsed",
                        "nameLocation": "2751:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "2743:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 509,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2743:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 512,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "usdcAmount",
                        "nameLocation": "2775:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "2767:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 511,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2767:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:78:5"
                  },
                  "src": "2694:96:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 515,
                    "nodeType": "StructuredDocumentation",
                    "src": "2794:104:5",
                    "text": "@dev Emitted when USDC is deposited to the contract\n @param amount The amount of USDC deposited"
                  },
                  "eventSelector": "0f920186940a9c60ff07b508b49ba5dca2c647b29aebfa69964b44e5e873a62c",
                  "id": 519,
                  "name": "USDCDeposited",
                  "nameLocation": "2907:13:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 518,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 517,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2929:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 519,
                        "src": "2921:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 516,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2921:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2920:16:5"
                  },
                  "src": "2901:36:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 520,
                    "nodeType": "StructuredDocumentation",
                    "src": "2941:106:5",
                    "text": "@dev Emitted when USDC is withdrawn from the contract\n @param amount The amount of USDC withdrawn"
                  },
                  "eventSelector": "4eacc637a5fb1dbbc94595a9432e0a8d75ae5d51d189021963a6cc8575465ddf",
                  "id": 524,
                  "name": "USDCWithdrawn",
                  "nameLocation": "3056:13:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 523,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 522,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3078:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 524,
                        "src": "3070:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 521,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3070:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3069:16:5"
                  },
                  "src": "3050:36:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 525,
                    "nodeType": "StructuredDocumentation",
                    "src": "3090:40:5",
                    "text": "@dev Emitted when contract is paused"
                  },
                  "eventSelector": "ab35696f06e428ebc5ceba8cd17f8fed287baf43440206d1943af1ee53e6d267",
                  "id": 527,
                  "name": "ContractPaused",
                  "nameLocation": "3139:14:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 526,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3153:2:5"
                  },
                  "src": "3133:23:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 528,
                    "nodeType": "StructuredDocumentation",
                    "src": "3160:42:5",
                    "text": "@dev Emitted when contract is unpaused"
                  },
                  "eventSelector": "0e5e3b3fb504c22cf5c42fa07d521225937514c654007e1f12646f89768d6f94",
                  "id": 530,
                  "name": "ContractUnpaused",
                  "nameLocation": "3211:16:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 529,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3227:2:5"
                  },
                  "src": "3205:25:5"
                },
                {
                  "body": {
                    "id": 561,
                    "nodeType": "Block",
                    "src": "3483:187:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 540,
                            "name": "_usdcToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 533,
                            "src": "3493:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 543,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3515:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3507:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 541,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3507:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3507:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3493:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 550,
                        "nodeType": "IfStatement",
                        "src": "3489:68:5",
                        "trueBody": {
                          "id": 549,
                          "nodeType": "Block",
                          "src": "3519:38:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 546,
                                  "name": "InvalidAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 474,
                                  "src": "3534:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 547,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3534:16:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 548,
                              "nodeType": "RevertStatement",
                              "src": "3527:23:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 551,
                            "name": "usdcToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 457,
                            "src": "3563:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$225",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 553,
                                "name": "_usdcToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 533,
                                "src": "3582:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 552,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "3575:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3575:18:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$225",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "3563:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$225",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 556,
                        "nodeType": "ExpressionStatement",
                        "src": "3563:30:5"
                      },
                      {
                        "expression": {
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 557,
                            "name": "exchangeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 453,
                            "src": "3599:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3614:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3599:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 560,
                        "nodeType": "ExpressionStatement",
                        "src": "3599:16:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 531,
                    "nodeType": "StructuredDocumentation",
                    "src": "3294:134:5",
                    "text": "@dev Constructor to initialize the contract with USDC token address\n @param _usdcToken The address of the USDC token contract"
                  },
                  "id": 562,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 536,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3471:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3475:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3471:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 538,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 535,
                        "name": "Ownable",
                        "nameLocations": [
                          "3463:7:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "3463:7:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3463:19:5"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 534,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 533,
                        "mutability": "mutable",
                        "name": "_usdcToken",
                        "nameLocation": "3451:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 562,
                        "src": "3443:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 532,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3443:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3442:20:5"
                  },
                  "returnParameters": {
                    "id": 539,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3483:0:5"
                  },
                  "scope": 974,
                  "src": "3431:239:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 595,
                    "nodeType": "Block",
                    "src": "3973:166:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 573,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 565,
                              "src": "3996:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 572,
                            "name": "_validateAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 973,
                            "src": "3979:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3979:22:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 575,
                        "nodeType": "ExpressionStatement",
                        "src": "3979:22:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 576,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 567,
                            "src": "4012:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4022:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4012:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 583,
                        "nodeType": "IfStatement",
                        "src": "4008:54:5",
                        "trueBody": {
                          "id": 582,
                          "nodeType": "Block",
                          "src": "4025:37:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 579,
                                  "name": "InvalidAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 477,
                                  "src": "4040:13:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4040:15:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 581,
                              "nodeType": "RevertStatement",
                              "src": "4033:22:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 584,
                              "name": "pointBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 450,
                              "src": "4068:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 586,
                            "indexExpression": {
                              "id": 585,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 565,
                              "src": "4082:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4068:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 587,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 567,
                            "src": "4091:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4068:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 589,
                        "nodeType": "ExpressionStatement",
                        "src": "4068:29:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 591,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 565,
                              "src": "4121:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 592,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 567,
                              "src": "4127:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 590,
                            "name": "PointsAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "4109:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4109:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 594,
                        "nodeType": "EmitStatement",
                        "src": "4104:30:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 563,
                    "nodeType": "StructuredDocumentation",
                    "src": "3749:153:5",
                    "text": "@dev Adds points to a user's balance (only owner)\n @param user The user address to add points to\n @param amount The amount of points to add"
                  },
                  "functionSelector": "507cd30f",
                  "id": 596,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 570,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 569,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "3963:9:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "3963:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3963:9:5"
                    }
                  ],
                  "name": "addPoints",
                  "nameLocation": "3914:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 568,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 565,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "3932:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 596,
                        "src": "3924:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 564,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3924:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 567,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3946:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 596,
                        "src": "3938:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 566,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3938:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3923:30:5"
                  },
                  "returnParameters": {
                    "id": 571,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3973:0:5"
                  },
                  "scope": 974,
                  "src": "3905:234:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 645,
                    "nodeType": "Block",
                    "src": "4377:321:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 607,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 599,
                              "src": "4400:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 606,
                            "name": "_validateAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 973,
                            "src": "4383:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4383:22:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 609,
                        "nodeType": "ExpressionStatement",
                        "src": "4383:22:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 610,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 601,
                            "src": "4416:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4426:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4416:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 617,
                        "nodeType": "IfStatement",
                        "src": "4412:54:5",
                        "trueBody": {
                          "id": 616,
                          "nodeType": "Block",
                          "src": "4429:37:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 613,
                                  "name": "InvalidAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 477,
                                  "src": "4444:13:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 614,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4444:15:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 615,
                              "nodeType": "RevertStatement",
                              "src": "4437:22:5"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          619
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 619,
                            "mutability": "mutable",
                            "name": "currentBalance",
                            "nameLocation": "4480:14:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 645,
                            "src": "4472:22:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 618,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4472:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 623,
                        "initialValue": {
                          "baseExpression": {
                            "id": 620,
                            "name": "pointBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 450,
                            "src": "4497:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 622,
                          "indexExpression": {
                            "id": 621,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 599,
                            "src": "4511:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4497:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4472:44:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 624,
                            "name": "currentBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 619,
                            "src": "4526:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 625,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 601,
                            "src": "4543:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4526:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 633,
                        "nodeType": "IfStatement",
                        "src": "4522:93:5",
                        "trueBody": {
                          "id": 632,
                          "nodeType": "Block",
                          "src": "4551:64:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 628,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 601,
                                    "src": "4585:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 629,
                                    "name": "currentBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 619,
                                    "src": "4593:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 627,
                                  "name": "InsufficientPoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 464,
                                  "src": "4566:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (uint256,uint256) pure returns (error)"
                                  }
                                },
                                "id": 630,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4566:42:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 631,
                              "nodeType": "RevertStatement",
                              "src": "4559:49:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 634,
                              "name": "pointBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 450,
                              "src": "4621:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 636,
                            "indexExpression": {
                              "id": 635,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 599,
                              "src": "4635:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4621:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 637,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 601,
                            "src": "4644:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4621:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 639,
                        "nodeType": "ExpressionStatement",
                        "src": "4621:29:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 641,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 599,
                              "src": "4680:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 642,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "4686:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 640,
                            "name": "PointsTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 500,
                            "src": "4662:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4662:31:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 644,
                        "nodeType": "EmitStatement",
                        "src": "4657:36:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 597,
                    "nodeType": "StructuredDocumentation",
                    "src": "4143:158:5",
                    "text": "@dev Transfers points to a user (only owner)\n @param user The user address to transfer points to\n @param amount The amount of points to transfer"
                  },
                  "functionSelector": "326f823f",
                  "id": 646,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 604,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 603,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "4367:9:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "4367:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4367:9:5"
                    }
                  ],
                  "name": "transferPoints",
                  "nameLocation": "4313:14:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 602,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 599,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "4336:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 646,
                        "src": "4328:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 598,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4328:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 601,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4350:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 646,
                        "src": "4342:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 600,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4342:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4327:30:5"
                  },
                  "returnParameters": {
                    "id": 605,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4377:0:5"
                  },
                  "scope": 974,
                  "src": "4304:394:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 658,
                    "nodeType": "Block",
                    "src": "4905:37:5",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 654,
                            "name": "pointBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 450,
                            "src": "4918:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 656,
                          "indexExpression": {
                            "id": 655,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "4932:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4918:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 653,
                        "id": 657,
                        "nodeType": "Return",
                        "src": "4911:26:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 647,
                    "nodeType": "StructuredDocumentation",
                    "src": "4702:129:5",
                    "text": "@dev Gets the point balance of a user\n @param user The user address to check\n @return The point balance of the user"
                  },
                  "functionSelector": "5f42513c",
                  "id": 659,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPointBalance",
                  "nameLocation": "4843:15:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 650,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 649,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "4867:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 659,
                        "src": "4859:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 648,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4859:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4858:14:5"
                  },
                  "returnParameters": {
                    "id": 653,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 652,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 659,
                        "src": "4896:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 651,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4896:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4895:9:5"
                  },
                  "scope": 974,
                  "src": "4834:108:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 675,
                    "nodeType": "Block",
                    "src": "5220:63:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 667,
                            "name": "exchangeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 453,
                            "src": "5226:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 668,
                            "name": "rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 662,
                            "src": "5241:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5226:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 670,
                        "nodeType": "ExpressionStatement",
                        "src": "5226:19:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 672,
                              "name": "rate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 662,
                              "src": "5273:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 671,
                            "name": "ExchangeRateSet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 505,
                            "src": "5257:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5257:21:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 674,
                        "nodeType": "EmitStatement",
                        "src": "5252:26:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 660,
                    "nodeType": "StructuredDocumentation",
                    "src": "5029:130:5",
                    "text": "@dev Sets the exchange rate from points to USDC (only owner)\n @param rate The new exchange rate (1 point = rate USDC wei)"
                  },
                  "functionSelector": "db068e0e",
                  "id": 676,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 665,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 664,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "5210:9:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "5210:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5210:9:5"
                    }
                  ],
                  "name": "setExchangeRate",
                  "nameLocation": "5171:15:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 663,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 662,
                        "mutability": "mutable",
                        "name": "rate",
                        "nameLocation": "5195:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "5187:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 661,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5187:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5186:14:5"
                  },
                  "returnParameters": {
                    "id": 666,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5220:0:5"
                  },
                  "scope": 974,
                  "src": "5162:121:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 695,
                    "nodeType": "Block",
                    "src": "5545:96:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 684,
                            "name": "exchangeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 453,
                            "src": "5555:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5571:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5555:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 690,
                        "nodeType": "IfStatement",
                        "src": "5551:46:5",
                        "trueBody": {
                          "id": 689,
                          "nodeType": "Block",
                          "src": "5574:23:5",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 687,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5589:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 683,
                              "id": 688,
                              "nodeType": "Return",
                              "src": "5582:8:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 691,
                            "name": "pointAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 679,
                            "src": "5610:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 692,
                            "name": "exchangeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 453,
                            "src": "5624:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5610:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 683,
                        "id": 694,
                        "nodeType": "Return",
                        "src": "5603:33:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 677,
                    "nodeType": "StructuredDocumentation",
                    "src": "5287:165:5",
                    "text": "@dev Calculates the USDC amount for a given point amount\n @param pointAmount The amount of points to convert\n @return The equivalent USDC amount in wei"
                  },
                  "functionSelector": "4cabb824",
                  "id": 696,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calculateUSDCAmount",
                  "nameLocation": "5464:19:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 680,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 679,
                        "mutability": "mutable",
                        "name": "pointAmount",
                        "nameLocation": "5497:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "5489:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 678,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5489:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5483:29:5"
                  },
                  "returnParameters": {
                    "id": 683,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 682,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "5536:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 681,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5536:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5535:9:5"
                  },
                  "scope": 974,
                  "src": "5455:186:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 790,
                    "nodeType": "Block",
                    "src": "5917:947:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 707,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5940:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5944:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5940:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 706,
                            "name": "_validateAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 973,
                            "src": "5923:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5923:28:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 710,
                        "nodeType": "ExpressionStatement",
                        "src": "5923:28:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 711,
                            "name": "pointAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "5962:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5977:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5962:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 718,
                        "nodeType": "IfStatement",
                        "src": "5958:59:5",
                        "trueBody": {
                          "id": 717,
                          "nodeType": "Block",
                          "src": "5980:37:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 714,
                                  "name": "InvalidAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 477,
                                  "src": "5995:13:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5995:15:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 716,
                              "nodeType": "RevertStatement",
                              "src": "5988:22:5"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 719,
                            "name": "exchangeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 453,
                            "src": "6064:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6080:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6064:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 726,
                        "nodeType": "IfStatement",
                        "src": "6060:65:5",
                        "trueBody": {
                          "id": 725,
                          "nodeType": "Block",
                          "src": "6083:42:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 722,
                                  "name": "ExchangeRateNotSet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 480,
                                  "src": "6098:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6098:20:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 724,
                              "nodeType": "RevertStatement",
                              "src": "6091:27:5"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          728
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 728,
                            "mutability": "mutable",
                            "name": "userBalance",
                            "nameLocation": "6173:11:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 790,
                            "src": "6165:19:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 727,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6165:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 733,
                        "initialValue": {
                          "baseExpression": {
                            "id": 729,
                            "name": "pointBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 450,
                            "src": "6187:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 732,
                          "indexExpression": {
                            "expression": {
                              "id": 730,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6201:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6205:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6201:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6187:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6165:47:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 734,
                            "name": "userBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 728,
                            "src": "6222:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 735,
                            "name": "pointAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "6236:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6222:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 743,
                        "nodeType": "IfStatement",
                        "src": "6218:97:5",
                        "trueBody": {
                          "id": 742,
                          "nodeType": "Block",
                          "src": "6249:66:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 738,
                                    "name": "pointAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 699,
                                    "src": "6283:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 739,
                                    "name": "userBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 728,
                                    "src": "6296:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 737,
                                  "name": "InsufficientPoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 464,
                                  "src": "6264:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (uint256,uint256) pure returns (error)"
                                  }
                                },
                                "id": 740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6264:44:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 741,
                              "nodeType": "RevertStatement",
                              "src": "6257:51:5"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          745
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 745,
                            "mutability": "mutable",
                            "name": "usdcAmount",
                            "nameLocation": "6358:10:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 790,
                            "src": "6350:18:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 744,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6350:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 749,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 746,
                            "name": "pointAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "6371:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 747,
                            "name": "exchangeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 453,
                            "src": "6385:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6371:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6350:47:5"
                      },
                      {
                        "assignments": [
                          751
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 751,
                            "mutability": "mutable",
                            "name": "contractUSDCBalance",
                            "nameLocation": "6449:19:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 790,
                            "src": "6441:27:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 750,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6441:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 759,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 756,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6499:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_USDCRewardContract_$974",
                                    "typeString": "contract USDCRewardContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_USDCRewardContract_$974",
                                    "typeString": "contract USDCRewardContract"
                                  }
                                ],
                                "id": 755,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6491:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 754,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6491:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6491:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 752,
                              "name": "usdcToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "6471:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$225",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6481:9:5",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 182,
                            "src": "6471:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6471:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6441:64:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 760,
                            "name": "contractUSDCBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 751,
                            "src": "6515:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 761,
                            "name": "usdcAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 745,
                            "src": "6537:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6515:32:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 769,
                        "nodeType": "IfStatement",
                        "src": "6511:116:5",
                        "trueBody": {
                          "id": 768,
                          "nodeType": "Block",
                          "src": "6549:78:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 764,
                                    "name": "usdcAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 745,
                                    "src": "6588:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 765,
                                    "name": "contractUSDCBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 751,
                                    "src": "6600:19:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 763,
                                  "name": "InsufficientUSDCBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 471,
                                  "src": "6564:23:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (uint256,uint256) pure returns (error)"
                                  }
                                },
                                "id": 766,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6564:56:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 767,
                              "nodeType": "RevertStatement",
                              "src": "6557:63:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 770,
                              "name": "pointBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 450,
                              "src": "6668:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 773,
                            "indexExpression": {
                              "expression": {
                                "id": 771,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6682:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6686:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6682:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6668:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 774,
                            "name": "pointAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "6697:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6668:40:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 776,
                        "nodeType": "ExpressionStatement",
                        "src": "6668:40:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 778,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6758:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 779,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6762:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6758:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 780,
                              "name": "usdcAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 745,
                              "src": "6770:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 777,
                            "name": "_transferUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 955,
                            "src": "6744:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6744:37:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 782,
                        "nodeType": "ExpressionStatement",
                        "src": "6744:37:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 784,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6823:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6827:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6823:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 786,
                              "name": "pointAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 699,
                              "src": "6835:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 787,
                              "name": "usdcAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 745,
                              "src": "6848:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 783,
                            "name": "USDCClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 514,
                            "src": "6811:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6811:48:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 789,
                        "nodeType": "EmitStatement",
                        "src": "6806:53:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 697,
                    "nodeType": "StructuredDocumentation",
                    "src": "5714:124:5",
                    "text": "@dev Allows users to claim USDC by spending their points\n @param pointAmount The amount of points to spend for USDC"
                  },
                  "functionSelector": "6e5f4a89",
                  "id": 791,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 702,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 701,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "5890:13:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 288,
                        "src": "5890:13:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5890:13:5"
                    },
                    {
                      "id": 704,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 703,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "5904:12:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 396,
                        "src": "5904:12:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5904:12:5"
                    }
                  ],
                  "name": "claimUSDC",
                  "nameLocation": "5850:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 700,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "pointAmount",
                        "nameLocation": "5868:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 791,
                        "src": "5860:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5860:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5859:21:5"
                  },
                  "returnParameters": {
                    "id": 705,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5917:0:5"
                  },
                  "scope": 974,
                  "src": "5841:1023:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 837,
                    "nodeType": "Block",
                    "src": "7109:325:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 799,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 794,
                            "src": "7119:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7129:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7119:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 806,
                        "nodeType": "IfStatement",
                        "src": "7115:54:5",
                        "trueBody": {
                          "id": 805,
                          "nodeType": "Block",
                          "src": "7132:37:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 802,
                                  "name": "InvalidAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 477,
                                  "src": "7147:13:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7147:15:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 804,
                              "nodeType": "RevertStatement",
                              "src": "7140:22:5"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          808
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 808,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "7224:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 837,
                            "src": "7219:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 807,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "7219:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 819,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 811,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7257:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7261:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7257:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 815,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7277:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_USDCRewardContract_$974",
                                    "typeString": "contract USDCRewardContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_USDCRewardContract_$974",
                                    "typeString": "contract USDCRewardContract"
                                  }
                                ],
                                "id": 814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7269:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 813,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7269:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7269:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 817,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 794,
                              "src": "7284:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 809,
                              "name": "usdcToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "7234:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$225",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7244:12:5",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 224,
                            "src": "7234:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7234:57:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7219:72:5"
                      },
                      {
                        "condition": {
                          "id": 821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "7301:8:5",
                          "subExpression": {
                            "id": 820,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 808,
                            "src": "7302:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 832,
                        "nodeType": "IfStatement",
                        "src": "7297:100:5",
                        "trueBody": {
                          "id": 831,
                          "nodeType": "Block",
                          "src": "7311:86:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 823,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 794,
                                    "src": "7350:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 826,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "7378:3:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 827,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7382:6:5",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "7378:10:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 824,
                                        "name": "usdcToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 457,
                                        "src": "7358:9:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$225",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 825,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "7368:9:5",
                                      "memberName": "balanceOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 182,
                                      "src": "7358:19:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view external returns (uint256)"
                                      }
                                    },
                                    "id": 828,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7358:31:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 822,
                                  "name": "InsufficientUSDCBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 471,
                                  "src": "7326:23:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (uint256,uint256) pure returns (error)"
                                  }
                                },
                                "id": 829,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7326:64:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 830,
                              "nodeType": "RevertStatement",
                              "src": "7319:71:5"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 834,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 794,
                              "src": "7422:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 833,
                            "name": "USDCDeposited",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 519,
                            "src": "7408:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7408:21:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 836,
                        "nodeType": "EmitStatement",
                        "src": "7403:26:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 792,
                    "nodeType": "StructuredDocumentation",
                    "src": "6949:101:5",
                    "text": "@dev Deposits USDC to the contract (only owner)\n @param amount The amount of USDC to deposit"
                  },
                  "functionSelector": "f688bcfb",
                  "id": 838,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 797,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 796,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "7099:9:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "7099:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7099:9:5"
                    }
                  ],
                  "name": "depositUSDC",
                  "nameLocation": "7062:11:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 795,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 794,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "7082:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 838,
                        "src": "7074:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 793,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7074:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7073:16:5"
                  },
                  "returnParameters": {
                    "id": 798,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7109:0:5"
                  },
                  "scope": 974,
                  "src": "7053:381:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 896,
                    "nodeType": "Block",
                    "src": "7603:499:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 846,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 841,
                            "src": "7613:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7623:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7613:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 853,
                        "nodeType": "IfStatement",
                        "src": "7609:54:5",
                        "trueBody": {
                          "id": 852,
                          "nodeType": "Block",
                          "src": "7626:37:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 849,
                                  "name": "InvalidAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 477,
                                  "src": "7641:13:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 850,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7641:15:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 851,
                              "nodeType": "RevertStatement",
                              "src": "7634:22:5"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          855
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 855,
                            "mutability": "mutable",
                            "name": "contractBalance",
                            "nameLocation": "7714:15:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 896,
                            "src": "7706:23:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 854,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7706:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 863,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 860,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7760:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_USDCRewardContract_$974",
                                    "typeString": "contract USDCRewardContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_USDCRewardContract_$974",
                                    "typeString": "contract USDCRewardContract"
                                  }
                                ],
                                "id": 859,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7752:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 858,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7752:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7752:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 856,
                              "name": "usdcToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "7732:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$225",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7742:9:5",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 182,
                            "src": "7732:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7732:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7706:60:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 864,
                            "name": "contractBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 855,
                            "src": "7776:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 865,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 841,
                            "src": "7794:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7776:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 873,
                        "nodeType": "IfStatement",
                        "src": "7772:100:5",
                        "trueBody": {
                          "id": 872,
                          "nodeType": "Block",
                          "src": "7802:70:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 868,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 841,
                                    "src": "7841:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 869,
                                    "name": "contractBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 855,
                                    "src": "7849:15:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 867,
                                  "name": "InsufficientUSDCBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 471,
                                  "src": "7817:23:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (uint256,uint256) pure returns (error)"
                                  }
                                },
                                "id": 870,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7817:48:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 871,
                              "nodeType": "RevertStatement",
                              "src": "7810:55:5"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          875
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 875,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "7927:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 896,
                            "src": "7922:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 874,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "7922:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 882,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 878,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7956:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7960:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7956:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 880,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 841,
                              "src": "7968:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 876,
                              "name": "usdcToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "7937:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$225",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7947:8:5",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 192,
                            "src": "7937:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7937:38:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7922:53:5"
                      },
                      {
                        "condition": {
                          "id": 884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "7985:8:5",
                          "subExpression": {
                            "id": 883,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 875,
                            "src": "7986:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 891,
                        "nodeType": "IfStatement",
                        "src": "7981:84:5",
                        "trueBody": {
                          "id": 890,
                          "nodeType": "Block",
                          "src": "7995:70:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 886,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 841,
                                    "src": "8034:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 887,
                                    "name": "contractBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 855,
                                    "src": "8042:15:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 885,
                                  "name": "InsufficientUSDCBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 471,
                                  "src": "8010:23:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (uint256,uint256) pure returns (error)"
                                  }
                                },
                                "id": 888,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8010:48:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 889,
                              "nodeType": "RevertStatement",
                              "src": "8003:55:5"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 893,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 841,
                              "src": "8090:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 892,
                            "name": "USDCWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 524,
                            "src": "8076:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8076:21:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 895,
                        "nodeType": "EmitStatement",
                        "src": "8071:26:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 839,
                    "nodeType": "StructuredDocumentation",
                    "src": "7438:105:5",
                    "text": "@dev Withdraws USDC from the contract (only owner)\n @param amount The amount of USDC to withdraw"
                  },
                  "functionSelector": "db81f99b",
                  "id": 897,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 844,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 843,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "7593:9:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "7593:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7593:9:5"
                    }
                  ],
                  "name": "withdrawUSDC",
                  "nameLocation": "7555:12:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 842,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 841,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "7576:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 897,
                        "src": "7568:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 840,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7568:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7567:16:5"
                  },
                  "returnParameters": {
                    "id": 845,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7603:0:5"
                  },
                  "scope": 974,
                  "src": "7546:556:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 909,
                    "nodeType": "Block",
                    "src": "8366:46:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 903,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 346,
                            "src": "8372:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8372:8:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 905,
                        "nodeType": "ExpressionStatement",
                        "src": "8372:8:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 906,
                            "name": "ContractPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 527,
                            "src": "8391:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8391:16:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 908,
                        "nodeType": "EmitStatement",
                        "src": "8386:21:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 898,
                    "nodeType": "StructuredDocumentation",
                    "src": "8178:149:5",
                    "text": "@dev Pauses the contract (only owner)\n @notice When paused, user functions like claimUSDC are disabled, but admin functions remain available"
                  },
                  "functionSelector": "8456cb59",
                  "id": 910,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 901,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 900,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "8356:9:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "8356:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8356:9:5"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "8339:5:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 899,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8344:2:5"
                  },
                  "returnParameters": {
                    "id": 902,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8366:0:5"
                  },
                  "scope": 974,
                  "src": "8330:82:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 922,
                    "nodeType": "Block",
                    "src": "8553:50:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 916,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 362,
                            "src": "8559:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8559:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 918,
                        "nodeType": "ExpressionStatement",
                        "src": "8559:10:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 919,
                            "name": "ContractUnpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 530,
                            "src": "8580:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8580:18:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 921,
                        "nodeType": "EmitStatement",
                        "src": "8575:23:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 911,
                    "nodeType": "StructuredDocumentation",
                    "src": "8416:96:5",
                    "text": "@dev Unpauses the contract (only owner)\n @notice Restores normal contract functionality"
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 923,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 914,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 913,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "8543:9:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "8543:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8543:9:5"
                    }
                  ],
                  "name": "unpause",
                  "nameLocation": "8524:7:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 912,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8531:2:5"
                  },
                  "returnParameters": {
                    "id": 915,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8553:0:5"
                  },
                  "scope": 974,
                  "src": "8515:88:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 954,
                    "nodeType": "Block",
                    "src": "8888:188:5",
                    "statements": [
                      {
                        "assignments": [
                          932
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 932,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "8899:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 954,
                            "src": "8894:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 931,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "8894:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 938,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 935,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 926,
                              "src": "8928:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 936,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 928,
                              "src": "8932:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 933,
                              "name": "usdcToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "8909:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$225",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8919:8:5",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 192,
                            "src": "8909:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8909:30:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8894:45:5"
                      },
                      {
                        "condition": {
                          "id": 940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "8949:8:5",
                          "subExpression": {
                            "id": 939,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 932,
                            "src": "8950:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 953,
                        "nodeType": "IfStatement",
                        "src": "8945:127:5",
                        "trueBody": {
                          "id": 952,
                          "nodeType": "Block",
                          "src": "8959:113:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 942,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 928,
                                    "src": "9007:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 947,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "9051:4:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_USDCRewardContract_$974",
                                              "typeString": "contract USDCRewardContract"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_USDCRewardContract_$974",
                                              "typeString": "contract USDCRewardContract"
                                            }
                                          ],
                                          "id": 946,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "9043:7:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 945,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "9043:7:5",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 948,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9043:13:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 943,
                                        "name": "usdcToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 457,
                                        "src": "9023:9:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$225",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 944,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "9033:9:5",
                                      "memberName": "balanceOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 182,
                                      "src": "9023:19:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view external returns (uint256)"
                                      }
                                    },
                                    "id": 949,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9023:34:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 941,
                                  "name": "InsufficientUSDCBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 471,
                                  "src": "8974:23:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (uint256,uint256) pure returns (error)"
                                  }
                                },
                                "id": 950,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8974:91:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 951,
                              "nodeType": "RevertStatement",
                              "src": "8967:98:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 924,
                    "nodeType": "StructuredDocumentation",
                    "src": "8674:152:5",
                    "text": "@dev Internal function to transfer USDC to a user\n @param to The address to transfer USDC to\n @param amount The amount of USDC to transfer"
                  },
                  "id": 955,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferUSDC",
                  "nameLocation": "8838:13:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 929,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 926,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "8860:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 955,
                        "src": "8852:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 925,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8852:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 928,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "8872:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 955,
                        "src": "8864:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 927,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8864:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8851:28:5"
                  },
                  "returnParameters": {
                    "id": 930,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8888:0:5"
                  },
                  "scope": 974,
                  "src": "8829:247:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 972,
                    "nodeType": "Block",
                    "src": "9224:72:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 961,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 958,
                            "src": "9234:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 964,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9250:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9242:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 962,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9242:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9242:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9234:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 971,
                        "nodeType": "IfStatement",
                        "src": "9230:62:5",
                        "trueBody": {
                          "id": 970,
                          "nodeType": "Block",
                          "src": "9254:38:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 967,
                                  "name": "InvalidAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 474,
                                  "src": "9269:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 968,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9269:16:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 969,
                              "nodeType": "RevertStatement",
                              "src": "9262:23:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 956,
                    "nodeType": "StructuredDocumentation",
                    "src": "9080:88:5",
                    "text": "@dev Validates that an address is not zero\n @param addr The address to validate"
                  },
                  "id": 973,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_validateAddress",
                  "nameLocation": "9180:16:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 959,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 958,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "9205:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 973,
                        "src": "9197:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 957,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9197:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9196:14:5"
                  },
                  "returnParameters": {
                    "id": 960,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9224:0:5"
                  },
                  "scope": 974,
                  "src": "9171:125:5",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 975,
              "src": "435:8863:5",
              "usedErrors": [
                13,
                18,
                277,
                280,
                377,
                464,
                471,
                474,
                477,
                480,
                483,
                486
              ],
              "usedEvents": [
                24,
                269,
                274,
                493,
                500,
                505,
                514,
                519,
                524,
                527,
                530
              ]
            }
          ],
          "src": "32:9267:5"
        },
        "id": 5
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"
        }
      },
      "contracts/USDCRewardContract.sol": {
        "USDCRewardContract": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_usdcToken",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "ContractIsPaused",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExchangeRateNotSet",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "required",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "available",
                  "type": "uint256"
                }
              ],
              "name": "InsufficientPoints",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "required",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "available",
                  "type": "uint256"
                }
              ],
              "name": "InsufficientUSDCBalance",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidAddress",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidAmount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Unauthorized",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [],
              "name": "ContractPaused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [],
              "name": "ContractUnpaused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newRate",
                  "type": "uint256"
                }
              ],
              "name": "ExchangeRateSet",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "PointsAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "PointsTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "pointsUsed",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "usdcAmount",
                  "type": "uint256"
                }
              ],
              "name": "USDCClaimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "USDCDeposited",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "USDCWithdrawn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "addPoints",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "pointAmount",
                  "type": "uint256"
                }
              ],
              "name": "calculateUSDCAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "pointAmount",
                  "type": "uint256"
                }
              ],
              "name": "claimUSDC",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "depositUSDC",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getPointBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                }
              ],
              "name": "setExchangeRate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferPoints",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawUSDC",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 204,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_address_fromMemory": {
                  "entryPoint": 219,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": 780,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple": {
                  "entryPoint": 329,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 793,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 134,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 52,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": 171,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_address": {
                  "entryPoint": 906,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": 696,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by": {
                  "entryPoint": 283,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 160,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": 467,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "constant_NOT_ENTERED": {
                  "entryPoint": 727,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "constructor_Ownable": {
                  "entryPoint": 815,
                  "id": 50,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "constructor_Pausable": {
                  "entryPoint": 769,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "constructor_ReentrancyGuard": {
                  "entryPoint": 740,
                  "id": 385,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "constructor_USDCRewardContract": {
                  "entryPoint": 584,
                  "id": 562,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "convert_address_to_address": {
                  "entryPoint": 962,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_contract_IERC20": {
                  "entryPoint": 375,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_IERC20_to_contract_IERC20": {
                  "entryPoint": 420,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 317,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 289,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": 699,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_rational_by_to_t_uint256": {
                  "entryPoint": 470,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 950,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_contract_IERC20": {
                  "entryPoint": 363,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 335,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 521,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_arguments_for_constructor_object_USDCRewardContract": {
                  "entryPoint": 250,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_address": {
                  "entryPoint": 917,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 95,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_transferOwnership": {
                  "entryPoint": 1009,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": 286,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 73,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": 974,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_contract_IERC20": {
                  "entryPoint": 432,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint256": {
                  "entryPoint": 549,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": 937,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 58,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 155,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 63,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 387,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": 900,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 498,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_0": {
                  "entryPoint": 393,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_address_to_address": {
                  "entryPoint": 977,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_contract_IERC20_to_contract_IERC20": {
                  "entryPoint": 435,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_uint256_to_uint256": {
                  "entryPoint": 552,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 183,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040523461002f576100196100146100fa565b610248565b610021610034565b611870610453823961187090f35b61003a565b60405190565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b906100699061003f565b810190811060018060401b0382111761008157604052565b610049565b90610099610092610034565b928361005f565b565b600080fd5b60018060a01b031690565b6100b4906100a0565b90565b6100c0816100ab565b036100c757565b600080fd5b905051906100d9826100b7565b565b906020828203126100f5576100f2916000016100cc565b90565b61009b565b610118611cc38038038061010d81610086565b9283398101906100db565b90565b90565b90565b61013561013061013a9261011b565b61011e565b6100a0565b90565b61014690610121565b90565b60000190565b61016361015e610168926100a0565b61011e565b6100a0565b90565b6101749061014f565b90565b6101809061016b565b90565b60001b90565b9061019a60018060a01b0391610183565b9181191691161790565b6101ad9061016b565b90565b90565b906101c86101c36101cf926101a4565b6101b0565b8254610189565b9055565b90565b6101ea6101e56101ef9261011b565b61011e565b6101d3565b90565b906101ff60001991610183565b9181191691161790565b61021d610218610222926101d3565b61011e565b6101d3565b90565b90565b9061023d61023861024492610209565b610225565b82546101f2565b9055565b610251336102e4565b8061026d610267610262600061013d565b6100ab565b916100ab565b1461029b5761027e61028591610177565b60046101b3565b61029961029260006101d6565b6003610228565b565b600063e6c4247b60e01b8152806102b460048201610149565b0390fd5b90565b6102cf6102ca6102d4926102b8565b61011e565b6101d3565b90565b6102e160016102bb565b90565b6102ed90610301565b6102ff6102f86102d7565b6001610228565b565b61030a9061032f565b565b610315906100ab565b9052565b919061032d9060006020850194019061030c565b565b8061034b610345610340600061013d565b6100ab565b916100ab565b1461035b57610359906103f1565b565b610380610368600061013d565b6000918291631e4fbdf760e01b835260048301610319565b0390fd5b60001c90565b60018060a01b031690565b6103a16103a691610384565b61038a565b90565b6103b39054610395565b90565b6103bf9061014f565b90565b6103cb906103b6565b90565b90565b906103e66103e16103ed926103c2565b6103ce565b8254610189565b9055565b6103fb60006103a9565b6104068260006103d1565b9061043a6104347f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0936103c2565b916103c2565b91610443610034565b8061044d81610149565b0390a356fe60806040526004361015610013575b610539565b61001e6000356100fd565b8063326f823f146100f85780633f4ba83a146100f35780634cabb824146100ee578063507cd30f146100e95780635c975abb146100e45780635f42513c146100df5780636e5f4a89146100da578063715018a6146100d55780638456cb59146100d05780638da5cb5b146100cb578063db068e0e146100c6578063db81f99b146100c1578063f2fde38b146100bc5763f688bcfb0361000e57610506565b6104d3565b6104a0565b61046d565b610438565b6103e2565b6103af565b61037c565b610347565b6102f3565b610297565b610262565b6101ed565b6101a9565b60e01c90565b60405190565b600080fd5b600080fd5b60018060a01b031690565b61012790610113565b90565b6101338161011e565b0361013a57565b600080fd5b9050359061014c8261012a565b565b90565b61015a8161014e565b0361016157565b600080fd5b9050359061017382610151565b565b919060408382031261019e578061019261019b926000860161013f565b93602001610166565b90565b61010e565b60000190565b346101d8576101c26101bc366004610175565b9061079d565b6101ca610103565b806101d4816101a3565b0390f35b610109565b60009103126101e857565b61010e565b3461021b576101fd3660046101dd565b6102056107fb565b61020d610103565b80610217816101a3565b0390f35b610109565b9060208282031261023a5761023791600001610166565b90565b61010e565b6102489061014e565b9052565b91906102609060006020850194019061023f565b565b346102925761028e61027d610278366004610220565b61083f565b610285610103565b9182918261024c565b0390f35b610109565b346102c6576102b06102aa366004610175565b90610973565b6102b8610103565b806102c2816101a3565b0390f35b610109565b151590565b6102d9906102cb565b9052565b91906102f1906000602085019401906102d0565b565b34610323576103033660046101dd565b61031f61030e6109b1565b610316610103565b918291826102dd565b0390f35b610109565b906020828203126103425761033f9160000161013f565b90565b61010e565b346103775761037361036261035d366004610328565b6109c7565b61036a610103565b9182918261024c565b0390f35b610109565b346103aa5761039461038f366004610220565b610d09565b61039c610103565b806103a6816101a3565b0390f35b610109565b346103dd576103bf3660046101dd565b6103c7610d62565b6103cf610103565b806103d9816101a3565b0390f35b610109565b34610410576103f23660046101dd565b6103fa610dbe565b610402610103565b8061040c816101a3565b0390f35b610109565b61041e9061011e565b9052565b919061043690600060208501940190610415565b565b34610468576104483660046101dd565b610464610453610df9565b61045b610103565b91829182610422565b0390f35b610109565b3461049b57610485610480366004610220565b610e68565b61048d610103565b80610497816101a3565b0390f35b610109565b346104ce576104b86104b3366004610220565b6110e0565b6104c0610103565b806104ca816101a3565b0390f35b610109565b34610501576104eb6104e6366004610328565b611153565b6104f3610103565b806104fd816101a3565b0390f35b610109565b346105345761051e610519366004610220565b611361565b610526610103565b80610530816101a3565b0390f35b610109565b600080fd5b906105509161054b61136c565b6106a5565b565b90565b90565b61056c61056761057192610552565b610555565b61014e565b90565b61058861058361058d92610113565b610555565b610113565b90565b61059990610574565b90565b6105a590610590565b90565b906105b29061059c565b600052602052604060002090565b60001c90565b90565b6105d56105da916105c0565b6105c6565b90565b6105e790546105c9565b90565b91602061060c9294936106056040820196600083019061023f565b019061023f565b565b634e487b7160e01b600052601160045260246000fd5b6106336106399193929361014e565b9261014e565b820391821161064457565b61060e565b60001b90565b9061065c60001991610649565b9181191691161790565b61067a61067561067f9261014e565b610555565b61014e565b90565b90565b9061069a6106956106a192610666565b610682565b825461064f565b9055565b6106ae816113bb565b816106c26106bc6000610558565b9161014e565b14610780576106db6106d6600283906105a8565b6105dd565b806106ee6106e88561014e565b9161014e565b10610760575061071c82610716610707600285906105a8565b91610711836105dd565b610624565b90610685565b61075b6107497f2254df2302625e26a2b6c7e8e9df285aae8492e23f60fdd9b01f7bd6aeb7b5ea9261059c565b92610752610103565b9182918261024c565b0390a2565b8261077c6000928392638059c74760e01b8452600484016105ea565b0390fd5b600063162908e360e11b815280610799600482016101a3565b0390fd5b906107a79161053e565b565b6107b161136c565b6107b96107bb565b565b6107c36114a8565b7f0e5e3b3fb504c22cf5c42fa07d521225937514c654007e1f12646f89768d6f946107ec610103565b806107f6816101a3565b0390a1565b6108036107a9565b565b600090565b61081961081f9193929361014e565b9261014e565b9161082b83820261014e565b92818404149015171561083a57565b61060e565b610847610805565b5061085260036105dd565b61086561085f6000610558565b9161014e565b146108815761087e9061087860036105dd565b9061080a565b90565b5061088c6000610558565b90565b906108a19161089c61136c565b6108c8565b565b6108b26108b89193929361014e565b9261014e565b82018092116108c357565b61060e565b6108d1816113bb565b816108e56108df6000610558565b9161014e565b14610956576109128261090c6108fd600285906105a8565b91610907836105dd565b6108a3565b90610685565b61095161093f7f0fe6fcb45adaaa54f7e3491f6a7964049817f1e437f33587e634a4629fbcf3a69261059c565b92610948610103565b9182918261024c565b0390a2565b600063162908e360e11b81528061096f600482016101a3565b0390fd5b9061097d9161088f565b565b600090565b60a01c90565b60ff1690565b61099c6109a191610984565b61098a565b90565b6109ae9054610990565b90565b6109b961097f565b506109c460006109a4565b90565b6109de6109e3916109d6610805565b5060026105a8565b6105dd565b90565b6109f7906109f26114b2565b6109f9565b565b610a0a90610a05611509565b610ae6565b610a1261158e565b565b60018060a01b031690565b610a2b610a30916105c0565b610a14565b90565b610a3d9054610a1f565b90565b610a4990610590565b90565b610a5590610590565b90565b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b90610a8290610a58565b810190811067ffffffffffffffff821117610a9c57604052565b610a62565b60e01b90565b90505190610ab482610151565b565b90602082820312610ad057610acd91600001610aa7565b90565b61010e565b610add610103565b3d6000823e3d90fd5b610aef336113bb565b80610b03610afd6000610558565b9161014e565b14610cec57610b1260036105dd565b610b25610b1f6000610558565b9161014e565b14610ccf57610b3e610b39600233906105a8565b6105dd565b80610b51610b4b8461014e565b9161014e565b10610caf5750610b6b81610b6560036105dd565b9061080a565b90610bb56020610b83610b7e6004610a33565b610a40565b6370a0823190610baa610b9530610a4c565b92610b9e610103565b95869485938493610aa1565b835260048301610422565b03915afa908115610caa57600091610c7c575b5080610bdc610bd68561014e565b9161014e565b10610c5c5750610c0a81610c04610bf5600233906105a8565b91610bff836105dd565b610624565b90610685565b610c153383906115a2565b339091610c427feb9a8c68a32bc6989217e69f932cf098ff5d0e2f11305800394c73b554d2ce9e9261059c565b92610c57610c4e610103565b928392836105ea565b0390a2565b82610c786000928392630722f6b360e11b8452600484016105ea565b0390fd5b610c9d915060203d8111610ca3575b610c958183610a78565b810190610ab6565b38610bc8565b503d610c8b565b610ad5565b90610ccb6000928392638059c74760e01b8452600484016105ea565b0390fd5b60006362f216e560e01b815280610ce8600482016101a3565b0390fd5b600063162908e360e11b815280610d05600482016101a3565b0390fd5b610d12906109e6565b565b610d1c61136c565b610d24610d4e565b565b610d3a610d35610d3f92610552565b610555565b610113565b90565b610d4b90610d26565b90565b610d60610d5b6000610d42565b61172d565b565b610d6a610d14565b565b610d7461136c565b610d7c610d7e565b565b610d866117ef565b7fab35696f06e428ebc5ceba8cd17f8fed287baf43440206d1943af1ee53e6d267610daf610103565b80610db9816101a3565b0390a1565b610dc6610d6c565b565b600090565b60018060a01b031690565b610de4610de9916105c0565b610dcd565b90565b610df69054610dd8565b90565b610e01610dc8565b50610e0c6000610dec565b90565b610e2090610e1b61136c565b610e22565b565b610e2d816003610685565b610e637f972aba470577c14606bbf4bbdec1fed4925f242fcef40b4a8d242983365d029191610e5a610103565b9182918261024c565b0390a1565b610e7190610e0f565b565b610e8490610e7f61136c565b610eed565b565b610e8f816102cb565b03610e9657565b600080fd5b90505190610ea882610e86565b565b90602082820312610ec457610ec191600001610e9b565b90565b61010e565b916020610eeb929493610ee460408201966000830190610415565b019061023f565b565b80610f01610efb6000610558565b9161014e565b146110c357610f4f6020610f1d610f186004610a33565b610a40565b6370a0823190610f44610f2f30610a4c565b92610f38610103565b95869485938493610aa1565b835260048301610422565b03915afa9081156110be57600091611090575b5080610f76610f708461014e565b9161014e565b1061107057610f8d610f886004610a33565b610a40565b602063a9059cbb913390610fb560008795610fc0610fa9610103565b97889687958694610aa1565b845260048401610ec9565b03925af1801561106b57610fdd9160009161103d575b50156102cb565b61101d57506110187f4eacc637a5fb1dbbc94595a9432e0a8d75ae5d51d189021963a6cc8575465ddf9161100f610103565b9182918261024c565b0390a1565b906110396000928392630722f6b360e11b8452600484016105ea565b0390fd5b61105e915060203d8111611064575b6110568183610a78565b810190610eaa565b38610fd6565b503d61104c565b610ad5565b9061108c6000928392630722f6b360e11b8452600484016105ea565b0390fd5b6110b1915060203d81116110b7575b6110a98183610a78565b810190610ab6565b38610f62565b503d61109f565b610ad5565b600063162908e360e11b8152806110dc600482016101a3565b0390fd5b6110e990610e73565b565b6110fc906110f761136c565b6110fe565b565b8061111a61111461110f6000610d42565b61011e565b9161011e565b1461112a576111289061172d565b565b61114f6111376000610d42565b6000918291631e4fbdf760e01b835260048301610422565b0390fd5b61115c906110eb565b565b61116f9061116a61136c565b6111a4565b565b60409061119b6111a2949695939661119160608401986000850190610415565b6020830190610415565b019061023f565b565b806111b86111b26000610558565b9161014e565b14611344576111cf6111ca6004610a33565b610a40565b60206323b872dd91339061120060006111e730610a4c565b9561120b886111f4610103565b98899788968795610aa1565b855260048501611171565b03925af1801561133f5761122891600091611311575b50156102cb565b611267576112627f0f920186940a9c60ff07b508b49ba5dca2c647b29aebfa69964b44e5e873a62c91611259610103565b9182918261024c565b0390a1565b6112a990602061127f61127a6004610a33565b610a40565b6370a082319061129e3392611292610103565b96879485938493610aa1565b835260048301610422565b03915afa91821561130c576000926112dc575b506112d86000928392630722f6b360e11b8452600484016105ea565b0390fd5b6112fe91925060203d8111611305575b6112f68183610a78565b810190610ab6565b90826112bc565b503d6112ec565b610ad5565b611332915060203d8111611338575b61132a8183610a78565b810190610eaa565b38611221565b503d611320565b610ad5565b600063162908e360e11b81528061135d600482016101a3565b0390fd5b61136a9061115e565b565b611374610df9565b61138d6113876113826117f9565b61011e565b9161011e565b0361139457565b6113b761139f6117f9565b600091829163118cdaa760e01b835260048301610422565b0390fd5b6113d66113d06113cb6000610d42565b61011e565b9161011e565b146113dd57565b600063e6c4247b60e01b8152806113f6600482016101a3565b0390fd5b611402611806565b61140a61145a565b565b60a01b90565b9061142160ff60a01b9161140c565b9181191691161790565b611434906102cb565b90565b90565b9061144f61144a6114569261142b565b611437565b8254611412565b9055565b61146560008061143a565b61146d6117f9565b6114a37f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9161149a610103565b91829182610422565b0390a1565b6114b06113fa565b565b6114ba6109b1565b6114c057565b600063d93c066560e01b8152806114d9600482016101a3565b0390fd5b90565b6114f46114ef6114f9926114dd565b610555565b61014e565b90565b61150660026114e0565b90565b61151360016105dd565b61152c6115266115216114fc565b61014e565b9161014e565b146115455761154361153c6114fc565b6001610685565b565b6000633ee5aeb560e01b81528061155e600482016101a3565b0390fd5b90565b61157961157461157e92611562565b610555565b61014e565b90565b61158b6001611565565b90565b6115a0611599611581565b6001610685565b565b60206115b66115b16004610a33565b610a40565b63a9059cbb92906115db600086956115e66115cf610103565b97889687958694610aa1565b845260048401610ec9565b03925af180156116ea57611603916000916116bc575b50156102cb565b61160a5750565b61165490602061162261161d6004610a33565b610a40565b6370a082319061164961163430610a4c565b9261163d610103565b96879485938493610aa1565b835260048301610422565b03915afa9182156116b757600092611687575b506116836000928392630722f6b360e11b8452600484016105ea565b0390fd5b6116a991925060203d81116116b0575b6116a18183610a78565b810190610ab6565b9082611667565b503d611697565b610ad5565b6116dd915060203d81116116e3575b6116d58183610a78565b810190610eaa565b386115fc565b503d6116cb565b610ad5565b9061170060018060a01b0391610649565b9181191691161790565b90565b9061172261171d6117299261059c565b61170a565b82546116ef565b9055565b6117376000610dec565b61174282600061170d565b906117766117707f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09361059c565b9161059c565b9161177f610103565b80611789816101a3565b0390a3565b6117966114b2565b61179e6117a0565b565b6117ac6001600061143a565b6117b46117f9565b6117ea7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916117e1610103565b91829182610422565b0390a1565b6117f761178e565b565b611801610dc8565b503390565b6118176118116109b1565b156102cb565b61181d57565b6000638dfc202b60e01b815280611836600482016101a3565b0390fdfea2646970667358221220364f9e3e0f2c1ecb0e56022200974795b93e7f352feb730e2ef5bdb5aa3b67fc64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x2F JUMPI PUSH2 0x19 PUSH2 0x14 PUSH2 0xFA JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST PUSH2 0x21 PUSH2 0x34 JUMP JUMPDEST PUSH2 0x1870 PUSH2 0x453 DUP3 CODECOPY PUSH2 0x1870 SWAP1 RETURN JUMPDEST PUSH2 0x3A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x69 SWAP1 PUSH2 0x3F JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x81 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST SWAP1 PUSH2 0x99 PUSH2 0x92 PUSH2 0x34 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x5F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xB4 SWAP1 PUSH2 0xA0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC0 DUP2 PUSH2 0xAB JUMP JUMPDEST SUB PUSH2 0xC7 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xD9 DUP3 PUSH2 0xB7 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF5 JUMPI PUSH2 0xF2 SWAP2 PUSH1 0x0 ADD PUSH2 0xCC JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1CC3 DUP1 CODESIZE SUB DUP1 PUSH2 0x10D DUP2 PUSH2 0x86 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0xDB JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x130 PUSH2 0x13A SWAP3 PUSH2 0x11B JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH2 0xA0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x146 SWAP1 PUSH2 0x121 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x15E PUSH2 0x168 SWAP3 PUSH2 0xA0 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH2 0xA0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x174 SWAP1 PUSH2 0x14F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x180 SWAP1 PUSH2 0x16B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x19A PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x1AD SWAP1 PUSH2 0x16B JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1C8 PUSH2 0x1C3 PUSH2 0x1CF SWAP3 PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0x1B0 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x189 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x1E5 PUSH2 0x1EF SWAP3 PUSH2 0x11B JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1FF PUSH1 0x0 NOT SWAP2 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x21D PUSH2 0x218 PUSH2 0x222 SWAP3 PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x23D PUSH2 0x238 PUSH2 0x244 SWAP3 PUSH2 0x209 JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1F2 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x251 CALLER PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH2 0x26D PUSH2 0x267 PUSH2 0x262 PUSH1 0x0 PUSH2 0x13D JUMP JUMPDEST PUSH2 0xAB JUMP JUMPDEST SWAP2 PUSH2 0xAB JUMP JUMPDEST EQ PUSH2 0x29B JUMPI PUSH2 0x27E PUSH2 0x285 SWAP2 PUSH2 0x177 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x1B3 JUMP JUMPDEST PUSH2 0x299 PUSH2 0x292 PUSH1 0x0 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x228 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x2B4 PUSH1 0x4 DUP3 ADD PUSH2 0x149 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x2CA PUSH2 0x2D4 SWAP3 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2E1 PUSH1 0x1 PUSH2 0x2BB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2ED SWAP1 PUSH2 0x301 JUMP JUMPDEST PUSH2 0x2FF PUSH2 0x2F8 PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x228 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x30A SWAP1 PUSH2 0x32F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x315 SWAP1 PUSH2 0xAB JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x32D SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x30C JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x34B PUSH2 0x345 PUSH2 0x340 PUSH1 0x0 PUSH2 0x13D JUMP JUMPDEST PUSH2 0xAB JUMP JUMPDEST SWAP2 PUSH2 0xAB JUMP JUMPDEST EQ PUSH2 0x35B JUMPI PUSH2 0x359 SWAP1 PUSH2 0x3F1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x380 PUSH2 0x368 PUSH1 0x0 PUSH2 0x13D JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x319 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x3A1 PUSH2 0x3A6 SWAP2 PUSH2 0x384 JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3B3 SWAP1 SLOAD PUSH2 0x395 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3BF SWAP1 PUSH2 0x14F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3CB SWAP1 PUSH2 0x3B6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3E6 PUSH2 0x3E1 PUSH2 0x3ED SWAP3 PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST DUP3 SLOAD PUSH2 0x189 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3FB PUSH1 0x0 PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x406 DUP3 PUSH1 0x0 PUSH2 0x3D1 JUMP JUMPDEST SWAP1 PUSH2 0x43A PUSH2 0x434 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x3C2 JUMP JUMPDEST SWAP2 PUSH2 0x3C2 JUMP JUMPDEST SWAP2 PUSH2 0x443 PUSH2 0x34 JUMP JUMPDEST DUP1 PUSH2 0x44D DUP2 PUSH2 0x149 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0x539 JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x326F823F EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x4CABB824 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x507CD30F EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x5F42513C EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x6E5F4A89 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xDB068E0E EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xDB81F99B EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xBC JUMPI PUSH4 0xF688BCFB SUB PUSH2 0xE JUMPI PUSH2 0x506 JUMP JUMPDEST PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x46D JUMP JUMPDEST PUSH2 0x438 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x3AF JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST PUSH2 0x1ED JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x127 SWAP1 PUSH2 0x113 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x133 DUP2 PUSH2 0x11E JUMP JUMPDEST SUB PUSH2 0x13A JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x14C DUP3 PUSH2 0x12A JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15A DUP2 PUSH2 0x14E JUMP JUMPDEST SUB PUSH2 0x161 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x173 DUP3 PUSH2 0x151 JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x19E JUMPI DUP1 PUSH2 0x192 PUSH2 0x19B SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x13F JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x10E JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x1D8 JUMPI PUSH2 0x1C2 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x175 JUMP JUMPDEST SWAP1 PUSH2 0x79D JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x1D4 DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x1E8 JUMPI JUMP JUMPDEST PUSH2 0x10E JUMP JUMPDEST CALLVALUE PUSH2 0x21B JUMPI PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x205 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x20D PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x217 DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x23A JUMPI PUSH2 0x237 SWAP2 PUSH1 0x0 ADD PUSH2 0x166 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x10E JUMP JUMPDEST PUSH2 0x248 SWAP1 PUSH2 0x14E JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x260 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x23F JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x292 JUMPI PUSH2 0x28E PUSH2 0x27D PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x220 JUMP JUMPDEST PUSH2 0x83F JUMP JUMPDEST PUSH2 0x285 PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x24C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH2 0x2B0 PUSH2 0x2AA CALLDATASIZE PUSH1 0x4 PUSH2 0x175 JUMP JUMPDEST SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x2C2 DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2D9 SWAP1 PUSH2 0x2CB JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2F1 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x2D0 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x323 JUMPI PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x31F PUSH2 0x30E PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x316 PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2DD JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x342 JUMPI PUSH2 0x33F SWAP2 PUSH1 0x0 ADD PUSH2 0x13F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x10E JUMP JUMPDEST CALLVALUE PUSH2 0x377 JUMPI PUSH2 0x373 PUSH2 0x362 PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0x328 JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x36A PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x24C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST CALLVALUE PUSH2 0x3AA JUMPI PUSH2 0x394 PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x220 JUMP JUMPDEST PUSH2 0xD09 JUMP JUMPDEST PUSH2 0x39C PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x3A6 DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST CALLVALUE PUSH2 0x3DD JUMPI PUSH2 0x3BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0xD62 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x3D9 DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST CALLVALUE PUSH2 0x410 JUMPI PUSH2 0x3F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x3FA PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x402 PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x40C DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST PUSH2 0x41E SWAP1 PUSH2 0x11E JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x436 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x415 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x468 JUMPI PUSH2 0x448 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x464 PUSH2 0x453 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x422 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST CALLVALUE PUSH2 0x49B JUMPI PUSH2 0x485 PUSH2 0x480 CALLDATASIZE PUSH1 0x4 PUSH2 0x220 JUMP JUMPDEST PUSH2 0xE68 JUMP JUMPDEST PUSH2 0x48D PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x497 DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST CALLVALUE PUSH2 0x4CE JUMPI PUSH2 0x4B8 PUSH2 0x4B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x220 JUMP JUMPDEST PUSH2 0x10E0 JUMP JUMPDEST PUSH2 0x4C0 PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x4CA DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST CALLVALUE PUSH2 0x501 JUMPI PUSH2 0x4EB PUSH2 0x4E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x328 JUMP JUMPDEST PUSH2 0x1153 JUMP JUMPDEST PUSH2 0x4F3 PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x4FD DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST CALLVALUE PUSH2 0x534 JUMPI PUSH2 0x51E PUSH2 0x519 CALLDATASIZE PUSH1 0x4 PUSH2 0x220 JUMP JUMPDEST PUSH2 0x1361 JUMP JUMPDEST PUSH2 0x526 PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x530 DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH2 0x550 SWAP2 PUSH2 0x54B PUSH2 0x136C JUMP JUMPDEST PUSH2 0x6A5 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x56C PUSH2 0x567 PUSH2 0x571 SWAP3 PUSH2 0x552 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH2 0x14E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x588 PUSH2 0x583 PUSH2 0x58D SWAP3 PUSH2 0x113 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x599 SWAP1 PUSH2 0x574 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x5A5 SWAP1 PUSH2 0x590 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x5B2 SWAP1 PUSH2 0x59C JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x5D5 PUSH2 0x5DA SWAP2 PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x5C6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x5E7 SWAP1 SLOAD PUSH2 0x5C9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x60C SWAP3 SWAP5 SWAP4 PUSH2 0x605 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x23F JUMP JUMPDEST ADD SWAP1 PUSH2 0x23F JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x633 PUSH2 0x639 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x14E JUMP JUMPDEST SWAP3 PUSH2 0x14E JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0x644 JUMPI JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x65C PUSH1 0x0 NOT SWAP2 PUSH2 0x649 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x67A PUSH2 0x675 PUSH2 0x67F SWAP3 PUSH2 0x14E JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH2 0x14E JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x69A PUSH2 0x695 PUSH2 0x6A1 SWAP3 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x682 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x64F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x6AE DUP2 PUSH2 0x13BB JUMP JUMPDEST DUP2 PUSH2 0x6C2 PUSH2 0x6BC PUSH1 0x0 PUSH2 0x558 JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST EQ PUSH2 0x780 JUMPI PUSH2 0x6DB PUSH2 0x6D6 PUSH1 0x2 DUP4 SWAP1 PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST DUP1 PUSH2 0x6EE PUSH2 0x6E8 DUP6 PUSH2 0x14E JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST LT PUSH2 0x760 JUMPI POP PUSH2 0x71C DUP3 PUSH2 0x716 PUSH2 0x707 PUSH1 0x2 DUP6 SWAP1 PUSH2 0x5A8 JUMP JUMPDEST SWAP2 PUSH2 0x711 DUP4 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST SWAP1 PUSH2 0x685 JUMP JUMPDEST PUSH2 0x75B PUSH2 0x749 PUSH32 0x2254DF2302625E26A2B6C7E8E9DF285AAE8492E23F60FDD9B01F7BD6AEB7B5EA SWAP3 PUSH2 0x59C JUMP JUMPDEST SWAP3 PUSH2 0x752 PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x24C JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST DUP3 PUSH2 0x77C PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x8059C747 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x5EA JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x799 PUSH1 0x4 DUP3 ADD PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x7A7 SWAP2 PUSH2 0x53E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7B1 PUSH2 0x136C JUMP JUMPDEST PUSH2 0x7B9 PUSH2 0x7BB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0x14A8 JUMP JUMPDEST PUSH32 0xE5E3B3FB504C22CF5C42FA07D521225937514C654007E1F12646F89768D6F94 PUSH2 0x7EC PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x7F6 DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x803 PUSH2 0x7A9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x819 PUSH2 0x81F SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x14E JUMP JUMPDEST SWAP3 PUSH2 0x14E JUMP JUMPDEST SWAP2 PUSH2 0x82B DUP4 DUP3 MUL PUSH2 0x14E JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x83A JUMPI JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH2 0x847 PUSH2 0x805 JUMP JUMPDEST POP PUSH2 0x852 PUSH1 0x3 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x865 PUSH2 0x85F PUSH1 0x0 PUSH2 0x558 JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST EQ PUSH2 0x881 JUMPI PUSH2 0x87E SWAP1 PUSH2 0x878 PUSH1 0x3 PUSH2 0x5DD JUMP JUMPDEST SWAP1 PUSH2 0x80A JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP PUSH2 0x88C PUSH1 0x0 PUSH2 0x558 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x8A1 SWAP2 PUSH2 0x89C PUSH2 0x136C JUMP JUMPDEST PUSH2 0x8C8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8B2 PUSH2 0x8B8 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x14E JUMP JUMPDEST SWAP3 PUSH2 0x14E JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8C3 JUMPI JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH2 0x8D1 DUP2 PUSH2 0x13BB JUMP JUMPDEST DUP2 PUSH2 0x8E5 PUSH2 0x8DF PUSH1 0x0 PUSH2 0x558 JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST EQ PUSH2 0x956 JUMPI PUSH2 0x912 DUP3 PUSH2 0x90C PUSH2 0x8FD PUSH1 0x2 DUP6 SWAP1 PUSH2 0x5A8 JUMP JUMPDEST SWAP2 PUSH2 0x907 DUP4 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST SWAP1 PUSH2 0x685 JUMP JUMPDEST PUSH2 0x951 PUSH2 0x93F PUSH32 0xFE6FCB45ADAAA54F7E3491F6A7964049817F1E437F33587E634A4629FBCF3A6 SWAP3 PUSH2 0x59C JUMP JUMPDEST SWAP3 PUSH2 0x948 PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x24C JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x96F PUSH1 0x4 DUP3 ADD PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x97D SWAP2 PUSH2 0x88F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xA0 SHR SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x99C PUSH2 0x9A1 SWAP2 PUSH2 0x984 JUMP JUMPDEST PUSH2 0x98A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9AE SWAP1 SLOAD PUSH2 0x990 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9B9 PUSH2 0x97F JUMP JUMPDEST POP PUSH2 0x9C4 PUSH1 0x0 PUSH2 0x9A4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9DE PUSH2 0x9E3 SWAP2 PUSH2 0x9D6 PUSH2 0x805 JUMP JUMPDEST POP PUSH1 0x2 PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9F7 SWAP1 PUSH2 0x9F2 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x9F9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA0A SWAP1 PUSH2 0xA05 PUSH2 0x1509 JUMP JUMPDEST PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0xA12 PUSH2 0x158E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xA2B PUSH2 0xA30 SWAP2 PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0xA14 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA3D SWAP1 SLOAD PUSH2 0xA1F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA49 SWAP1 PUSH2 0x590 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA55 SWAP1 PUSH2 0x590 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0xA82 SWAP1 PUSH2 0xA58 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA9C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xA62 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xAB4 DUP3 PUSH2 0x151 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xAD0 JUMPI PUSH2 0xACD SWAP2 PUSH1 0x0 ADD PUSH2 0xAA7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x10E JUMP JUMPDEST PUSH2 0xADD PUSH2 0x103 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xAEF CALLER PUSH2 0x13BB JUMP JUMPDEST DUP1 PUSH2 0xB03 PUSH2 0xAFD PUSH1 0x0 PUSH2 0x558 JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST EQ PUSH2 0xCEC JUMPI PUSH2 0xB12 PUSH1 0x3 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0xB25 PUSH2 0xB1F PUSH1 0x0 PUSH2 0x558 JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST EQ PUSH2 0xCCF JUMPI PUSH2 0xB3E PUSH2 0xB39 PUSH1 0x2 CALLER SWAP1 PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST DUP1 PUSH2 0xB51 PUSH2 0xB4B DUP5 PUSH2 0x14E JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST LT PUSH2 0xCAF JUMPI POP PUSH2 0xB6B DUP2 PUSH2 0xB65 PUSH1 0x3 PUSH2 0x5DD JUMP JUMPDEST SWAP1 PUSH2 0x80A JUMP JUMPDEST SWAP1 PUSH2 0xBB5 PUSH1 0x20 PUSH2 0xB83 PUSH2 0xB7E PUSH1 0x4 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xBAA PUSH2 0xB95 ADDRESS PUSH2 0xA4C JUMP JUMPDEST SWAP3 PUSH2 0xB9E PUSH2 0x103 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xAA1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x422 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xCAA JUMPI PUSH1 0x0 SWAP2 PUSH2 0xC7C JUMPI JUMPDEST POP DUP1 PUSH2 0xBDC PUSH2 0xBD6 DUP6 PUSH2 0x14E JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST LT PUSH2 0xC5C JUMPI POP PUSH2 0xC0A DUP2 PUSH2 0xC04 PUSH2 0xBF5 PUSH1 0x2 CALLER SWAP1 PUSH2 0x5A8 JUMP JUMPDEST SWAP2 PUSH2 0xBFF DUP4 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST SWAP1 PUSH2 0x685 JUMP JUMPDEST PUSH2 0xC15 CALLER DUP4 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST CALLER SWAP1 SWAP2 PUSH2 0xC42 PUSH32 0xEB9A8C68A32BC6989217E69F932CF098FF5D0E2F11305800394C73B554D2CE9E SWAP3 PUSH2 0x59C JUMP JUMPDEST SWAP3 PUSH2 0xC57 PUSH2 0xC4E PUSH2 0x103 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x5EA JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST DUP3 PUSH2 0xC78 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x722F6B3 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x5EA JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xC9D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xCA3 JUMPI JUMPDEST PUSH2 0xC95 DUP2 DUP4 PUSH2 0xA78 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xAB6 JUMP JUMPDEST CODESIZE PUSH2 0xBC8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC8B JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST SWAP1 PUSH2 0xCCB PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x8059C747 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x5EA JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x62F216E5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xCE8 PUSH1 0x4 DUP3 ADD PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0xD05 PUSH1 0x4 DUP3 ADD PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xD12 SWAP1 PUSH2 0x9E6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD1C PUSH2 0x136C JUMP JUMPDEST PUSH2 0xD24 PUSH2 0xD4E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD3A PUSH2 0xD35 PUSH2 0xD3F SWAP3 PUSH2 0x552 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD4B SWAP1 PUSH2 0xD26 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD60 PUSH2 0xD5B PUSH1 0x0 PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x172D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD6A PUSH2 0xD14 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD74 PUSH2 0x136C JUMP JUMPDEST PUSH2 0xD7C PUSH2 0xD7E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD86 PUSH2 0x17EF JUMP JUMPDEST PUSH32 0xAB35696F06E428EBC5CEBA8CD17F8FED287BAF43440206D1943AF1EE53E6D267 PUSH2 0xDAF PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0xDB9 DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xDC6 PUSH2 0xD6C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xDE4 PUSH2 0xDE9 SWAP2 PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0xDCD JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDF6 SWAP1 SLOAD PUSH2 0xDD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE01 PUSH2 0xDC8 JUMP JUMPDEST POP PUSH2 0xE0C PUSH1 0x0 PUSH2 0xDEC JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE20 SWAP1 PUSH2 0xE1B PUSH2 0x136C JUMP JUMPDEST PUSH2 0xE22 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE2D DUP2 PUSH1 0x3 PUSH2 0x685 JUMP JUMPDEST PUSH2 0xE63 PUSH32 0x972ABA470577C14606BBF4BBDEC1FED4925F242FCEF40B4A8D242983365D0291 SWAP2 PUSH2 0xE5A PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x24C JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xE71 SWAP1 PUSH2 0xE0F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE84 SWAP1 PUSH2 0xE7F PUSH2 0x136C JUMP JUMPDEST PUSH2 0xEED JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE8F DUP2 PUSH2 0x2CB JUMP JUMPDEST SUB PUSH2 0xE96 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xEA8 DUP3 PUSH2 0xE86 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xEC4 JUMPI PUSH2 0xEC1 SWAP2 PUSH1 0x0 ADD PUSH2 0xE9B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x10E JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xEEB SWAP3 SWAP5 SWAP4 PUSH2 0xEE4 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x415 JUMP JUMPDEST ADD SWAP1 PUSH2 0x23F JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0xF01 PUSH2 0xEFB PUSH1 0x0 PUSH2 0x558 JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST EQ PUSH2 0x10C3 JUMPI PUSH2 0xF4F PUSH1 0x20 PUSH2 0xF1D PUSH2 0xF18 PUSH1 0x4 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xF44 PUSH2 0xF2F ADDRESS PUSH2 0xA4C JUMP JUMPDEST SWAP3 PUSH2 0xF38 PUSH2 0x103 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xAA1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x422 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x10BE JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1090 JUMPI JUMPDEST POP DUP1 PUSH2 0xF76 PUSH2 0xF70 DUP5 PUSH2 0x14E JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST LT PUSH2 0x1070 JUMPI PUSH2 0xF8D PUSH2 0xF88 PUSH1 0x4 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x20 PUSH4 0xA9059CBB SWAP2 CALLER SWAP1 PUSH2 0xFB5 PUSH1 0x0 DUP8 SWAP6 PUSH2 0xFC0 PUSH2 0xFA9 PUSH2 0x103 JUMP JUMPDEST SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0xAA1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xEC9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x106B JUMPI PUSH2 0xFDD SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x103D JUMPI JUMPDEST POP ISZERO PUSH2 0x2CB JUMP JUMPDEST PUSH2 0x101D JUMPI POP PUSH2 0x1018 PUSH32 0x4EACC637A5FB1DBBC94595A9432E0A8D75AE5D51D189021963A6CC8575465DDF SWAP2 PUSH2 0x100F PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x24C JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST SWAP1 PUSH2 0x1039 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x722F6B3 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x5EA JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x105E SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1064 JUMPI JUMPDEST PUSH2 0x1056 DUP2 DUP4 PUSH2 0xA78 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xEAA JUMP JUMPDEST CODESIZE PUSH2 0xFD6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x104C JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST SWAP1 PUSH2 0x108C PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x722F6B3 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x5EA JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x10B1 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x10B7 JUMPI JUMPDEST PUSH2 0x10A9 DUP2 DUP4 PUSH2 0xA78 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xAB6 JUMP JUMPDEST CODESIZE PUSH2 0xF62 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x109F JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x10DC PUSH1 0x4 DUP3 ADD PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x10E9 SWAP1 PUSH2 0xE73 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x10FC SWAP1 PUSH2 0x10F7 PUSH2 0x136C JUMP JUMPDEST PUSH2 0x10FE JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x111A PUSH2 0x1114 PUSH2 0x110F PUSH1 0x0 PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST SWAP2 PUSH2 0x11E JUMP JUMPDEST EQ PUSH2 0x112A JUMPI PUSH2 0x1128 SWAP1 PUSH2 0x172D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x114F PUSH2 0x1137 PUSH1 0x0 PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x422 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x115C SWAP1 PUSH2 0x10EB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x116F SWAP1 PUSH2 0x116A PUSH2 0x136C JUMP JUMPDEST PUSH2 0x11A4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x119B PUSH2 0x11A2 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x1191 PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x415 JUMP JUMPDEST ADD SWAP1 PUSH2 0x23F JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x11B8 PUSH2 0x11B2 PUSH1 0x0 PUSH2 0x558 JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST EQ PUSH2 0x1344 JUMPI PUSH2 0x11CF PUSH2 0x11CA PUSH1 0x4 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x20 PUSH4 0x23B872DD SWAP2 CALLER SWAP1 PUSH2 0x1200 PUSH1 0x0 PUSH2 0x11E7 ADDRESS PUSH2 0xA4C JUMP JUMPDEST SWAP6 PUSH2 0x120B DUP9 PUSH2 0x11F4 PUSH2 0x103 JUMP JUMPDEST SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH2 0xAA1 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x1171 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x133F JUMPI PUSH2 0x1228 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1311 JUMPI JUMPDEST POP ISZERO PUSH2 0x2CB JUMP JUMPDEST PUSH2 0x1267 JUMPI PUSH2 0x1262 PUSH32 0xF920186940A9C60FF07B508B49BA5DCA2C647B29AEBFA69964B44E5E873A62C SWAP2 PUSH2 0x1259 PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x24C JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x12A9 SWAP1 PUSH1 0x20 PUSH2 0x127F PUSH2 0x127A PUSH1 0x4 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x129E CALLER SWAP3 PUSH2 0x1292 PUSH2 0x103 JUMP JUMPDEST SWAP7 DUP8 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xAA1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x422 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x130C JUMPI PUSH1 0x0 SWAP3 PUSH2 0x12DC JUMPI JUMPDEST POP PUSH2 0x12D8 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x722F6B3 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x5EA JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x12FE SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1305 JUMPI JUMPDEST PUSH2 0x12F6 DUP2 DUP4 PUSH2 0xA78 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xAB6 JUMP JUMPDEST SWAP1 DUP3 PUSH2 0x12BC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x12EC JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST PUSH2 0x1332 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1338 JUMPI JUMPDEST PUSH2 0x132A DUP2 DUP4 PUSH2 0xA78 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xEAA JUMP JUMPDEST CODESIZE PUSH2 0x1221 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1320 JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x135D PUSH1 0x4 DUP3 ADD PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x136A SWAP1 PUSH2 0x115E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1374 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x138D PUSH2 0x1387 PUSH2 0x1382 PUSH2 0x17F9 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST SWAP2 PUSH2 0x11E JUMP JUMPDEST SUB PUSH2 0x1394 JUMPI JUMP JUMPDEST PUSH2 0x13B7 PUSH2 0x139F PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x422 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x13D6 PUSH2 0x13D0 PUSH2 0x13CB PUSH1 0x0 PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST SWAP2 PUSH2 0x11E JUMP JUMPDEST EQ PUSH2 0x13DD JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x13F6 PUSH1 0x4 DUP3 ADD PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1402 PUSH2 0x1806 JUMP JUMPDEST PUSH2 0x140A PUSH2 0x145A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1421 PUSH1 0xFF PUSH1 0xA0 SHL SWAP2 PUSH2 0x140C JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x1434 SWAP1 PUSH2 0x2CB JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x144F PUSH2 0x144A PUSH2 0x1456 SWAP3 PUSH2 0x142B JUMP JUMPDEST PUSH2 0x1437 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1412 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1465 PUSH1 0x0 DUP1 PUSH2 0x143A JUMP JUMPDEST PUSH2 0x146D PUSH2 0x17F9 JUMP JUMPDEST PUSH2 0x14A3 PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP2 PUSH2 0x149A PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x422 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x14B0 PUSH2 0x13FA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x14BA PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x14C0 JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x14D9 PUSH1 0x4 DUP3 ADD PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x14F4 PUSH2 0x14EF PUSH2 0x14F9 SWAP3 PUSH2 0x14DD JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH2 0x14E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1506 PUSH1 0x2 PUSH2 0x14E0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1513 PUSH1 0x1 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x152C PUSH2 0x1526 PUSH2 0x1521 PUSH2 0x14FC JUMP JUMPDEST PUSH2 0x14E JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST EQ PUSH2 0x1545 JUMPI PUSH2 0x1543 PUSH2 0x153C PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x1 PUSH2 0x685 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x155E PUSH1 0x4 DUP3 ADD PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1579 PUSH2 0x1574 PUSH2 0x157E SWAP3 PUSH2 0x1562 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH2 0x14E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x158B PUSH1 0x1 PUSH2 0x1565 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15A0 PUSH2 0x1599 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x685 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x20 PUSH2 0x15B6 PUSH2 0x15B1 PUSH1 0x4 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH4 0xA9059CBB SWAP3 SWAP1 PUSH2 0x15DB PUSH1 0x0 DUP7 SWAP6 PUSH2 0x15E6 PUSH2 0x15CF PUSH2 0x103 JUMP JUMPDEST SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0xAA1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xEC9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x16EA JUMPI PUSH2 0x1603 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x16BC JUMPI JUMPDEST POP ISZERO PUSH2 0x2CB JUMP JUMPDEST PUSH2 0x160A JUMPI POP JUMP JUMPDEST PUSH2 0x1654 SWAP1 PUSH1 0x20 PUSH2 0x1622 PUSH2 0x161D PUSH1 0x4 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1649 PUSH2 0x1634 ADDRESS PUSH2 0xA4C JUMP JUMPDEST SWAP3 PUSH2 0x163D PUSH2 0x103 JUMP JUMPDEST SWAP7 DUP8 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xAA1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x422 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x16B7 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1687 JUMPI JUMPDEST POP PUSH2 0x1683 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x722F6B3 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x5EA JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x16A9 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x16B0 JUMPI JUMPDEST PUSH2 0x16A1 DUP2 DUP4 PUSH2 0xA78 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xAB6 JUMP JUMPDEST SWAP1 DUP3 PUSH2 0x1667 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1697 JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST PUSH2 0x16DD SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x16E3 JUMPI JUMPDEST PUSH2 0x16D5 DUP2 DUP4 PUSH2 0xA78 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xEAA JUMP JUMPDEST CODESIZE PUSH2 0x15FC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x16CB JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST SWAP1 PUSH2 0x1700 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x649 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1722 PUSH2 0x171D PUSH2 0x1729 SWAP3 PUSH2 0x59C JUMP JUMPDEST PUSH2 0x170A JUMP JUMPDEST DUP3 SLOAD PUSH2 0x16EF JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1737 PUSH1 0x0 PUSH2 0xDEC JUMP JUMPDEST PUSH2 0x1742 DUP3 PUSH1 0x0 PUSH2 0x170D JUMP JUMPDEST SWAP1 PUSH2 0x1776 PUSH2 0x1770 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x59C JUMP JUMPDEST SWAP2 PUSH2 0x59C JUMP JUMPDEST SWAP2 PUSH2 0x177F PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x1789 DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x1796 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x179E PUSH2 0x17A0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x17AC PUSH1 0x1 PUSH1 0x0 PUSH2 0x143A JUMP JUMPDEST PUSH2 0x17B4 PUSH2 0x17F9 JUMP JUMPDEST PUSH2 0x17EA PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0x17E1 PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x422 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x17F7 PUSH2 0x178E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1801 PUSH2 0xDC8 JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST PUSH2 0x1817 PUSH2 0x1811 PUSH2 0x9B1 JUMP JUMPDEST ISZERO PUSH2 0x2CB JUMP JUMPDEST PUSH2 0x181D JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1836 PUSH1 0x4 DUP3 ADD PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE 0x4F SWAP15 RETURNDATACOPY 0xF 0x2C 0x1E 0xCB 0xE JUMP MUL 0x22 STOP SWAP8 SELFBALANCE SWAP6 0xB9 RETURNDATACOPY PUSH32 0x352FEB730E2EF5BDB5AA3B67FC64736F6C634300081C00330000000000000000 ",
              "sourceMap": "435:8863:5:-:0;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;3431:239::-;;3471:10;3431:239;:::i;:::-;3493:10;:24;;3507:10;3515:1;3507:10;:::i;:::-;3493:24;:::i;:::-;;;:::i;:::-;;3489:68;;3575:18;3563:30;3582:10;3575:18;:::i;:::-;3563:30;;:::i;:::-;3599:16;;3614:1;3599:16;:::i;:::-;;;:::i;:::-;3431:239::o;3489:68::-;3534:16;;;;;;;;;;;;:::i;:::-;;;;435:8863;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1818:40:4:-;1857:1;;;:::i;:::-;1818:40;:::o;2037:52::-;;;;:::i;:::-;2061:21;2071:11;;:::i;:::-;2061:21;;:::i;:::-;2037:52::o;615:2090:3:-;;;;:::i;:::-;:::o;435:8863:5:-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;1225:187:0:-;1273:12;:26;;1289:10;1297:1;1289:10;:::i;:::-;1273:26;:::i;:::-;;;:::i;:::-;;1269:95;;1392:12;;;:::i;:::-;1225:187::o;1269:95::-;1322:31;1342:10;1350:1;1342:10;:::i;:::-;1322:31;;;;;;;;;;;;;:::i;:::-;;;;435:8863:5;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;2912:187:0:-;3004:6;;;:::i;:::-;3020:17;3029:8;3020:17;;:::i;:::-;3083:8;3052:40;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;2912:187::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode": {
                  "entryPoint": 477,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 319,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_addresst_uint256": {
                  "entryPoint": 373,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 3754,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_bool_fromMemory": {
                  "entryPoint": 3739,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint256_fromMemory": {
                  "entryPoint": 2727,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_address": {
                  "entryPoint": 808,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_uint256": {
                  "entryPoint": 544,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256": {
                  "entryPoint": 358,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256_fromMemory": {
                  "entryPoint": 2742,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": 1045,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_address_address_uint256": {
                  "entryPoint": 4465,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": 3785,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_bool": {
                  "entryPoint": 733,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bool_to_bool": {
                  "entryPoint": 720,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple": {
                  "entryPoint": 419,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 1058,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256": {
                  "entryPoint": 588,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_to_uint256": {
                  "entryPoint": 575,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint256_uint256": {
                  "entryPoint": 1514,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 259,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 2211,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 2058,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 1572,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": 286,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bool": {
                  "entryPoint": 715,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_address": {
                  "entryPoint": 3533,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_bool": {
                  "entryPoint": 2442,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_contract_IERC20": {
                  "entryPoint": 2580,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint256": {
                  "entryPoint": 1478,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": 5474,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by_1": {
                  "entryPoint": 5341,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by": {
                  "entryPoint": 1362,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 275,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": 334,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "constant_ENTERED": {
                  "entryPoint": 5372,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "constant_NOT_ENTERED": {
                  "entryPoint": 5505,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "convert_address_to_address": {
                  "entryPoint": 1436,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_bool_to_bool": {
                  "entryPoint": 5163,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_IERC20_to_address": {
                  "entryPoint": 2624,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_USDCRewardContract_to_address": {
                  "entryPoint": 2636,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_2_by_1_to_uint256": {
                  "entryPoint": 5344,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 3394,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 3366,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": 5477,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_rational_by_to_t_uint256": {
                  "entryPoint": 1368,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 1424,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 1396,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 1638,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "external_fun_addPoints": {
                  "entryPoint": 663,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_calculateUSDCAmount": {
                  "entryPoint": 610,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_claimUSDC": {
                  "entryPoint": 892,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_depositUSDC": {
                  "entryPoint": 1286,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getPointBalance": {
                  "entryPoint": 839,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_owner": {
                  "entryPoint": 1080,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_pause": {
                  "entryPoint": 994,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_paused": {
                  "entryPoint": 755,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_renounceOwnership": {
                  "entryPoint": 943,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_setExchangeRate": {
                  "entryPoint": 1133,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_transferOwnership": {
                  "entryPoint": 1235,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_transferPoints": {
                  "entryPoint": 425,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_unpause": {
                  "entryPoint": 493,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_withdrawUSDC": {
                  "entryPoint": 1184,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_from_storage_value_offset_address": {
                  "entryPoint": 3544,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_bool": {
                  "entryPoint": 2448,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_contract_IERC20": {
                  "entryPoint": 2591,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_uint256": {
                  "entryPoint": 1481,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 2680,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun__pause_inner": {
                  "entryPoint": 6048,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun__transferOwnership": {
                  "entryPoint": 5933,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun__unpause_inner": {
                  "entryPoint": 5210,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_addPoints": {
                  "entryPoint": 2419,
                  "id": 596,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_addPoints_inner": {
                  "entryPoint": 2248,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_calculateUSDCAmount": {
                  "entryPoint": 2111,
                  "id": 696,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_checkOwner": {
                  "entryPoint": 4972,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_claimUSDC": {
                  "entryPoint": 3337,
                  "id": 791,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_claimUSDC_inner": {
                  "entryPoint": 2790,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_depositUSDC": {
                  "entryPoint": 4961,
                  "id": 838,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_depositUSDC_inner": {
                  "entryPoint": 4516,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_getPointBalance": {
                  "entryPoint": 2503,
                  "id": 659,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_msgSender": {
                  "entryPoint": 6137,
                  "id": 237,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_nonReentrantAfter": {
                  "entryPoint": 5518,
                  "id": 420,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 5385,
                  "id": 412,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_owner": {
                  "entryPoint": 3577,
                  "id": 67,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_pause": {
                  "entryPoint": 6127,
                  "id": 346,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_pause_910": {
                  "entryPoint": 3518,
                  "id": 910,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_pause_inner": {
                  "entryPoint": 3454,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_paused": {
                  "entryPoint": 2481,
                  "id": 305,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_renounceOwnership": {
                  "entryPoint": 3426,
                  "id": 98,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_renounceOwnership_inner": {
                  "entryPoint": 3406,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_requireNotPaused": {
                  "entryPoint": 5298,
                  "id": 317,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_requirePaused": {
                  "entryPoint": 6150,
                  "id": 330,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_setExchangeRate": {
                  "entryPoint": 3688,
                  "id": 676,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_setExchangeRate_inner": {
                  "entryPoint": 3618,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_transferOwnership": {
                  "entryPoint": 4435,
                  "id": 126,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_transferOwnership_inner": {
                  "entryPoint": 4350,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_transferPoints": {
                  "entryPoint": 1949,
                  "id": 646,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_transferPoints_inner": {
                  "entryPoint": 1701,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_transferUSDC": {
                  "entryPoint": 5538,
                  "id": 955,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_unpause": {
                  "entryPoint": 5288,
                  "id": 362,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_unpause_923": {
                  "entryPoint": 2043,
                  "id": 923,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_unpause_inner": {
                  "entryPoint": 1979,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_validateAddress": {
                  "entryPoint": 5051,
                  "id": 973,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_withdrawUSDC": {
                  "entryPoint": 4320,
                  "id": 897,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_withdrawUSDC_inner": {
                  "entryPoint": 3821,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": 1365,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_uint256_of_address": {
                  "entryPoint": 1448,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "modifier_nonReentrant": {
                  "entryPoint": 2553,
                  "id": 396,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner": {
                  "entryPoint": 3348,
                  "id": 58,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_104": {
                  "entryPoint": 4331,
                  "id": 58,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_570": {
                  "entryPoint": 2191,
                  "id": 58,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_604": {
                  "entryPoint": 1342,
                  "id": 58,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_665": {
                  "entryPoint": 3599,
                  "id": 58,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_797": {
                  "entryPoint": 4446,
                  "id": 58,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_844": {
                  "entryPoint": 3699,
                  "id": 58,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_901": {
                  "entryPoint": 3436,
                  "id": 58,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_914": {
                  "entryPoint": 1961,
                  "id": 58,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "modifier_whenNotPaused": {
                  "entryPoint": 2534,
                  "id": 288,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_whenNotPaused_334": {
                  "entryPoint": 6030,
                  "id": 288,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "modifier_whenPaused": {
                  "entryPoint": 5114,
                  "id": 296,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x11": {
                  "entryPoint": 1550,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 2658,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": 5898,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_bool": {
                  "entryPoint": 5175,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint256": {
                  "entryPoint": 1666,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": 3564,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_bool": {
                  "entryPoint": 2468,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_contract_IERC20": {
                  "entryPoint": 2611,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint256": {
                  "entryPoint": 1501,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74": {
                  "entryPoint": 1337,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 265,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 270,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_forward": {
                  "entryPoint": 2773,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 2648,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 1609,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_160": {
                  "entryPoint": 5132,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_224": {
                  "entryPoint": 2721,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_0_unsigned": {
                  "entryPoint": 1472,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_224_unsigned": {
                  "entryPoint": 253,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": 2436,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 1615,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_0": {
                  "entryPoint": 5871,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_20": {
                  "entryPoint": 5138,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_address_to_address": {
                  "entryPoint": 5901,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_bool_to_bool": {
                  "entryPoint": 5178,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_uint256_to_uint256": {
                  "entryPoint": 1669,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 298,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_bool": {
                  "entryPoint": 3718,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_uint256": {
                  "entryPoint": 337,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "zero_value_for_split_address": {
                  "entryPoint": 3528,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_bool": {
                  "entryPoint": 2431,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint256": {
                  "entryPoint": 2053,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361015610013575b610539565b61001e6000356100fd565b8063326f823f146100f85780633f4ba83a146100f35780634cabb824146100ee578063507cd30f146100e95780635c975abb146100e45780635f42513c146100df5780636e5f4a89146100da578063715018a6146100d55780638456cb59146100d05780638da5cb5b146100cb578063db068e0e146100c6578063db81f99b146100c1578063f2fde38b146100bc5763f688bcfb0361000e57610506565b6104d3565b6104a0565b61046d565b610438565b6103e2565b6103af565b61037c565b610347565b6102f3565b610297565b610262565b6101ed565b6101a9565b60e01c90565b60405190565b600080fd5b600080fd5b60018060a01b031690565b61012790610113565b90565b6101338161011e565b0361013a57565b600080fd5b9050359061014c8261012a565b565b90565b61015a8161014e565b0361016157565b600080fd5b9050359061017382610151565b565b919060408382031261019e578061019261019b926000860161013f565b93602001610166565b90565b61010e565b60000190565b346101d8576101c26101bc366004610175565b9061079d565b6101ca610103565b806101d4816101a3565b0390f35b610109565b60009103126101e857565b61010e565b3461021b576101fd3660046101dd565b6102056107fb565b61020d610103565b80610217816101a3565b0390f35b610109565b9060208282031261023a5761023791600001610166565b90565b61010e565b6102489061014e565b9052565b91906102609060006020850194019061023f565b565b346102925761028e61027d610278366004610220565b61083f565b610285610103565b9182918261024c565b0390f35b610109565b346102c6576102b06102aa366004610175565b90610973565b6102b8610103565b806102c2816101a3565b0390f35b610109565b151590565b6102d9906102cb565b9052565b91906102f1906000602085019401906102d0565b565b34610323576103033660046101dd565b61031f61030e6109b1565b610316610103565b918291826102dd565b0390f35b610109565b906020828203126103425761033f9160000161013f565b90565b61010e565b346103775761037361036261035d366004610328565b6109c7565b61036a610103565b9182918261024c565b0390f35b610109565b346103aa5761039461038f366004610220565b610d09565b61039c610103565b806103a6816101a3565b0390f35b610109565b346103dd576103bf3660046101dd565b6103c7610d62565b6103cf610103565b806103d9816101a3565b0390f35b610109565b34610410576103f23660046101dd565b6103fa610dbe565b610402610103565b8061040c816101a3565b0390f35b610109565b61041e9061011e565b9052565b919061043690600060208501940190610415565b565b34610468576104483660046101dd565b610464610453610df9565b61045b610103565b91829182610422565b0390f35b610109565b3461049b57610485610480366004610220565b610e68565b61048d610103565b80610497816101a3565b0390f35b610109565b346104ce576104b86104b3366004610220565b6110e0565b6104c0610103565b806104ca816101a3565b0390f35b610109565b34610501576104eb6104e6366004610328565b611153565b6104f3610103565b806104fd816101a3565b0390f35b610109565b346105345761051e610519366004610220565b611361565b610526610103565b80610530816101a3565b0390f35b610109565b600080fd5b906105509161054b61136c565b6106a5565b565b90565b90565b61056c61056761057192610552565b610555565b61014e565b90565b61058861058361058d92610113565b610555565b610113565b90565b61059990610574565b90565b6105a590610590565b90565b906105b29061059c565b600052602052604060002090565b60001c90565b90565b6105d56105da916105c0565b6105c6565b90565b6105e790546105c9565b90565b91602061060c9294936106056040820196600083019061023f565b019061023f565b565b634e487b7160e01b600052601160045260246000fd5b6106336106399193929361014e565b9261014e565b820391821161064457565b61060e565b60001b90565b9061065c60001991610649565b9181191691161790565b61067a61067561067f9261014e565b610555565b61014e565b90565b90565b9061069a6106956106a192610666565b610682565b825461064f565b9055565b6106ae816113bb565b816106c26106bc6000610558565b9161014e565b14610780576106db6106d6600283906105a8565b6105dd565b806106ee6106e88561014e565b9161014e565b10610760575061071c82610716610707600285906105a8565b91610711836105dd565b610624565b90610685565b61075b6107497f2254df2302625e26a2b6c7e8e9df285aae8492e23f60fdd9b01f7bd6aeb7b5ea9261059c565b92610752610103565b9182918261024c565b0390a2565b8261077c6000928392638059c74760e01b8452600484016105ea565b0390fd5b600063162908e360e11b815280610799600482016101a3565b0390fd5b906107a79161053e565b565b6107b161136c565b6107b96107bb565b565b6107c36114a8565b7f0e5e3b3fb504c22cf5c42fa07d521225937514c654007e1f12646f89768d6f946107ec610103565b806107f6816101a3565b0390a1565b6108036107a9565b565b600090565b61081961081f9193929361014e565b9261014e565b9161082b83820261014e565b92818404149015171561083a57565b61060e565b610847610805565b5061085260036105dd565b61086561085f6000610558565b9161014e565b146108815761087e9061087860036105dd565b9061080a565b90565b5061088c6000610558565b90565b906108a19161089c61136c565b6108c8565b565b6108b26108b89193929361014e565b9261014e565b82018092116108c357565b61060e565b6108d1816113bb565b816108e56108df6000610558565b9161014e565b14610956576109128261090c6108fd600285906105a8565b91610907836105dd565b6108a3565b90610685565b61095161093f7f0fe6fcb45adaaa54f7e3491f6a7964049817f1e437f33587e634a4629fbcf3a69261059c565b92610948610103565b9182918261024c565b0390a2565b600063162908e360e11b81528061096f600482016101a3565b0390fd5b9061097d9161088f565b565b600090565b60a01c90565b60ff1690565b61099c6109a191610984565b61098a565b90565b6109ae9054610990565b90565b6109b961097f565b506109c460006109a4565b90565b6109de6109e3916109d6610805565b5060026105a8565b6105dd565b90565b6109f7906109f26114b2565b6109f9565b565b610a0a90610a05611509565b610ae6565b610a1261158e565b565b60018060a01b031690565b610a2b610a30916105c0565b610a14565b90565b610a3d9054610a1f565b90565b610a4990610590565b90565b610a5590610590565b90565b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b90610a8290610a58565b810190811067ffffffffffffffff821117610a9c57604052565b610a62565b60e01b90565b90505190610ab482610151565b565b90602082820312610ad057610acd91600001610aa7565b90565b61010e565b610add610103565b3d6000823e3d90fd5b610aef336113bb565b80610b03610afd6000610558565b9161014e565b14610cec57610b1260036105dd565b610b25610b1f6000610558565b9161014e565b14610ccf57610b3e610b39600233906105a8565b6105dd565b80610b51610b4b8461014e565b9161014e565b10610caf5750610b6b81610b6560036105dd565b9061080a565b90610bb56020610b83610b7e6004610a33565b610a40565b6370a0823190610baa610b9530610a4c565b92610b9e610103565b95869485938493610aa1565b835260048301610422565b03915afa908115610caa57600091610c7c575b5080610bdc610bd68561014e565b9161014e565b10610c5c5750610c0a81610c04610bf5600233906105a8565b91610bff836105dd565b610624565b90610685565b610c153383906115a2565b339091610c427feb9a8c68a32bc6989217e69f932cf098ff5d0e2f11305800394c73b554d2ce9e9261059c565b92610c57610c4e610103565b928392836105ea565b0390a2565b82610c786000928392630722f6b360e11b8452600484016105ea565b0390fd5b610c9d915060203d8111610ca3575b610c958183610a78565b810190610ab6565b38610bc8565b503d610c8b565b610ad5565b90610ccb6000928392638059c74760e01b8452600484016105ea565b0390fd5b60006362f216e560e01b815280610ce8600482016101a3565b0390fd5b600063162908e360e11b815280610d05600482016101a3565b0390fd5b610d12906109e6565b565b610d1c61136c565b610d24610d4e565b565b610d3a610d35610d3f92610552565b610555565b610113565b90565b610d4b90610d26565b90565b610d60610d5b6000610d42565b61172d565b565b610d6a610d14565b565b610d7461136c565b610d7c610d7e565b565b610d866117ef565b7fab35696f06e428ebc5ceba8cd17f8fed287baf43440206d1943af1ee53e6d267610daf610103565b80610db9816101a3565b0390a1565b610dc6610d6c565b565b600090565b60018060a01b031690565b610de4610de9916105c0565b610dcd565b90565b610df69054610dd8565b90565b610e01610dc8565b50610e0c6000610dec565b90565b610e2090610e1b61136c565b610e22565b565b610e2d816003610685565b610e637f972aba470577c14606bbf4bbdec1fed4925f242fcef40b4a8d242983365d029191610e5a610103565b9182918261024c565b0390a1565b610e7190610e0f565b565b610e8490610e7f61136c565b610eed565b565b610e8f816102cb565b03610e9657565b600080fd5b90505190610ea882610e86565b565b90602082820312610ec457610ec191600001610e9b565b90565b61010e565b916020610eeb929493610ee460408201966000830190610415565b019061023f565b565b80610f01610efb6000610558565b9161014e565b146110c357610f4f6020610f1d610f186004610a33565b610a40565b6370a0823190610f44610f2f30610a4c565b92610f38610103565b95869485938493610aa1565b835260048301610422565b03915afa9081156110be57600091611090575b5080610f76610f708461014e565b9161014e565b1061107057610f8d610f886004610a33565b610a40565b602063a9059cbb913390610fb560008795610fc0610fa9610103565b97889687958694610aa1565b845260048401610ec9565b03925af1801561106b57610fdd9160009161103d575b50156102cb565b61101d57506110187f4eacc637a5fb1dbbc94595a9432e0a8d75ae5d51d189021963a6cc8575465ddf9161100f610103565b9182918261024c565b0390a1565b906110396000928392630722f6b360e11b8452600484016105ea565b0390fd5b61105e915060203d8111611064575b6110568183610a78565b810190610eaa565b38610fd6565b503d61104c565b610ad5565b9061108c6000928392630722f6b360e11b8452600484016105ea565b0390fd5b6110b1915060203d81116110b7575b6110a98183610a78565b810190610ab6565b38610f62565b503d61109f565b610ad5565b600063162908e360e11b8152806110dc600482016101a3565b0390fd5b6110e990610e73565b565b6110fc906110f761136c565b6110fe565b565b8061111a61111461110f6000610d42565b61011e565b9161011e565b1461112a576111289061172d565b565b61114f6111376000610d42565b6000918291631e4fbdf760e01b835260048301610422565b0390fd5b61115c906110eb565b565b61116f9061116a61136c565b6111a4565b565b60409061119b6111a2949695939661119160608401986000850190610415565b6020830190610415565b019061023f565b565b806111b86111b26000610558565b9161014e565b14611344576111cf6111ca6004610a33565b610a40565b60206323b872dd91339061120060006111e730610a4c565b9561120b886111f4610103565b98899788968795610aa1565b855260048501611171565b03925af1801561133f5761122891600091611311575b50156102cb565b611267576112627f0f920186940a9c60ff07b508b49ba5dca2c647b29aebfa69964b44e5e873a62c91611259610103565b9182918261024c565b0390a1565b6112a990602061127f61127a6004610a33565b610a40565b6370a082319061129e3392611292610103565b96879485938493610aa1565b835260048301610422565b03915afa91821561130c576000926112dc575b506112d86000928392630722f6b360e11b8452600484016105ea565b0390fd5b6112fe91925060203d8111611305575b6112f68183610a78565b810190610ab6565b90826112bc565b503d6112ec565b610ad5565b611332915060203d8111611338575b61132a8183610a78565b810190610eaa565b38611221565b503d611320565b610ad5565b600063162908e360e11b81528061135d600482016101a3565b0390fd5b61136a9061115e565b565b611374610df9565b61138d6113876113826117f9565b61011e565b9161011e565b0361139457565b6113b761139f6117f9565b600091829163118cdaa760e01b835260048301610422565b0390fd5b6113d66113d06113cb6000610d42565b61011e565b9161011e565b146113dd57565b600063e6c4247b60e01b8152806113f6600482016101a3565b0390fd5b611402611806565b61140a61145a565b565b60a01b90565b9061142160ff60a01b9161140c565b9181191691161790565b611434906102cb565b90565b90565b9061144f61144a6114569261142b565b611437565b8254611412565b9055565b61146560008061143a565b61146d6117f9565b6114a37f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9161149a610103565b91829182610422565b0390a1565b6114b06113fa565b565b6114ba6109b1565b6114c057565b600063d93c066560e01b8152806114d9600482016101a3565b0390fd5b90565b6114f46114ef6114f9926114dd565b610555565b61014e565b90565b61150660026114e0565b90565b61151360016105dd565b61152c6115266115216114fc565b61014e565b9161014e565b146115455761154361153c6114fc565b6001610685565b565b6000633ee5aeb560e01b81528061155e600482016101a3565b0390fd5b90565b61157961157461157e92611562565b610555565b61014e565b90565b61158b6001611565565b90565b6115a0611599611581565b6001610685565b565b60206115b66115b16004610a33565b610a40565b63a9059cbb92906115db600086956115e66115cf610103565b97889687958694610aa1565b845260048401610ec9565b03925af180156116ea57611603916000916116bc575b50156102cb565b61160a5750565b61165490602061162261161d6004610a33565b610a40565b6370a082319061164961163430610a4c565b9261163d610103565b96879485938493610aa1565b835260048301610422565b03915afa9182156116b757600092611687575b506116836000928392630722f6b360e11b8452600484016105ea565b0390fd5b6116a991925060203d81116116b0575b6116a18183610a78565b810190610ab6565b9082611667565b503d611697565b610ad5565b6116dd915060203d81116116e3575b6116d58183610a78565b810190610eaa565b386115fc565b503d6116cb565b610ad5565b9061170060018060a01b0391610649565b9181191691161790565b90565b9061172261171d6117299261059c565b61170a565b82546116ef565b9055565b6117376000610dec565b61174282600061170d565b906117766117707f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09361059c565b9161059c565b9161177f610103565b80611789816101a3565b0390a3565b6117966114b2565b61179e6117a0565b565b6117ac6001600061143a565b6117b46117f9565b6117ea7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916117e1610103565b91829182610422565b0390a1565b6117f761178e565b565b611801610dc8565b503390565b6118176118116109b1565b156102cb565b61181d57565b6000638dfc202b60e01b815280611836600482016101a3565b0390fdfea2646970667358221220364f9e3e0f2c1ecb0e56022200974795b93e7f352feb730e2ef5bdb5aa3b67fc64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0x539 JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x326F823F EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x4CABB824 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x507CD30F EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x5F42513C EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x6E5F4A89 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xDB068E0E EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xDB81F99B EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xBC JUMPI PUSH4 0xF688BCFB SUB PUSH2 0xE JUMPI PUSH2 0x506 JUMP JUMPDEST PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x46D JUMP JUMPDEST PUSH2 0x438 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x3AF JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST PUSH2 0x1ED JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x127 SWAP1 PUSH2 0x113 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x133 DUP2 PUSH2 0x11E JUMP JUMPDEST SUB PUSH2 0x13A JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x14C DUP3 PUSH2 0x12A JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15A DUP2 PUSH2 0x14E JUMP JUMPDEST SUB PUSH2 0x161 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x173 DUP3 PUSH2 0x151 JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x19E JUMPI DUP1 PUSH2 0x192 PUSH2 0x19B SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x13F JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x10E JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x1D8 JUMPI PUSH2 0x1C2 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x175 JUMP JUMPDEST SWAP1 PUSH2 0x79D JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x1D4 DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x1E8 JUMPI JUMP JUMPDEST PUSH2 0x10E JUMP JUMPDEST CALLVALUE PUSH2 0x21B JUMPI PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x205 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x20D PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x217 DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x23A JUMPI PUSH2 0x237 SWAP2 PUSH1 0x0 ADD PUSH2 0x166 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x10E JUMP JUMPDEST PUSH2 0x248 SWAP1 PUSH2 0x14E JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x260 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x23F JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x292 JUMPI PUSH2 0x28E PUSH2 0x27D PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x220 JUMP JUMPDEST PUSH2 0x83F JUMP JUMPDEST PUSH2 0x285 PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x24C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH2 0x2B0 PUSH2 0x2AA CALLDATASIZE PUSH1 0x4 PUSH2 0x175 JUMP JUMPDEST SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x2C2 DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2D9 SWAP1 PUSH2 0x2CB JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2F1 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x2D0 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x323 JUMPI PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x31F PUSH2 0x30E PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x316 PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2DD JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x342 JUMPI PUSH2 0x33F SWAP2 PUSH1 0x0 ADD PUSH2 0x13F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x10E JUMP JUMPDEST CALLVALUE PUSH2 0x377 JUMPI PUSH2 0x373 PUSH2 0x362 PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0x328 JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x36A PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x24C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST CALLVALUE PUSH2 0x3AA JUMPI PUSH2 0x394 PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x220 JUMP JUMPDEST PUSH2 0xD09 JUMP JUMPDEST PUSH2 0x39C PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x3A6 DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST CALLVALUE PUSH2 0x3DD JUMPI PUSH2 0x3BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0xD62 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x3D9 DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST CALLVALUE PUSH2 0x410 JUMPI PUSH2 0x3F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x3FA PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x402 PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x40C DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST PUSH2 0x41E SWAP1 PUSH2 0x11E JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x436 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x415 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x468 JUMPI PUSH2 0x448 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x464 PUSH2 0x453 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x422 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST CALLVALUE PUSH2 0x49B JUMPI PUSH2 0x485 PUSH2 0x480 CALLDATASIZE PUSH1 0x4 PUSH2 0x220 JUMP JUMPDEST PUSH2 0xE68 JUMP JUMPDEST PUSH2 0x48D PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x497 DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST CALLVALUE PUSH2 0x4CE JUMPI PUSH2 0x4B8 PUSH2 0x4B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x220 JUMP JUMPDEST PUSH2 0x10E0 JUMP JUMPDEST PUSH2 0x4C0 PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x4CA DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST CALLVALUE PUSH2 0x501 JUMPI PUSH2 0x4EB PUSH2 0x4E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x328 JUMP JUMPDEST PUSH2 0x1153 JUMP JUMPDEST PUSH2 0x4F3 PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x4FD DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST CALLVALUE PUSH2 0x534 JUMPI PUSH2 0x51E PUSH2 0x519 CALLDATASIZE PUSH1 0x4 PUSH2 0x220 JUMP JUMPDEST PUSH2 0x1361 JUMP JUMPDEST PUSH2 0x526 PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x530 DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH2 0x550 SWAP2 PUSH2 0x54B PUSH2 0x136C JUMP JUMPDEST PUSH2 0x6A5 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x56C PUSH2 0x567 PUSH2 0x571 SWAP3 PUSH2 0x552 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH2 0x14E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x588 PUSH2 0x583 PUSH2 0x58D SWAP3 PUSH2 0x113 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x599 SWAP1 PUSH2 0x574 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x5A5 SWAP1 PUSH2 0x590 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x5B2 SWAP1 PUSH2 0x59C JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x5D5 PUSH2 0x5DA SWAP2 PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x5C6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x5E7 SWAP1 SLOAD PUSH2 0x5C9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x60C SWAP3 SWAP5 SWAP4 PUSH2 0x605 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x23F JUMP JUMPDEST ADD SWAP1 PUSH2 0x23F JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x633 PUSH2 0x639 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x14E JUMP JUMPDEST SWAP3 PUSH2 0x14E JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0x644 JUMPI JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x65C PUSH1 0x0 NOT SWAP2 PUSH2 0x649 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x67A PUSH2 0x675 PUSH2 0x67F SWAP3 PUSH2 0x14E JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH2 0x14E JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x69A PUSH2 0x695 PUSH2 0x6A1 SWAP3 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x682 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x64F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x6AE DUP2 PUSH2 0x13BB JUMP JUMPDEST DUP2 PUSH2 0x6C2 PUSH2 0x6BC PUSH1 0x0 PUSH2 0x558 JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST EQ PUSH2 0x780 JUMPI PUSH2 0x6DB PUSH2 0x6D6 PUSH1 0x2 DUP4 SWAP1 PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST DUP1 PUSH2 0x6EE PUSH2 0x6E8 DUP6 PUSH2 0x14E JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST LT PUSH2 0x760 JUMPI POP PUSH2 0x71C DUP3 PUSH2 0x716 PUSH2 0x707 PUSH1 0x2 DUP6 SWAP1 PUSH2 0x5A8 JUMP JUMPDEST SWAP2 PUSH2 0x711 DUP4 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST SWAP1 PUSH2 0x685 JUMP JUMPDEST PUSH2 0x75B PUSH2 0x749 PUSH32 0x2254DF2302625E26A2B6C7E8E9DF285AAE8492E23F60FDD9B01F7BD6AEB7B5EA SWAP3 PUSH2 0x59C JUMP JUMPDEST SWAP3 PUSH2 0x752 PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x24C JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST DUP3 PUSH2 0x77C PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x8059C747 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x5EA JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x799 PUSH1 0x4 DUP3 ADD PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x7A7 SWAP2 PUSH2 0x53E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7B1 PUSH2 0x136C JUMP JUMPDEST PUSH2 0x7B9 PUSH2 0x7BB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0x14A8 JUMP JUMPDEST PUSH32 0xE5E3B3FB504C22CF5C42FA07D521225937514C654007E1F12646F89768D6F94 PUSH2 0x7EC PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x7F6 DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x803 PUSH2 0x7A9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x819 PUSH2 0x81F SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x14E JUMP JUMPDEST SWAP3 PUSH2 0x14E JUMP JUMPDEST SWAP2 PUSH2 0x82B DUP4 DUP3 MUL PUSH2 0x14E JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x83A JUMPI JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH2 0x847 PUSH2 0x805 JUMP JUMPDEST POP PUSH2 0x852 PUSH1 0x3 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x865 PUSH2 0x85F PUSH1 0x0 PUSH2 0x558 JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST EQ PUSH2 0x881 JUMPI PUSH2 0x87E SWAP1 PUSH2 0x878 PUSH1 0x3 PUSH2 0x5DD JUMP JUMPDEST SWAP1 PUSH2 0x80A JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP PUSH2 0x88C PUSH1 0x0 PUSH2 0x558 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x8A1 SWAP2 PUSH2 0x89C PUSH2 0x136C JUMP JUMPDEST PUSH2 0x8C8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8B2 PUSH2 0x8B8 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x14E JUMP JUMPDEST SWAP3 PUSH2 0x14E JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8C3 JUMPI JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH2 0x8D1 DUP2 PUSH2 0x13BB JUMP JUMPDEST DUP2 PUSH2 0x8E5 PUSH2 0x8DF PUSH1 0x0 PUSH2 0x558 JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST EQ PUSH2 0x956 JUMPI PUSH2 0x912 DUP3 PUSH2 0x90C PUSH2 0x8FD PUSH1 0x2 DUP6 SWAP1 PUSH2 0x5A8 JUMP JUMPDEST SWAP2 PUSH2 0x907 DUP4 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST SWAP1 PUSH2 0x685 JUMP JUMPDEST PUSH2 0x951 PUSH2 0x93F PUSH32 0xFE6FCB45ADAAA54F7E3491F6A7964049817F1E437F33587E634A4629FBCF3A6 SWAP3 PUSH2 0x59C JUMP JUMPDEST SWAP3 PUSH2 0x948 PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x24C JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x96F PUSH1 0x4 DUP3 ADD PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x97D SWAP2 PUSH2 0x88F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xA0 SHR SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x99C PUSH2 0x9A1 SWAP2 PUSH2 0x984 JUMP JUMPDEST PUSH2 0x98A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9AE SWAP1 SLOAD PUSH2 0x990 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9B9 PUSH2 0x97F JUMP JUMPDEST POP PUSH2 0x9C4 PUSH1 0x0 PUSH2 0x9A4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9DE PUSH2 0x9E3 SWAP2 PUSH2 0x9D6 PUSH2 0x805 JUMP JUMPDEST POP PUSH1 0x2 PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9F7 SWAP1 PUSH2 0x9F2 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x9F9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA0A SWAP1 PUSH2 0xA05 PUSH2 0x1509 JUMP JUMPDEST PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0xA12 PUSH2 0x158E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xA2B PUSH2 0xA30 SWAP2 PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0xA14 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA3D SWAP1 SLOAD PUSH2 0xA1F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA49 SWAP1 PUSH2 0x590 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA55 SWAP1 PUSH2 0x590 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0xA82 SWAP1 PUSH2 0xA58 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA9C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xA62 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xAB4 DUP3 PUSH2 0x151 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xAD0 JUMPI PUSH2 0xACD SWAP2 PUSH1 0x0 ADD PUSH2 0xAA7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x10E JUMP JUMPDEST PUSH2 0xADD PUSH2 0x103 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xAEF CALLER PUSH2 0x13BB JUMP JUMPDEST DUP1 PUSH2 0xB03 PUSH2 0xAFD PUSH1 0x0 PUSH2 0x558 JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST EQ PUSH2 0xCEC JUMPI PUSH2 0xB12 PUSH1 0x3 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0xB25 PUSH2 0xB1F PUSH1 0x0 PUSH2 0x558 JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST EQ PUSH2 0xCCF JUMPI PUSH2 0xB3E PUSH2 0xB39 PUSH1 0x2 CALLER SWAP1 PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST DUP1 PUSH2 0xB51 PUSH2 0xB4B DUP5 PUSH2 0x14E JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST LT PUSH2 0xCAF JUMPI POP PUSH2 0xB6B DUP2 PUSH2 0xB65 PUSH1 0x3 PUSH2 0x5DD JUMP JUMPDEST SWAP1 PUSH2 0x80A JUMP JUMPDEST SWAP1 PUSH2 0xBB5 PUSH1 0x20 PUSH2 0xB83 PUSH2 0xB7E PUSH1 0x4 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xBAA PUSH2 0xB95 ADDRESS PUSH2 0xA4C JUMP JUMPDEST SWAP3 PUSH2 0xB9E PUSH2 0x103 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xAA1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x422 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xCAA JUMPI PUSH1 0x0 SWAP2 PUSH2 0xC7C JUMPI JUMPDEST POP DUP1 PUSH2 0xBDC PUSH2 0xBD6 DUP6 PUSH2 0x14E JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST LT PUSH2 0xC5C JUMPI POP PUSH2 0xC0A DUP2 PUSH2 0xC04 PUSH2 0xBF5 PUSH1 0x2 CALLER SWAP1 PUSH2 0x5A8 JUMP JUMPDEST SWAP2 PUSH2 0xBFF DUP4 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST SWAP1 PUSH2 0x685 JUMP JUMPDEST PUSH2 0xC15 CALLER DUP4 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST CALLER SWAP1 SWAP2 PUSH2 0xC42 PUSH32 0xEB9A8C68A32BC6989217E69F932CF098FF5D0E2F11305800394C73B554D2CE9E SWAP3 PUSH2 0x59C JUMP JUMPDEST SWAP3 PUSH2 0xC57 PUSH2 0xC4E PUSH2 0x103 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x5EA JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST DUP3 PUSH2 0xC78 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x722F6B3 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x5EA JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xC9D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xCA3 JUMPI JUMPDEST PUSH2 0xC95 DUP2 DUP4 PUSH2 0xA78 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xAB6 JUMP JUMPDEST CODESIZE PUSH2 0xBC8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC8B JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST SWAP1 PUSH2 0xCCB PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x8059C747 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x5EA JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x62F216E5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xCE8 PUSH1 0x4 DUP3 ADD PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0xD05 PUSH1 0x4 DUP3 ADD PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xD12 SWAP1 PUSH2 0x9E6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD1C PUSH2 0x136C JUMP JUMPDEST PUSH2 0xD24 PUSH2 0xD4E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD3A PUSH2 0xD35 PUSH2 0xD3F SWAP3 PUSH2 0x552 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD4B SWAP1 PUSH2 0xD26 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD60 PUSH2 0xD5B PUSH1 0x0 PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x172D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD6A PUSH2 0xD14 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD74 PUSH2 0x136C JUMP JUMPDEST PUSH2 0xD7C PUSH2 0xD7E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD86 PUSH2 0x17EF JUMP JUMPDEST PUSH32 0xAB35696F06E428EBC5CEBA8CD17F8FED287BAF43440206D1943AF1EE53E6D267 PUSH2 0xDAF PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0xDB9 DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xDC6 PUSH2 0xD6C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xDE4 PUSH2 0xDE9 SWAP2 PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0xDCD JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDF6 SWAP1 SLOAD PUSH2 0xDD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE01 PUSH2 0xDC8 JUMP JUMPDEST POP PUSH2 0xE0C PUSH1 0x0 PUSH2 0xDEC JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE20 SWAP1 PUSH2 0xE1B PUSH2 0x136C JUMP JUMPDEST PUSH2 0xE22 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE2D DUP2 PUSH1 0x3 PUSH2 0x685 JUMP JUMPDEST PUSH2 0xE63 PUSH32 0x972ABA470577C14606BBF4BBDEC1FED4925F242FCEF40B4A8D242983365D0291 SWAP2 PUSH2 0xE5A PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x24C JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xE71 SWAP1 PUSH2 0xE0F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE84 SWAP1 PUSH2 0xE7F PUSH2 0x136C JUMP JUMPDEST PUSH2 0xEED JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE8F DUP2 PUSH2 0x2CB JUMP JUMPDEST SUB PUSH2 0xE96 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xEA8 DUP3 PUSH2 0xE86 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xEC4 JUMPI PUSH2 0xEC1 SWAP2 PUSH1 0x0 ADD PUSH2 0xE9B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x10E JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xEEB SWAP3 SWAP5 SWAP4 PUSH2 0xEE4 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x415 JUMP JUMPDEST ADD SWAP1 PUSH2 0x23F JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0xF01 PUSH2 0xEFB PUSH1 0x0 PUSH2 0x558 JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST EQ PUSH2 0x10C3 JUMPI PUSH2 0xF4F PUSH1 0x20 PUSH2 0xF1D PUSH2 0xF18 PUSH1 0x4 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xF44 PUSH2 0xF2F ADDRESS PUSH2 0xA4C JUMP JUMPDEST SWAP3 PUSH2 0xF38 PUSH2 0x103 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xAA1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x422 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x10BE JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1090 JUMPI JUMPDEST POP DUP1 PUSH2 0xF76 PUSH2 0xF70 DUP5 PUSH2 0x14E JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST LT PUSH2 0x1070 JUMPI PUSH2 0xF8D PUSH2 0xF88 PUSH1 0x4 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x20 PUSH4 0xA9059CBB SWAP2 CALLER SWAP1 PUSH2 0xFB5 PUSH1 0x0 DUP8 SWAP6 PUSH2 0xFC0 PUSH2 0xFA9 PUSH2 0x103 JUMP JUMPDEST SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0xAA1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xEC9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x106B JUMPI PUSH2 0xFDD SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x103D JUMPI JUMPDEST POP ISZERO PUSH2 0x2CB JUMP JUMPDEST PUSH2 0x101D JUMPI POP PUSH2 0x1018 PUSH32 0x4EACC637A5FB1DBBC94595A9432E0A8D75AE5D51D189021963A6CC8575465DDF SWAP2 PUSH2 0x100F PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x24C JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST SWAP1 PUSH2 0x1039 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x722F6B3 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x5EA JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x105E SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1064 JUMPI JUMPDEST PUSH2 0x1056 DUP2 DUP4 PUSH2 0xA78 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xEAA JUMP JUMPDEST CODESIZE PUSH2 0xFD6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x104C JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST SWAP1 PUSH2 0x108C PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x722F6B3 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x5EA JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x10B1 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x10B7 JUMPI JUMPDEST PUSH2 0x10A9 DUP2 DUP4 PUSH2 0xA78 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xAB6 JUMP JUMPDEST CODESIZE PUSH2 0xF62 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x109F JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x10DC PUSH1 0x4 DUP3 ADD PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x10E9 SWAP1 PUSH2 0xE73 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x10FC SWAP1 PUSH2 0x10F7 PUSH2 0x136C JUMP JUMPDEST PUSH2 0x10FE JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x111A PUSH2 0x1114 PUSH2 0x110F PUSH1 0x0 PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST SWAP2 PUSH2 0x11E JUMP JUMPDEST EQ PUSH2 0x112A JUMPI PUSH2 0x1128 SWAP1 PUSH2 0x172D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x114F PUSH2 0x1137 PUSH1 0x0 PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x422 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x115C SWAP1 PUSH2 0x10EB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x116F SWAP1 PUSH2 0x116A PUSH2 0x136C JUMP JUMPDEST PUSH2 0x11A4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x119B PUSH2 0x11A2 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x1191 PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x415 JUMP JUMPDEST ADD SWAP1 PUSH2 0x23F JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x11B8 PUSH2 0x11B2 PUSH1 0x0 PUSH2 0x558 JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST EQ PUSH2 0x1344 JUMPI PUSH2 0x11CF PUSH2 0x11CA PUSH1 0x4 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x20 PUSH4 0x23B872DD SWAP2 CALLER SWAP1 PUSH2 0x1200 PUSH1 0x0 PUSH2 0x11E7 ADDRESS PUSH2 0xA4C JUMP JUMPDEST SWAP6 PUSH2 0x120B DUP9 PUSH2 0x11F4 PUSH2 0x103 JUMP JUMPDEST SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH2 0xAA1 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x1171 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x133F JUMPI PUSH2 0x1228 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1311 JUMPI JUMPDEST POP ISZERO PUSH2 0x2CB JUMP JUMPDEST PUSH2 0x1267 JUMPI PUSH2 0x1262 PUSH32 0xF920186940A9C60FF07B508B49BA5DCA2C647B29AEBFA69964B44E5E873A62C SWAP2 PUSH2 0x1259 PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x24C JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x12A9 SWAP1 PUSH1 0x20 PUSH2 0x127F PUSH2 0x127A PUSH1 0x4 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x129E CALLER SWAP3 PUSH2 0x1292 PUSH2 0x103 JUMP JUMPDEST SWAP7 DUP8 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xAA1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x422 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x130C JUMPI PUSH1 0x0 SWAP3 PUSH2 0x12DC JUMPI JUMPDEST POP PUSH2 0x12D8 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x722F6B3 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x5EA JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x12FE SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1305 JUMPI JUMPDEST PUSH2 0x12F6 DUP2 DUP4 PUSH2 0xA78 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xAB6 JUMP JUMPDEST SWAP1 DUP3 PUSH2 0x12BC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x12EC JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST PUSH2 0x1332 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1338 JUMPI JUMPDEST PUSH2 0x132A DUP2 DUP4 PUSH2 0xA78 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xEAA JUMP JUMPDEST CODESIZE PUSH2 0x1221 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1320 JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x135D PUSH1 0x4 DUP3 ADD PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x136A SWAP1 PUSH2 0x115E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1374 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x138D PUSH2 0x1387 PUSH2 0x1382 PUSH2 0x17F9 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST SWAP2 PUSH2 0x11E JUMP JUMPDEST SUB PUSH2 0x1394 JUMPI JUMP JUMPDEST PUSH2 0x13B7 PUSH2 0x139F PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x422 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x13D6 PUSH2 0x13D0 PUSH2 0x13CB PUSH1 0x0 PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST SWAP2 PUSH2 0x11E JUMP JUMPDEST EQ PUSH2 0x13DD JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x13F6 PUSH1 0x4 DUP3 ADD PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1402 PUSH2 0x1806 JUMP JUMPDEST PUSH2 0x140A PUSH2 0x145A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1421 PUSH1 0xFF PUSH1 0xA0 SHL SWAP2 PUSH2 0x140C JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x1434 SWAP1 PUSH2 0x2CB JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x144F PUSH2 0x144A PUSH2 0x1456 SWAP3 PUSH2 0x142B JUMP JUMPDEST PUSH2 0x1437 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1412 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1465 PUSH1 0x0 DUP1 PUSH2 0x143A JUMP JUMPDEST PUSH2 0x146D PUSH2 0x17F9 JUMP JUMPDEST PUSH2 0x14A3 PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP2 PUSH2 0x149A PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x422 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x14B0 PUSH2 0x13FA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x14BA PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x14C0 JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x14D9 PUSH1 0x4 DUP3 ADD PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x14F4 PUSH2 0x14EF PUSH2 0x14F9 SWAP3 PUSH2 0x14DD JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH2 0x14E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1506 PUSH1 0x2 PUSH2 0x14E0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1513 PUSH1 0x1 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x152C PUSH2 0x1526 PUSH2 0x1521 PUSH2 0x14FC JUMP JUMPDEST PUSH2 0x14E JUMP JUMPDEST SWAP2 PUSH2 0x14E JUMP JUMPDEST EQ PUSH2 0x1545 JUMPI PUSH2 0x1543 PUSH2 0x153C PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x1 PUSH2 0x685 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x155E PUSH1 0x4 DUP3 ADD PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1579 PUSH2 0x1574 PUSH2 0x157E SWAP3 PUSH2 0x1562 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH2 0x14E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x158B PUSH1 0x1 PUSH2 0x1565 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15A0 PUSH2 0x1599 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x685 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x20 PUSH2 0x15B6 PUSH2 0x15B1 PUSH1 0x4 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH4 0xA9059CBB SWAP3 SWAP1 PUSH2 0x15DB PUSH1 0x0 DUP7 SWAP6 PUSH2 0x15E6 PUSH2 0x15CF PUSH2 0x103 JUMP JUMPDEST SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0xAA1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xEC9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x16EA JUMPI PUSH2 0x1603 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x16BC JUMPI JUMPDEST POP ISZERO PUSH2 0x2CB JUMP JUMPDEST PUSH2 0x160A JUMPI POP JUMP JUMPDEST PUSH2 0x1654 SWAP1 PUSH1 0x20 PUSH2 0x1622 PUSH2 0x161D PUSH1 0x4 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1649 PUSH2 0x1634 ADDRESS PUSH2 0xA4C JUMP JUMPDEST SWAP3 PUSH2 0x163D PUSH2 0x103 JUMP JUMPDEST SWAP7 DUP8 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xAA1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x422 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x16B7 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1687 JUMPI JUMPDEST POP PUSH2 0x1683 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x722F6B3 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x5EA JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x16A9 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x16B0 JUMPI JUMPDEST PUSH2 0x16A1 DUP2 DUP4 PUSH2 0xA78 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xAB6 JUMP JUMPDEST SWAP1 DUP3 PUSH2 0x1667 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1697 JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST PUSH2 0x16DD SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x16E3 JUMPI JUMPDEST PUSH2 0x16D5 DUP2 DUP4 PUSH2 0xA78 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xEAA JUMP JUMPDEST CODESIZE PUSH2 0x15FC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x16CB JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST SWAP1 PUSH2 0x1700 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x649 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1722 PUSH2 0x171D PUSH2 0x1729 SWAP3 PUSH2 0x59C JUMP JUMPDEST PUSH2 0x170A JUMP JUMPDEST DUP3 SLOAD PUSH2 0x16EF JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1737 PUSH1 0x0 PUSH2 0xDEC JUMP JUMPDEST PUSH2 0x1742 DUP3 PUSH1 0x0 PUSH2 0x170D JUMP JUMPDEST SWAP1 PUSH2 0x1776 PUSH2 0x1770 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x59C JUMP JUMPDEST SWAP2 PUSH2 0x59C JUMP JUMPDEST SWAP2 PUSH2 0x177F PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH2 0x1789 DUP2 PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x1796 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x179E PUSH2 0x17A0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x17AC PUSH1 0x1 PUSH1 0x0 PUSH2 0x143A JUMP JUMPDEST PUSH2 0x17B4 PUSH2 0x17F9 JUMP JUMPDEST PUSH2 0x17EA PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0x17E1 PUSH2 0x103 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x422 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x17F7 PUSH2 0x178E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1801 PUSH2 0xDC8 JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST PUSH2 0x1817 PUSH2 0x1811 PUSH2 0x9B1 JUMP JUMPDEST ISZERO PUSH2 0x2CB JUMP JUMPDEST PUSH2 0x181D JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1836 PUSH1 0x4 DUP3 ADD PUSH2 0x1A3 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE 0x4F SWAP15 RETURNDATACOPY 0xF 0x2C 0x1E 0xCB 0xE JUMP MUL 0x22 STOP SWAP8 SELFBALANCE SWAP6 0xB9 RETURNDATACOPY PUSH32 0x352FEB730E2EF5BDB5AA3B67FC64736F6C634300081C00330000000000000000 ",
              "sourceMap": "435:8863:5:-:0;;;;;;;;;-1:-1:-1;435:8863:5;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;1500:62:0;;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;435:8863:5:-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;4304:394::-;4400:4;;;:::i;:::-;4416:6;:11;;4426:1;4416:11;:::i;:::-;;;:::i;:::-;;4412:54;;4497:19;;:13;4511:4;4497:19;;:::i;:::-;;:::i;:::-;4526:14;:23;;4543:6;4526:23;:::i;:::-;;;:::i;:::-;;4522:93;;4644:6;4621:29;4644:6;4621:29;:19;:13;4635:4;4621:19;;:::i;:::-;:29;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;4662:31;;;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;4304:394::o;4522:93::-;4585:6;4566:42;;;;;;;;;;;;;;:::i;:::-;;;;4412:54;4444:15;;;;;;;;;;;;:::i;:::-;;;;4304:394;;;;;:::i;:::-;:::o;1500:62:0:-;;;:::i;:::-;1554:1;;:::i;:::-;1500:62::o;8515:88:5:-;;;:::i;:::-;8580:18;;;:::i;:::-;;;;;:::i;:::-;;;;8515:88::o;:::-;;;:::i;:::-;:::o;435:8863::-;;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;:::i;5455:186::-;5536:7;;:::i;:::-;5555:12;;;;:::i;:::-;:17;;5571:1;5555:17;:::i;:::-;;;:::i;:::-;;5551:46;;5610:26;:11;5624:12;;;:::i;:::-;5610:26;;:::i;:::-;5603:33;:::o;5551:46::-;5589:1;5582:8;5589:1;5582:8;:::i;:::-;;:::o;1500:62:0:-;;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;435:8863:5:-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;3905:234::-;3996:4;;;:::i;:::-;4012:6;:11;;4022:1;4012:11;:::i;:::-;;;:::i;:::-;;4008:54;;4068:29;4091:6;4068:29;:19;:13;4082:4;4068:19;;:::i;:::-;:29;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;4109:25;;;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;3905:234::o;4008:54::-;4040:15;4444;;;4040;;;;;;;;:::i;:::-;;;;3905:234;;;;;:::i;:::-;:::o;435:8863::-;;;:::o;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;1726:84:3:-;1773:4;;:::i;:::-;1796:7;;;;:::i;:::-;1789:14;:::o;4834:108:5:-;4918:19;;4834:108;4896:7;;:::i;:::-;4918:13;;:19;:::i;:::-;;:::i;:::-;4911:26;:::o;1315:72:3:-;1379:1;1315:72;;;:::i;:::-;1379:1;:::i;:::-;1315:72::o;2466:103:4:-;2531:1;2466:103;;;:::i;:::-;2531:1;:::i;:::-;;;:::i;:::-;2466:103::o;435:8863:5:-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;5841:1023;5940:10;;;:::i;:::-;5962:11;:16;;5977:1;5962:16;:::i;:::-;;;:::i;:::-;;5958:59;;6064:12;;;:::i;:::-;:17;;6080:1;6064:17;:::i;:::-;;;:::i;:::-;;6060:65;;6187:25;;:13;6201:10;6187:25;;:::i;:::-;;:::i;:::-;6222:11;:25;;6236:11;6222:25;:::i;:::-;;;:::i;:::-;;6218:97;;6371:11;:26;:11;6385:12;;;:::i;:::-;6371:26;;:::i;:::-;6471:9;:34;;:19;:9;;;:::i;:::-;:19;:::i;:::-;;6499:4;6471:34;6491:13;6499:4;6491:13;:::i;:::-;6471:34;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;5841:1023;6441:64;6515:19;:32;;6537:10;6515:32;:::i;:::-;;;:::i;:::-;;6511:116;;6697:11;6668:40;6697:11;6668:40;:25;:13;6682:10;6668:25;;:::i;:::-;:40;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;6770:10;6758;6770;;;:::i;:::-;6823;6835:11;6848:10;6811:48;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;5841:1023::o;6511:116::-;6588:10;6564:56;;;;;;;;;;;;;;:::i;:::-;;;;6471:34;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;6218:97::-;6264:44;;;4566:42;;;;;;6264:44;;;;;;:::i;:::-;;;;6060:65;6098:20;;;;;;;;;;;;:::i;:::-;;;;5958:59;5995:15;4444;;;5995;;;;;;;;:::i;:::-;;;;5841:1023;;;;:::i;:::-;:::o;1500:62:0:-;;;:::i;:::-;1554:1;;:::i;:::-;1500:62::o;435:8863:5:-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;2293:101:0:-;2376:10;;2384:1;2376:10;:::i;:::-;;:::i;:::-;2293:101::o;:::-;;;:::i;:::-;:::o;1500:62::-;;;:::i;:::-;1554:1;;:::i;:::-;1500:62::o;8330:82:5:-;;;:::i;:::-;8391:16;;;:::i;:::-;;;;;:::i;:::-;;;;8330:82::o;:::-;;;:::i;:::-;:::o;435:8863::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;1638:85:0:-;1684:7;;:::i;:::-;1710:6;;;;:::i;:::-;1703:13;:::o;1500:62::-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;5162:121:5:-;5226:19;5241:4;5226:19;;:::i;:::-;5257:21;;;;;:::i;:::-;;;;;;:::i;:::-;;;;5162:121::o;:::-;;;;:::i;:::-;:::o;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;435:8863:5:-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;7546:556::-;7613:6;:11;;7623:1;7613:11;:::i;:::-;;;:::i;:::-;;7609:54;;7732:34;;:19;:9;;;:::i;:::-;:19;:::i;:::-;;7760:4;7732:34;7752:13;7760:4;7752:13;:::i;:::-;7732:34;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;7546:556;7706:60;7776:15;:24;;7794:6;7776:24;:::i;:::-;;;:::i;:::-;;7772:100;;7937:18;:9;;;:::i;:::-;:18;:::i;:::-;:38;:18;7956:10;;7968:6;7937:38;;7968:6;7937:38;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;7985:8;7937:38;;;;;7546:556;7922:53;7985:8;;:::i;:::-;7981:84;;8090:6;8076:21;;;;;:::i;:::-;;;;;;:::i;:::-;;;;7546:556::o;7981:84::-;8010:48;;;6564:56;;;;;;8010:48;;;;;;:::i;:::-;;;;7937:38;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;7772:100::-;7817:48;;;6564:56;;;;;;7817:48;;;;;;:::i;:::-;;;;7732:34;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;7609:54::-;7641:15;4444;;;7641;;;;;;;;:::i;:::-;;;;7546:556;;;;:::i;:::-;:::o;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;2543:215::-;2627:8;:22;;2639:10;2647:1;2639:10;:::i;:::-;2627:22;:::i;:::-;;;:::i;:::-;;2623:91;;2742:8;;;:::i;:::-;2543:215::o;2623:91::-;2672:31;2692:10;2700:1;2692:10;:::i;:::-;2672:31;;;;;;;;;;;;;:::i;:::-;;;;2543:215;;;;:::i;:::-;:::o;1500:62::-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;435:8863:5:-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;7053:381::-;7119:6;:11;;7129:1;7119:11;:::i;:::-;;;:::i;:::-;;7115:54;;7234:22;:9;;;:::i;:::-;:22;:::i;:::-;:57;:22;7257:10;;7277:4;7234:57;;7269:13;7277:4;7269:13;:::i;:::-;7284:6;7234:57;7284:6;7234:57;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;7301:8;7234:57;;;;;7053:381;7219:72;7301:8;;:::i;:::-;7297:100;;7408:21;;;;;:::i;:::-;;;;;;:::i;:::-;;;;7053:381::o;7297:100::-;7358:31;7350:6;7358:31;:19;:9;;;:::i;:::-;:19;:::i;:::-;;7378:10;7358:31;7378:10;7358:31;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;7297:100;7326:64;;;6564:56;;;;;;7326:64;;;;;;:::i;:::-;;;;7358:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;7234:57::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;7115:54::-;7147:15;4444;;;7147;;;;;;;;:::i;:::-;;;;7053:381;;;;:::i;:::-;:::o;1796:162:0:-;1855:7;;:::i;:::-;:23;;1866:12;;:::i;:::-;1855:23;:::i;:::-;;;:::i;:::-;;1851:101;;1796:162::o;1851:101::-;1901:40;1928:12;;:::i;:::-;1901:40;;;;;;;;;;;;;:::i;:::-;;;;9171:125:5;9234:18;;9242:10;9250:1;9242:10;:::i;:::-;9234:18;:::i;:::-;;;:::i;:::-;;9230:62;;9171:125::o;9230:62::-;9269:16;;;;;;;;;;;;:::i;:::-;;;;1565:66:3;;;:::i;:::-;1623:1;;:::i;:::-;1565:66::o;435:8863:5:-;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;2586:117:3:-;2644:15;2654:5;2644:15;;:::i;:::-;2683:12;;:::i;:::-;2674:22;;;;;:::i;:::-;;;;;;:::i;:::-;;;;2586:117::o;:::-;;;:::i;:::-;:::o;1878:128::-;1943:8;;:::i;:::-;1939:61;;1878:128::o;1939:61::-;1974:15;;;;;;;;;;;;:::i;:::-;;;;435:8863:5;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1864:36:4:-;1899:1;;;:::i;:::-;1864:36;:::o;2575:307::-;2702:7;;;:::i;:::-;:18;;2713:7;;:::i;:::-;2702:18;:::i;:::-;;;:::i;:::-;;2698:86;;2858:17;2868:7;;:::i;:::-;2858:17;;:::i;:::-;2575:307::o;2698:86::-;2743:30;;;;;;;;;;;;:::i;:::-;;;;435:8863:5;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1818:40:4:-;1857:1;;;:::i;:::-;1818:40;:::o;2888:208::-;3068:21;3078:11;;:::i;:::-;3068:21;;:::i;:::-;2888:208::o;8829:247:5:-;8909:30;:18;:9;;;:::i;:::-;:18;:::i;:::-;;8928:2;8932:6;8909:30;;8932:6;8909:30;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;8949:8;8909:30;;;;;8829:247;8894:45;8949:8;;:::i;:::-;8945:127;;8829:247;:::o;8945:127::-;9023:34;9007:6;9023:34;:19;:9;;;:::i;:::-;:19;:::i;:::-;;9051:4;9023:34;9043:13;9051:4;9043:13;:::i;:::-;9023:34;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;8945:127;8974:91;;;6564:56;;;;;;8974:91;;;;;;:::i;:::-;;;;9023:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;8909:30::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;435:8863::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;2912:187:0:-;3004:6;;;:::i;:::-;3020:17;3029:8;3020:17;;:::i;:::-;3083:8;3052:40;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;2912:187::o;1315:72:3:-;;;:::i;:::-;1379:1;;:::i;:::-;1315:72::o;2339:115::-;2398:14;2408:4;2398:14;;:::i;:::-;2434:12;;:::i;:::-;2427:20;;;;;:::i;:::-;;;;;;:::i;:::-;;;;2339:115::o;:::-;;;:::i;:::-;:::o;656:96:2:-;709:7;;:::i;:::-;735:10;;728:17;:::o;2078:126:3:-;2140:9;2141:8;;:::i;:::-;2140:9;;:::i;:::-;2136:62;;2078:126::o;2136:62::-;2172:15;;;;;;;;;;;;:::i;:::-;;;"
            },
            "methodIdentifiers": {
              "addPoints(address,uint256)": "507cd30f",
              "calculateUSDCAmount(uint256)": "4cabb824",
              "claimUSDC(uint256)": "6e5f4a89",
              "depositUSDC(uint256)": "f688bcfb",
              "getPointBalance(address)": "5f42513c",
              "owner()": "8da5cb5b",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "renounceOwnership()": "715018a6",
              "setExchangeRate(uint256)": "db068e0e",
              "transferOwnership(address)": "f2fde38b",
              "transferPoints(address,uint256)": "326f823f",
              "unpause()": "3f4ba83a",
              "withdrawUSDC(uint256)": "db81f99b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdcToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ContractIsPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExchangeRateNotSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"}],\"name\":\"InsufficientPoints\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"}],\"name\":\"InsufficientUSDCBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ContractPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ContractUnpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"ExchangeRateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PointsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PointsTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pointsUsed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"USDCClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"USDCDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"USDCWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pointAmount\",\"type\":\"uint256\"}],\"name\":\"calculateUSDCAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pointAmount\",\"type\":\"uint256\"}],\"name\":\"claimUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getPointBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setExchangeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Oto Team\",\"details\":\"A contract for managing point-based USDC rewards for users who upload conversation data\",\"errors\":{\"ContractIsPaused()\":[{\"details\":\"Thrown when contract is paused and operation is not allowed\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExchangeRateNotSet()\":[{\"details\":\"Thrown when exchange rate is not set (zero)\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InsufficientPoints(uint256,uint256)\":[{\"details\":\"Thrown when user has insufficient points for the requested operation\",\"params\":{\"available\":\"The amount of points available\",\"required\":\"The amount of points required\"}}],\"InsufficientUSDCBalance(uint256,uint256)\":[{\"details\":\"Thrown when contract has insufficient USDC balance for the requested operation\",\"params\":{\"available\":\"The amount of USDC available\",\"required\":\"The amount of USDC required\"}}],\"InvalidAddress()\":[{\"details\":\"Thrown when an invalid address (zero address) is provided\"}],\"InvalidAmount()\":[{\"details\":\"Thrown when an invalid amount (zero or negative) is provided\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"Unauthorized()\":[{\"details\":\"Thrown when unauthorized access is attempted\"}]},\"events\":{\"ContractPaused()\":{\"details\":\"Emitted when contract is paused\"},\"ContractUnpaused()\":{\"details\":\"Emitted when contract is unpaused\"},\"ExchangeRateSet(uint256)\":{\"details\":\"Emitted when exchange rate is updated\",\"params\":{\"newRate\":\"The new exchange rate\"}},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"PointsAdded(address,uint256)\":{\"details\":\"Emitted when points are added to a user's balance\",\"params\":{\"amount\":\"The amount of points added\",\"user\":\"The user address\"}},\"PointsTransferred(address,uint256)\":{\"details\":\"Emitted when points are transferred to a user\",\"params\":{\"amount\":\"The amount of points transferred\",\"user\":\"The user address\"}},\"USDCClaimed(address,uint256,uint256)\":{\"details\":\"Emitted when USDC is claimed by a user\",\"params\":{\"pointsUsed\":\"The amount of points used\",\"usdcAmount\":\"The amount of USDC claimed\",\"user\":\"The user address\"}},\"USDCDeposited(uint256)\":{\"details\":\"Emitted when USDC is deposited to the contract\",\"params\":{\"amount\":\"The amount of USDC deposited\"}},\"USDCWithdrawn(uint256)\":{\"details\":\"Emitted when USDC is withdrawn from the contract\",\"params\":{\"amount\":\"The amount of USDC withdrawn\"}},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"addPoints(address,uint256)\":{\"details\":\"Adds points to a user's balance (only owner)\",\"params\":{\"amount\":\"The amount of points to add\",\"user\":\"The user address to add points to\"}},\"calculateUSDCAmount(uint256)\":{\"details\":\"Calculates the USDC amount for a given point amount\",\"params\":{\"pointAmount\":\"The amount of points to convert\"},\"returns\":{\"_0\":\"The equivalent USDC amount in wei\"}},\"claimUSDC(uint256)\":{\"details\":\"Allows users to claim USDC by spending their points\",\"params\":{\"pointAmount\":\"The amount of points to spend for USDC\"}},\"constructor\":{\"details\":\"Constructor to initialize the contract with USDC token address\",\"params\":{\"_usdcToken\":\"The address of the USDC token contract\"}},\"depositUSDC(uint256)\":{\"details\":\"Deposits USDC to the contract (only owner)\",\"params\":{\"amount\":\"The amount of USDC to deposit\"}},\"getPointBalance(address)\":{\"details\":\"Gets the point balance of a user\",\"params\":{\"user\":\"The user address to check\"},\"returns\":{\"_0\":\"The point balance of the user\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Pauses the contract (only owner)\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setExchangeRate(uint256)\":{\"details\":\"Sets the exchange rate from points to USDC (only owner)\",\"params\":{\"rate\":\"The new exchange rate (1 point = rate USDC wei)\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferPoints(address,uint256)\":{\"details\":\"Transfers points to a user (only owner)\",\"params\":{\"amount\":\"The amount of points to transfer\",\"user\":\"The user address to transfer points to\"}},\"unpause()\":{\"details\":\"Unpauses the contract (only owner)\"},\"withdrawUSDC(uint256)\":{\"details\":\"Withdraws USDC from the contract (only owner)\",\"params\":{\"amount\":\"The amount of USDC to withdraw\"}}},\"stateVariables\":{\"exchangeRate\":{\"details\":\"Exchange rate from points to USDC (1 point = exchangeRate USDC wei)\"},\"pointBalances\":{\"details\":\"Mapping of user addresses to their point balances\"},\"usdcToken\":{\"details\":\"USDC token contract interface\"}},\"title\":\"USDCRewardContract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"pause()\":{\"notice\":\"When paused, user functions like claimUSDC are disabled, but admin functions remain available\"},\"unpause()\":{\"notice\":\"Restores normal contract functionality\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/USDCRewardContract.sol\":\"USDCRewardContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/USDCRewardContract.sol\":{\"keccak256\":\"0x9fb2a7a051d1b4551e9094abb5acfda8745e5548ab5d5f6df13ca41a9cb5a061\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5be14982543c2480d6376a0cea01f0db8171c996c46ab7a274262aad705d185\",\"dweb:/ipfs/QmRCH9FT9rZh6Mq683AD5a4NAoeu4DB7GTcMMgSNLq83Ks\"]}},\"version\":1}"
        }
      }
    }
  }
}