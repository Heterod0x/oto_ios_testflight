{
  "id": "4ac51dad9ffcf9dbdeaafda486aaa856",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
      },
      "contracts/mock/MockERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n/**\n * @title MockERC20\n * @dev Mock ERC20 token for testing purposes\n */\ncontract MockERC20 is ERC20 {\n  uint8 private _decimals;\n\n  constructor(\n    string memory name,\n    string memory symbol,\n    uint8 decimals_\n  ) ERC20(name, symbol) {\n    _decimals = decimals_;\n    // Mint initial supply to deployer for testing\n    _mint(msg.sender, 1000000 * 10 ** decimals_);\n  }\n\n  function decimals() public view virtual override returns (uint8) {\n    return _decimals;\n  }\n\n  function mint(address to, uint256 amount) public {\n    _mint(to, amount);\n  }\n\n  function burn(address from, uint256 amount) public {\n    _burn(from, amount);\n  }\n}\n"
      },
      "contracts/mock/Storage.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.24;\n\n/**\n * @title サンプル用コントラクト　Storage\n * @dev Store & retrieve value in a variable\n */\ncontract Storage {\n\n    uint256 number;\n\n    /**\n     * @dev Store value in variable\n     * @param num value to store\n     */\n    function store(uint256 num) public {\n        number = num;\n    }\n\n    /**\n     * @dev Return value \n     * @return value of 'number'\n     */\n    function retrieve() public view returns (uint256){\n        return number;\n    }\n}"
      },
      "contracts/USDCRewardContract.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title USDCRewardContract\n * @dev A contract for managing point-based USDC rewards for users who upload conversation data\n * @author Oto Team\n */\ncontract USDCRewardContract is Ownable, Pausable, ReentrancyGuard {\n  // ==================== State Variables ====================\n\n  /// @dev Mapping of user addresses to their point balances\n  mapping(address => uint256) private pointBalances;\n\n  /// @dev Mapping of user addresses to their total claimed points\n  mapping(address => uint256) private totalClaimedPoints;\n\n  /// @dev Exchange rate from points to USDC (1 point = exchangeRate USDC wei)\n  uint256 private exchangeRate;\n\n  /// @dev USDC token contract interface\n  IERC20 private usdcToken;\n\n  // ==================== Custom Errors ====================\n\n  /// @dev Thrown when user has insufficient points for the requested operation\n  /// @param required The amount of points required\n  /// @param available The amount of points available\n  error InsufficientPoints(uint256 required, uint256 available);\n\n  /// @dev Thrown when contract has insufficient USDC balance for the requested operation\n  /// @param required The amount of USDC required\n  /// @param available The amount of USDC available\n  error InsufficientUSDCBalance(uint256 required, uint256 available);\n\n  /// @dev Thrown when an invalid address (zero address) is provided\n  error InvalidAddress();\n\n  /// @dev Thrown when an invalid amount (zero or negative) is provided\n  error InvalidAmount();\n\n  /// @dev Thrown when exchange rate is not set (zero)\n  error ExchangeRateNotSet();\n\n  /// @dev Thrown when unauthorized access is attempted\n  error Unauthorized();\n\n  /// @dev Thrown when contract is paused and operation is not allowed\n  error ContractIsPaused();\n\n  // ==================== Events ====================\n\n  /// @dev Emitted when points are added to a user's balance\n  /// @param user The user address\n  /// @param amount The amount of points added\n  event PointsAdded(address indexed user, uint256 amount);\n\n  /// @dev Emitted when points are removed from a user's balance\n  /// @param user The user address\n  /// @param amount The amount of points removed\n  event PointsRemoved(address indexed user, uint256 amount);\n\n  /// @dev Emitted when exchange rate is updated\n  /// @param newRate The new exchange rate\n  event ExchangeRateSet(uint256 newRate);\n\n  /// @dev Emitted when USDC is claimed by a user\n  /// @param user The user address\n  /// @param pointsUsed The amount of points used\n  /// @param usdcAmount The amount of USDC claimed\n  event USDCClaimed(\n    address indexed user,\n    uint256 pointsUsed,\n    uint256 usdcAmount\n  );\n\n  /// @dev Emitted when USDC is deposited to the contract\n  /// @param amount The amount of USDC deposited\n  event USDCDeposited(uint256 amount);\n\n  /// @dev Emitted when USDC is withdrawn from the contract\n  /// @param amount The amount of USDC withdrawn\n  event USDCWithdrawn(uint256 amount);\n\n  /// @dev Emitted when contract is paused\n  event ContractPaused();\n\n  /// @dev Emitted when contract is unpaused\n  event ContractUnpaused();\n\n  // ==================== Constructor ====================\n\n  /// @dev Constructor to initialize the contract with USDC token address\n  /// @param _usdcToken The address of the USDC token contract\n  constructor(address _usdcToken) Ownable(msg.sender) {\n    if (_usdcToken == address(0)) {\n      revert InvalidAddress();\n    }\n\n    usdcToken = IERC20(_usdcToken);\n    exchangeRate = 0; // Initially not set, must be configured by owner\n  }\n\n  // ==================== Point Management Functions ====================\n\n  /// @dev Adds points to a user's balance (only owner)\n  /// @param user The user address to add points to\n  /// @param amount The amount of points to add\n  function addPoints(address user, uint256 amount) external onlyOwner {\n    _validateAddress(user);\n\n    if (amount == 0) {\n      revert InvalidAmount();\n    }\n\n    pointBalances[user] += amount;\n\n    emit PointsAdded(user, amount);\n  }\n\n  /// @dev Subtracts points from a user's balance (only owner)\n  /// @param user The user address to subtract points from\n  /// @param amount The amount of points to subtract\n  function subtractPoints(address user, uint256 amount) external onlyOwner {\n    _validateAddress(user);\n\n    if (amount == 0) {\n      revert InvalidAmount();\n    }\n\n    uint256 currentBalance = pointBalances[user];\n    if (currentBalance < amount) {\n      revert InsufficientPoints(amount, currentBalance);\n    }\n\n    pointBalances[user] -= amount;\n\n    emit PointsRemoved(user, amount);\n  }\n\n  /// @dev Gets the point balance of a user\n  /// @param user The user address to check\n  /// @return The point balance of the user\n  function getPointBalance(address user) external view returns (uint256) {\n    return pointBalances[user];\n  }\n\n  /// @dev Gets the total claimed points of a user\n  /// @param user The user address to check\n  /// @return The total claimed points of the user\n  function getTotalClaimedPoints(\n    address user\n  ) external view returns (uint256) {\n    return totalClaimedPoints[user];\n  }\n\n  // ==================== Exchange Rate Management Functions ====================\n\n  /// @dev Sets the exchange rate from points to USDC (only owner)\n  /// @param rate The new exchange rate (1 point = rate USDC wei)\n  function setExchangeRate(uint256 rate) external onlyOwner {\n    exchangeRate = rate;\n\n    emit ExchangeRateSet(rate);\n  }\n\n  /// @dev Calculates the USDC amount for a given point amount\n  /// @param pointAmount The amount of points to convert\n  /// @return The equivalent USDC amount in wei\n  function calculateUSDCAmount(\n    uint256 pointAmount\n  ) external view returns (uint256) {\n    if (exchangeRate == 0) {\n      return 0;\n    }\n\n    return pointAmount * exchangeRate;\n  }\n\n  // ==================== USDC Claim Functions ====================\n\n  /// @dev Allows users to claim USDC by spending their points\n  /// @param pointAmount The amount of points to spend for USDC\n  function claimUSDC(uint256 pointAmount) external whenNotPaused nonReentrant {\n    _validateAddress(msg.sender);\n\n    if (pointAmount == 0) {\n      revert InvalidAmount();\n    }\n\n    // Check if exchange rate is set\n    if (exchangeRate == 0) {\n      revert ExchangeRateNotSet();\n    }\n\n    // Check user's point balance\n    uint256 userBalance = pointBalances[msg.sender];\n    if (userBalance < pointAmount) {\n      revert InsufficientPoints(pointAmount, userBalance);\n    }\n\n    // Calculate USDC amount\n    uint256 usdcAmount = pointAmount * exchangeRate;\n\n    // Check contract's USDC balance\n    uint256 contractUSDCBalance = usdcToken.balanceOf(address(this));\n    if (contractUSDCBalance < usdcAmount) {\n      revert InsufficientUSDCBalance(usdcAmount, contractUSDCBalance);\n    }\n\n    // Reduce user's point balance\n    pointBalances[msg.sender] -= pointAmount;\n\n    // Add to total claimed points\n    totalClaimedPoints[msg.sender] += pointAmount;\n\n    // Transfer USDC to user\n    _transferUSDC(msg.sender, usdcAmount);\n\n    // Emit event\n    emit USDCClaimed(msg.sender, pointAmount, usdcAmount);\n  }\n\n  // ==================== USDC Supply Management Functions ====================\n\n  /// @dev Deposits USDC to the contract (only owner)\n  /// @param amount The amount of USDC to deposit\n  function depositUSDC(uint256 amount) external onlyOwner {\n    if (amount == 0) {\n      revert InvalidAmount();\n    }\n\n    // Transfer USDC from owner to contract\n    bool success = usdcToken.transferFrom(msg.sender, address(this), amount);\n    if (!success) {\n      revert InsufficientUSDCBalance(amount, usdcToken.balanceOf(msg.sender));\n    }\n\n    emit USDCDeposited(amount);\n  }\n\n  /// @dev Withdraws USDC from the contract (only owner)\n  /// @param amount The amount of USDC to withdraw\n  function withdrawUSDC(uint256 amount) external onlyOwner {\n    if (amount == 0) {\n      revert InvalidAmount();\n    }\n\n    // Check contract's USDC balance\n    uint256 contractBalance = usdcToken.balanceOf(address(this));\n    if (contractBalance < amount) {\n      revert InsufficientUSDCBalance(amount, contractBalance);\n    }\n\n    // Transfer USDC from contract to owner\n    bool success = usdcToken.transfer(msg.sender, amount);\n    if (!success) {\n      revert InsufficientUSDCBalance(amount, contractBalance);\n    }\n\n    emit USDCWithdrawn(amount);\n  }\n\n  // ==================== Pause/Unpause Functions ====================\n\n  /// @dev Pauses the contract (only owner)\n  /// @notice When paused, user functions like claimUSDC are disabled, but admin functions remain available\n  function pause() external onlyOwner {\n    _pause();\n    emit ContractPaused();\n  }\n\n  /// @dev Unpauses the contract (only owner)\n  /// @notice Restores normal contract functionality\n  function unpause() external onlyOwner {\n    _unpause();\n    emit ContractUnpaused();\n  }\n\n  // ==================== Internal Functions ====================\n\n  /// @dev Internal function to transfer USDC to a user\n  /// @param to The address to transfer USDC to\n  /// @param amount The amount of USDC to transfer\n  function _transferUSDC(address to, uint256 amount) private {\n    bool success = usdcToken.transfer(to, amount);\n    if (!success) {\n      revert InsufficientUSDCBalance(\n        amount,\n        usdcToken.balanceOf(address(this))\n      );\n    }\n  }\n\n  /// @dev Validates that an address is not zero\n  /// @param addr The address to validate\n  function _validateAddress(address addr) private pure {\n    if (addr == address(0)) {\n      revert InvalidAddress();\n    }\n  }\n}"
      }
    },
    "settings": {
      "viaIR": true,
      "evmVersion": "paris",
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 934,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 933,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 933,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                933
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 915,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 915,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              284
            ],
            "IERC20Errors": [
              189
            ],
            "IERC721Errors": [
              237
            ]
          },
          "id": 285,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 150,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:1",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 189,
              "linearizedBaseContracts": [
                189
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 151,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:1",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 159,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 153,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "654:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 155,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "670:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 157,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "687:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:1"
                  },
                  "src": "623:80:1"
                },
                {
                  "documentation": {
                    "id": 160,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 164,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 164,
                        "src": "891:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:1"
                  },
                  "src": "866:41:1"
                },
                {
                  "documentation": {
                    "id": 165,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 169,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 167,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 169,
                        "src": "1104:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:1"
                  },
                  "src": "1077:45:1"
                },
                {
                  "documentation": {
                    "id": 170,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:1",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 178,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 172,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1511:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 174,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1528:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 176,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1547:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:1"
                  },
                  "src": "1478:85:1"
                },
                {
                  "documentation": {
                    "id": 179,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 183,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 182,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 181,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 183,
                        "src": "1775:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 180,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:1"
                  },
                  "src": "1748:45:1"
                },
                {
                  "documentation": {
                    "id": 184,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:1",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 188,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 187,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 186,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "2025:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 185,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:1"
                  },
                  "src": "1999:43:1"
                }
              ],
              "scope": 285,
              "src": "280:1764:1",
              "usedErrors": [
                159,
                164,
                169,
                178,
                183,
                188
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 190,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:1",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 237,
              "linearizedBaseContracts": [
                237
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 191,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:1",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 195,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 193,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 195,
                        "src": "2469:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:1"
                  },
                  "src": "2444:40:1"
                },
                {
                  "documentation": {
                    "id": 196,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:1",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 200,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 198,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 200,
                        "src": "2656:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:1"
                  },
                  "src": "2627:46:1"
                },
                {
                  "documentation": {
                    "id": 201,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:1",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 209,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 203,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "3000:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 202,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 205,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "3016:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "3033:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:1"
                  },
                  "src": "2973:75:1"
                },
                {
                  "documentation": {
                    "id": 210,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 214,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 213,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 212,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 214,
                        "src": "3237:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 211,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:1"
                  },
                  "src": "3211:42:1"
                },
                {
                  "documentation": {
                    "id": 215,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 219,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "3451:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:1"
                  },
                  "src": "3423:46:1"
                },
                {
                  "documentation": {
                    "id": 220,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:1",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 226,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "3760:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "3778:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:1"
                  },
                  "src": "3727:68:1"
                },
                {
                  "documentation": {
                    "id": 227,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 231,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 229,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "4008:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 228,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:1"
                  },
                  "src": "3980:46:1"
                },
                {
                  "documentation": {
                    "id": 232,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:1",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 236,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 234,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 236,
                        "src": "4262:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 233,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:1"
                  },
                  "src": "4234:46:1"
                }
              ],
              "scope": 285,
              "src": "2190:2092:1",
              "usedErrors": [
                195,
                200,
                209,
                214,
                219,
                226,
                231,
                236
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 238,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:1",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 284,
              "linearizedBaseContracts": [
                284
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 239,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:1",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 249,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 241,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4860:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 240,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4876:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4893:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 247,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4909:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:1"
                  },
                  "src": "4827:99:1"
                },
                {
                  "documentation": {
                    "id": 250,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 254,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "5116:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:1"
                  },
                  "src": "5089:43:1"
                },
                {
                  "documentation": {
                    "id": 255,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 259,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 259,
                        "src": "5331:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 256,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:1"
                  },
                  "src": "5302:47:1"
                },
                {
                  "documentation": {
                    "id": 260,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:1",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 266,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 266,
                        "src": "5651:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 266,
                        "src": "5669:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:1"
                  },
                  "src": "5616:68:1"
                },
                {
                  "documentation": {
                    "id": 267,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 271,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 269,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 271,
                        "src": "5898:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 268,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:1"
                  },
                  "src": "5869:47:1"
                },
                {
                  "documentation": {
                    "id": 272,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:1",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 276,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 274,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "6153:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:1"
                  },
                  "src": "6124:47:1"
                },
                {
                  "documentation": {
                    "id": 277,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:1",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 283,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 282,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 279,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 283,
                        "src": "6494:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 278,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 281,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 283,
                        "src": "6513:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 280,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:1"
                  },
                  "src": "6462:73:1"
                }
              ],
              "scope": 285,
              "src": "4430:2107:1",
              "usedErrors": [
                249,
                254,
                259,
                266,
                271,
                276,
                283
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "ERC20": [
              799
            ],
            "IERC20": [
              877
            ],
            "IERC20Errors": [
              189
            ],
            "IERC20Metadata": [
              903
            ]
          },
          "id": 800,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 286,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 288,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 878,
              "src": "131:36:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 287,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 877,
                    "src": "139:6:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 290,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 904,
              "src": "168:63:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 289,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 903,
                    "src": "176:14:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 292,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 934,
              "src": "232:48:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 291,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 933,
                    "src": "240:7:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 294,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 285,
              "src": "281:65:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 293,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 189,
                    "src": "289:12:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 296,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 933,
                    "src": "1133:7:2"
                  },
                  "id": 297,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:2"
                },
                {
                  "baseName": {
                    "id": 298,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 877,
                    "src": "1142:6:2"
                  },
                  "id": 299,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:2"
                },
                {
                  "baseName": {
                    "id": 300,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 903,
                    "src": "1150:14:2"
                  },
                  "id": 301,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:2"
                },
                {
                  "baseName": {
                    "id": 302,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 189,
                    "src": "1166:12:2"
                  },
                  "id": 303,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:2"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 295,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:2",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 799,
              "linearizedBaseContracts": [
                799,
                189,
                903,
                877,
                933
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1185:53:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 306,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:2",
                    "keyType": {
                      "id": 304,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 305,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1245:83:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 312,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:2",
                    "keyType": {
                      "id": 308,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 311,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:2",
                      "keyType": {
                        "id": 309,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 310,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1335:28:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 317,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1370:20:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1396:22:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 335,
                    "nodeType": "Block",
                    "src": "1638:57:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 327,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "1648:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 328,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 322,
                            "src": "1656:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1648:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 330,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:13:2"
                      },
                      {
                        "expression": {
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 331,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 319,
                            "src": "1671:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 332,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 324,
                            "src": "1681:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1671:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 334,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:17:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 320,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:152:2",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 336,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 322,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1608:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "1594:19:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 324,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1629:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "1615:21:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:44:2"
                  },
                  "returnParameters": {
                    "id": 326,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:2"
                  },
                  "scope": 799,
                  "src": "1582:113:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    890
                  ],
                  "body": {
                    "id": 344,
                    "nodeType": "Block",
                    "src": "1820:29:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 342,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 317,
                          "src": "1837:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 341,
                        "id": 343,
                        "nodeType": "Return",
                        "src": "1830:12:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 337,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:54:2",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 345,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1769:4:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 338,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:2"
                  },
                  "returnParameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 340,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1805:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:15:2"
                  },
                  "scope": 799,
                  "src": "1760:89:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    896
                  ],
                  "body": {
                    "id": 353,
                    "nodeType": "Block",
                    "src": "2024:31:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 351,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 319,
                          "src": "2041:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 350,
                        "id": 352,
                        "nodeType": "Return",
                        "src": "2034:14:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 346,
                    "nodeType": "StructuredDocumentation",
                    "src": "1855:102:2",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 354,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1971:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 347,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:2"
                  },
                  "returnParameters": {
                    "id": 350,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 349,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 354,
                        "src": "2009:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 348,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:15:2"
                  },
                  "scope": 799,
                  "src": "1962:93:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    902
                  ],
                  "body": {
                    "id": 362,
                    "nodeType": "Block",
                    "src": "2744:26:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 359,
                        "id": 361,
                        "nodeType": "Return",
                        "src": "2754:9:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 355,
                    "nodeType": "StructuredDocumentation",
                    "src": "2061:622:2",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 363,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2697:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 356,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:2"
                  },
                  "returnParameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 363,
                        "src": "2737:5:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:7:2"
                  },
                  "scope": 799,
                  "src": "2688:82:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    826
                  ],
                  "body": {
                    "id": 371,
                    "nodeType": "Block",
                    "src": "2864:36:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 369,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 315,
                          "src": "2881:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 368,
                        "id": 370,
                        "nodeType": "Return",
                        "src": "2874:19:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 364,
                    "nodeType": "StructuredDocumentation",
                    "src": "2776:22:2",
                    "text": "@inheritdoc IERC20"
                  },
                  "functionSelector": "18160ddd",
                  "id": 372,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2812:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 365,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2823:2:2"
                  },
                  "returnParameters": {
                    "id": 368,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 367,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 372,
                        "src": "2855:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 366,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2855:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2854:9:2"
                  },
                  "scope": 799,
                  "src": "2803:97:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    834
                  ],
                  "body": {
                    "id": 384,
                    "nodeType": "Block",
                    "src": "3007:42:2",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 380,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 307,
                            "src": "3024:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 382,
                          "indexExpression": {
                            "id": 381,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "3034:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3024:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 379,
                        "id": 383,
                        "nodeType": "Return",
                        "src": "3017:25:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 373,
                    "nodeType": "StructuredDocumentation",
                    "src": "2906:22:2",
                    "text": "@inheritdoc IERC20"
                  },
                  "functionSelector": "70a08231",
                  "id": 385,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2942:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2960:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 385,
                        "src": "2952:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2952:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2951:17:2"
                  },
                  "returnParameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 378,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 385,
                        "src": "2998:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 377,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2998:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2997:9:2"
                  },
                  "scope": 799,
                  "src": "2933:116:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    844
                  ],
                  "body": {
                    "id": 408,
                    "nodeType": "Block",
                    "src": "3319:103:2",
                    "statements": [
                      {
                        "assignments": [
                          396
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 396,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3337:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 408,
                            "src": "3329:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 395,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3329:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 399,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 397,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "3345:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3345:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3329:28:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 401,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "3377:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 402,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 388,
                              "src": "3384:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 403,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "3388:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 400,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "3367:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3367:27:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 405,
                        "nodeType": "ExpressionStatement",
                        "src": "3367:27:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3411:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 394,
                        "id": 407,
                        "nodeType": "Return",
                        "src": "3404:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 386,
                    "nodeType": "StructuredDocumentation",
                    "src": "3055:184:2",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 409,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3253:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 391,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 388,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3270:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "3262:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3262:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 390,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3282:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "3274:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3274:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3261:27:2"
                  },
                  "returnParameters": {
                    "id": 394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 393,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "3313:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3313:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3312:6:2"
                  },
                  "scope": 799,
                  "src": "3244:178:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    854
                  ],
                  "body": {
                    "id": 425,
                    "nodeType": "Block",
                    "src": "3544:51:2",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 419,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 313,
                              "src": "3561:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 421,
                            "indexExpression": {
                              "id": 420,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 412,
                              "src": "3573:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3561:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 423,
                          "indexExpression": {
                            "id": 422,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "3580:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3561:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 418,
                        "id": 424,
                        "nodeType": "Return",
                        "src": "3554:34:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 410,
                    "nodeType": "StructuredDocumentation",
                    "src": "3428:22:2",
                    "text": "@inheritdoc IERC20"
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 426,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3464:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 415,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3482:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "3474:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3474:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 414,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3497:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "3489:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 413,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3489:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3473:32:2"
                  },
                  "returnParameters": {
                    "id": 418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "3535:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3535:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3534:9:2"
                  },
                  "scope": 799,
                  "src": "3455:140:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    864
                  ],
                  "body": {
                    "id": 449,
                    "nodeType": "Block",
                    "src": "3981:107:2",
                    "statements": [
                      {
                        "assignments": [
                          437
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 437,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3999:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 449,
                            "src": "3991:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 436,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3991:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 440,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 438,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "4007:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4007:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3991:28:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 442,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 437,
                              "src": "4038:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 443,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 429,
                              "src": "4045:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 444,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 431,
                              "src": "4054:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 441,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              690,
                              750
                            ],
                            "referencedDeclaration": 690,
                            "src": "4029:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4029:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 446,
                        "nodeType": "ExpressionStatement",
                        "src": "4029:31:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4077:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 435,
                        "id": 448,
                        "nodeType": "Return",
                        "src": "4070:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 427,
                    "nodeType": "StructuredDocumentation",
                    "src": "3601:296:2",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 450,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3911:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 429,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3927:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "3919:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3919:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 431,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3944:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "3936:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3936:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3918:32:2"
                  },
                  "returnParameters": {
                    "id": 435,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "3975:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3975:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3974:6:2"
                  },
                  "scope": 799,
                  "src": "3902:186:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    876
                  ],
                  "body": {
                    "id": 481,
                    "nodeType": "Block",
                    "src": "4773:151:2",
                    "statements": [
                      {
                        "assignments": [
                          463
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 463,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4791:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 481,
                            "src": "4783:15:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 462,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4783:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 466,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 464,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "4801:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4801:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4783:30:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 468,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "4839:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 469,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "4845:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 470,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "4854:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 467,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 798,
                            "src": "4823:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4823:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 472,
                        "nodeType": "ExpressionStatement",
                        "src": "4823:37:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 474,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "4880:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 475,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 455,
                              "src": "4886:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 476,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "4890:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 473,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "4870:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4870:26:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 478,
                        "nodeType": "ExpressionStatement",
                        "src": "4870:26:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4913:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 461,
                        "id": 480,
                        "nodeType": "Return",
                        "src": "4906:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 451,
                    "nodeType": "StructuredDocumentation",
                    "src": "4094:581:2",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 482,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4689:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 458,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4710:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4702:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4702:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4724:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4716:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4716:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 457,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4736:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4728:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4728:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4701:41:2"
                  },
                  "returnParameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4767:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4767:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4766:6:2"
                  },
                  "scope": 799,
                  "src": "4680:244:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 528,
                    "nodeType": "Block",
                    "src": "5366:231:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 492,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 485,
                            "src": "5380:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5396:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5388:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 493,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5388:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5388:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5380:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 506,
                        "nodeType": "IfStatement",
                        "src": "5376:86:2",
                        "trueBody": {
                          "id": 505,
                          "nodeType": "Block",
                          "src": "5400:62:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 501,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5448:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 500,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5440:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 499,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5440:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 502,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5440:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 498,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 164,
                                  "src": "5421:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5421:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 504,
                              "nodeType": "RevertStatement",
                              "src": "5414:37:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 507,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 487,
                            "src": "5475:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5489:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5481:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 508,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5481:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5481:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5475:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 521,
                        "nodeType": "IfStatement",
                        "src": "5471:86:2",
                        "trueBody": {
                          "id": 520,
                          "nodeType": "Block",
                          "src": "5493:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 516,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5543:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 515,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5535:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 514,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5535:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 517,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5535:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 513,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 169,
                                  "src": "5514:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5514:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 519,
                              "nodeType": "RevertStatement",
                              "src": "5507:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 523,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 485,
                              "src": "5574:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 524,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 487,
                              "src": "5580:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 525,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "5584:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 522,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "5566:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5566:24:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 527,
                        "nodeType": "ExpressionStatement",
                        "src": "5566:24:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 483,
                    "nodeType": "StructuredDocumentation",
                    "src": "4930:362:2",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 529,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5306:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 490,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5324:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5316:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5316:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 487,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5338:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5330:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 486,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5330:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 489,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5350:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5342:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 488,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5342:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5315:41:2"
                  },
                  "returnParameters": {
                    "id": 491,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5366:0:2"
                  },
                  "scope": 799,
                  "src": "5297:300:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 605,
                    "nodeType": "Block",
                    "src": "5987:1032:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 539,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 532,
                            "src": "6001:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6017:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6009:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 540,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6009:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6009:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6001:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 576,
                          "nodeType": "Block",
                          "src": "6175:362:2",
                          "statements": [
                            {
                              "assignments": [
                                551
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 551,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6197:11:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 576,
                                  "src": "6189:19:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 550,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6189:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 555,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 552,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 307,
                                  "src": "6211:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 554,
                                "indexExpression": {
                                  "id": 553,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 532,
                                  "src": "6221:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6211:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6189:37:2"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 556,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 551,
                                  "src": "6244:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 557,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "6258:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6244:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 566,
                              "nodeType": "IfStatement",
                              "src": "6240:115:2",
                              "trueBody": {
                                "id": 565,
                                "nodeType": "Block",
                                "src": "6265:90:2",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 560,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 532,
                                          "src": "6315:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 561,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 551,
                                          "src": "6321:11:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 562,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 536,
                                          "src": "6334:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 559,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 159,
                                        "src": "6290:24:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 563,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6290:50:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 564,
                                    "nodeType": "RevertStatement",
                                    "src": "6283:57:2"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 575,
                              "nodeType": "UncheckedBlock",
                              "src": "6368:159:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 573,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 567,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 307,
                                        "src": "6475:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 569,
                                      "indexExpression": {
                                        "id": 568,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 532,
                                        "src": "6485:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6475:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 572,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 570,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 551,
                                        "src": "6493:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 571,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 536,
                                        "src": "6507:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6493:19:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6475:37:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 574,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6475:37:2"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 577,
                        "nodeType": "IfStatement",
                        "src": "5997:540:2",
                        "trueBody": {
                          "id": 549,
                          "nodeType": "Block",
                          "src": "6021:148:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 547,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 545,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 315,
                                  "src": "6137:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 546,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "6153:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6137:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 548,
                              "nodeType": "ExpressionStatement",
                              "src": "6137:21:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 578,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "6551:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6565:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6557:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 579,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6557:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6557:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6551:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 597,
                          "nodeType": "Block",
                          "src": "6766:206:2",
                          "statements": [
                            {
                              "id": 596,
                              "nodeType": "UncheckedBlock",
                              "src": "6780:182:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 594,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 590,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 307,
                                        "src": "6925:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 592,
                                      "indexExpression": {
                                        "id": 591,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 534,
                                        "src": "6935:2:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6925:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 593,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 536,
                                      "src": "6942:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6925:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 595,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6925:22:2"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 598,
                        "nodeType": "IfStatement",
                        "src": "6547:425:2",
                        "trueBody": {
                          "id": 589,
                          "nodeType": "Block",
                          "src": "6569:191:2",
                          "statements": [
                            {
                              "id": 588,
                              "nodeType": "UncheckedBlock",
                              "src": "6583:167:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 586,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 584,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 315,
                                      "src": "6714:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 585,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 536,
                                      "src": "6730:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6714:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 587,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6714:21:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 600,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 532,
                              "src": "6996:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 601,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "7002:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 602,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 536,
                              "src": "7006:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 599,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 811,
                            "src": "6987:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6987:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 604,
                        "nodeType": "EmitStatement",
                        "src": "6982:30:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 530,
                    "nodeType": "StructuredDocumentation",
                    "src": "5603:304:2",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 606,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5921:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 532,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5937:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "5929:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 531,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5929:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 534,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5951:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "5943:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 533,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5943:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 536,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5963:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "5955:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5955:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5928:41:2"
                  },
                  "returnParameters": {
                    "id": 538,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5987:0:2"
                  },
                  "scope": 799,
                  "src": "5912:1107:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 638,
                    "nodeType": "Block",
                    "src": "7418:152:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 614,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "7432:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7451:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7443:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 615,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7443:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7443:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7432:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 628,
                        "nodeType": "IfStatement",
                        "src": "7428:91:2",
                        "trueBody": {
                          "id": 627,
                          "nodeType": "Block",
                          "src": "7455:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 623,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7505:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 622,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7497:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 621,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7497:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 624,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7497:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 620,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 169,
                                  "src": "7476:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7476:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 626,
                              "nodeType": "RevertStatement",
                              "src": "7469:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 632,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7544:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7536:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 630,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7536:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7536:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 634,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "7548:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 635,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 611,
                              "src": "7557:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 629,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "7528:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7528:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 637,
                        "nodeType": "ExpressionStatement",
                        "src": "7528:35:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 607,
                    "nodeType": "StructuredDocumentation",
                    "src": "7025:332:2",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 639,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7371:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 612,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7385:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 639,
                        "src": "7377:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7377:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 611,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7402:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 639,
                        "src": "7394:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 610,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7394:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7376:32:2"
                  },
                  "returnParameters": {
                    "id": 613,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7418:0:2"
                  },
                  "scope": 799,
                  "src": "7362:208:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 671,
                    "nodeType": "Block",
                    "src": "7944:150:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 647,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 642,
                            "src": "7958:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 650,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7977:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7969:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 648,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7969:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7969:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7958:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 661,
                        "nodeType": "IfStatement",
                        "src": "7954:89:2",
                        "trueBody": {
                          "id": 660,
                          "nodeType": "Block",
                          "src": "7981:62:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 656,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8029:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 655,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8021:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 654,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8021:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 657,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8021:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 653,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 164,
                                  "src": "8002:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8002:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 659,
                              "nodeType": "RevertStatement",
                              "src": "7995:37:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 663,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 642,
                              "src": "8060:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 666,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8077:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8069:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 664,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8069:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8069:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 668,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 644,
                              "src": "8081:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 662,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "8052:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8052:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 670,
                        "nodeType": "ExpressionStatement",
                        "src": "8052:35:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 640,
                    "nodeType": "StructuredDocumentation",
                    "src": "7576:307:2",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 672,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7897:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 645,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 642,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7911:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "7903:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 641,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7903:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 644,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7928:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "7920:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 643,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7920:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7902:32:2"
                  },
                  "returnParameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7944:0:2"
                  },
                  "scope": 799,
                  "src": "7888:206:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 689,
                    "nodeType": "Block",
                    "src": "8704:54:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 683,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 675,
                              "src": "8723:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 684,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 677,
                              "src": "8730:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 685,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "8739:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8746:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 682,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              690,
                              750
                            ],
                            "referencedDeclaration": 750,
                            "src": "8714:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8714:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 688,
                        "nodeType": "ExpressionStatement",
                        "src": "8714:37:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 673,
                    "nodeType": "StructuredDocumentation",
                    "src": "8100:525:2",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 690,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8639:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 680,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 675,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8656:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "8648:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 674,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8648:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 677,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8671:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "8663:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 676,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8663:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 679,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8688:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "8680:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 678,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8680:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8647:47:2"
                  },
                  "returnParameters": {
                    "id": 681,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8704:0:2"
                  },
                  "scope": 799,
                  "src": "8630:128:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 749,
                    "nodeType": "Block",
                    "src": "9703:334:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 702,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "9717:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9734:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9726:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 703,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9726:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9726:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9717:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 716,
                        "nodeType": "IfStatement",
                        "src": "9713:89:2",
                        "trueBody": {
                          "id": 715,
                          "nodeType": "Block",
                          "src": "9738:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 711,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9788:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 710,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9780:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 709,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9780:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 712,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9780:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 708,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 183,
                                  "src": "9759:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9759:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 714,
                              "nodeType": "RevertStatement",
                              "src": "9752:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 717,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 695,
                            "src": "9815:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9834:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9826:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 718,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9826:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9826:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9815:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 731,
                        "nodeType": "IfStatement",
                        "src": "9811:90:2",
                        "trueBody": {
                          "id": 730,
                          "nodeType": "Block",
                          "src": "9838:63:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 726,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9887:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 725,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9879:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 724,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9879:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 727,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9879:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 723,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 188,
                                  "src": "9859:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9859:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 729,
                              "nodeType": "RevertStatement",
                              "src": "9852:38:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 732,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 313,
                                "src": "9910:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 735,
                              "indexExpression": {
                                "id": 733,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 693,
                                "src": "9922:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9910:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 736,
                            "indexExpression": {
                              "id": 734,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 695,
                              "src": "9929:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9910:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 737,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 697,
                            "src": "9940:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9910:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 739,
                        "nodeType": "ExpressionStatement",
                        "src": "9910:35:2"
                      },
                      {
                        "condition": {
                          "id": 740,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 699,
                          "src": "9959:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 748,
                        "nodeType": "IfStatement",
                        "src": "9955:76:2",
                        "trueBody": {
                          "id": 747,
                          "nodeType": "Block",
                          "src": "9970:61:2",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 742,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 693,
                                    "src": "9998:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 743,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 695,
                                    "src": "10005:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 744,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 697,
                                    "src": "10014:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 741,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 820,
                                  "src": "9989:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9989:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 746,
                              "nodeType": "EmitStatement",
                              "src": "9984:36:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 691,
                    "nodeType": "StructuredDocumentation",
                    "src": "8764:836:2",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 750,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9614:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 700,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 693,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9631:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9623:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 692,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9623:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 695,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9646:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9638:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 694,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9638:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 697,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9663:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9655:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 696,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9655:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9675:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9670:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9670:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9622:63:2"
                  },
                  "returnParameters": {
                    "id": 701,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9703:0:2"
                  },
                  "scope": 799,
                  "src": "9605:432:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 797,
                    "nodeType": "Block",
                    "src": "10408:387:2",
                    "statements": [
                      {
                        "assignments": [
                          761
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 761,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10426:16:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 797,
                            "src": "10418:24:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 760,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10418:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 766,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 763,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 753,
                              "src": "10455:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 764,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "10462:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 762,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "10445:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10445:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10418:52:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 767,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "10484:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 770,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10508:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 769,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10508:7:2",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 768,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "10503:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10503:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10517:3:2",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10503:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10484:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 796,
                        "nodeType": "IfStatement",
                        "src": "10480:309:2",
                        "trueBody": {
                          "id": 795,
                          "nodeType": "Block",
                          "src": "10522:267:2",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 774,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 761,
                                  "src": "10540:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 775,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 757,
                                  "src": "10559:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10540:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 784,
                              "nodeType": "IfStatement",
                              "src": "10536:130:2",
                              "trueBody": {
                                "id": 783,
                                "nodeType": "Block",
                                "src": "10566:100:2",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 778,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 755,
                                          "src": "10618:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 779,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 761,
                                          "src": "10627:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 780,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 757,
                                          "src": "10645:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 777,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 178,
                                        "src": "10591:26:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 781,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10591:60:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 782,
                                    "nodeType": "RevertStatement",
                                    "src": "10584:67:2"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 794,
                              "nodeType": "UncheckedBlock",
                              "src": "10679:100:2",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 786,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 753,
                                        "src": "10716:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 787,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 755,
                                        "src": "10723:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 790,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 788,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 761,
                                          "src": "10732:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 789,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 757,
                                          "src": "10751:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10732:24:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 791,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10758:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 785,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        690,
                                        750
                                      ],
                                      "referencedDeclaration": 750,
                                      "src": "10707:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 792,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10707:57:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 793,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10707:57:2"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 751,
                    "nodeType": "StructuredDocumentation",
                    "src": "10043:271:2",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 798,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10328:15:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 758,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 753,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10352:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "10344:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 752,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10344:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 755,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10367:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "10359:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 754,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10359:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 757,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10384:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "10376:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 756,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10376:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10343:47:2"
                  },
                  "returnParameters": {
                    "id": 759,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10408:0:2"
                  },
                  "scope": 799,
                  "src": "10319:476:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 800,
              "src": "1106:9691:2",
              "usedErrors": [
                159,
                164,
                169,
                178,
                183,
                188
              ],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "105:10693:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              877
            ]
          },
          "id": 878,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 801,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:25:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 802,
                "nodeType": "StructuredDocumentation",
                "src": "133:71:3",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 877,
              "linearizedBaseContracts": [
                877
              ],
              "name": "IERC20",
              "nameLocation": "215:6:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 803,
                    "nodeType": "StructuredDocumentation",
                    "src": "228:158:3",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 811,
                  "name": "Transfer",
                  "nameLocation": "397:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 805,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "422:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "406:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 804,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "406:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 807,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "444:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "428:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 806,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "428:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 809,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "456:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "448:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 808,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "448:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "405:57:3"
                  },
                  "src": "391:72:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 812,
                    "nodeType": "StructuredDocumentation",
                    "src": "469:148:3",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 820,
                  "name": "Approval",
                  "nameLocation": "628:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 819,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 814,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "653:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "637:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 813,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "637:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 816,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "676:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "660:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 815,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "660:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 818,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "693:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "685:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 817,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "685:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "636:63:3"
                  },
                  "src": "622:78:3"
                },
                {
                  "documentation": {
                    "id": 821,
                    "nodeType": "StructuredDocumentation",
                    "src": "706:65:3",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 826,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "785:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 822,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "796:2:3"
                  },
                  "returnParameters": {
                    "id": 825,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 824,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 826,
                        "src": "822:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 823,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "821:9:3"
                  },
                  "scope": 877,
                  "src": "776:55:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 827,
                    "nodeType": "StructuredDocumentation",
                    "src": "837:71:3",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 834,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "922:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 830,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 829,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "940:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 834,
                        "src": "932:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 828,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "932:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "931:17:3"
                  },
                  "returnParameters": {
                    "id": 833,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 832,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 834,
                        "src": "972:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 831,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "972:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "971:9:3"
                  },
                  "scope": 877,
                  "src": "913:68:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 835,
                    "nodeType": "StructuredDocumentation",
                    "src": "987:213:3",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 844,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1214:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 840,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 837,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1231:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "1223:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 836,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1223:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 839,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1243:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "1235:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 838,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1235:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1222:27:3"
                  },
                  "returnParameters": {
                    "id": 843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 842,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "1268:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 841,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1268:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1267:6:3"
                  },
                  "scope": 877,
                  "src": "1205:69:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 845,
                    "nodeType": "StructuredDocumentation",
                    "src": "1280:264:3",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 854,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1558:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 850,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 847,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1576:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1568:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1568:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 849,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1591:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1583:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 848,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1583:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1567:32:3"
                  },
                  "returnParameters": {
                    "id": 853,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 852,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1623:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 851,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1623:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1622:9:3"
                  },
                  "scope": 877,
                  "src": "1549:83:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 855,
                    "nodeType": "StructuredDocumentation",
                    "src": "1638:667:3",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 864,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2319:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 860,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 857,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2335:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2327:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 856,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2327:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 859,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2352:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2344:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 858,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2344:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2326:32:3"
                  },
                  "returnParameters": {
                    "id": 863,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 862,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2377:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 861,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2377:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2376:6:3"
                  },
                  "scope": 877,
                  "src": "2310:73:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 865,
                    "nodeType": "StructuredDocumentation",
                    "src": "2389:297:3",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 876,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2700:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 872,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 867,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2721:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2713:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 866,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2713:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 869,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2735:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2727:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 868,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2727:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 871,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2747:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2739:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 870,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2739:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2712:41:3"
                  },
                  "returnParameters": {
                    "id": 875,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 874,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2772:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 873,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2772:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2771:6:3"
                  },
                  "scope": 877,
                  "src": "2691:87:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 878,
              "src": "205:2575:3",
              "usedErrors": [],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "106:2675:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              877
            ],
            "IERC20Metadata": [
              903
            ]
          },
          "id": 904,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 879,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".2"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 881,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 904,
              "sourceUnit": 878,
              "src": "151:37:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 880,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 877,
                    "src": "159:6:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 883,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 877,
                    "src": "306:6:4"
                  },
                  "id": 884,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:4"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 882,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:4",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 903,
              "linearizedBaseContracts": [
                903,
                877
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 885,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:4",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 890,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 886,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:4"
                  },
                  "returnParameters": {
                    "id": 889,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 888,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 890,
                        "src": "417:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 887,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:4"
                  },
                  "scope": 903,
                  "src": "378:54:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 891,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:4",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 896,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 892,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:4"
                  },
                  "returnParameters": {
                    "id": 895,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 894,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 896,
                        "src": "540:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 893,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:4"
                  },
                  "scope": 903,
                  "src": "499:56:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 897,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:4",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 902,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 898,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:4"
                  },
                  "returnParameters": {
                    "id": 901,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 900,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 902,
                        "src": "674:5:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 899,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:4"
                  },
                  "scope": 903,
                  "src": "631:50:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 904,
              "src": "278:405:4",
              "usedErrors": [],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "125:559:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              933
            ]
          },
          "id": 934,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 905,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:5"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 906,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:5",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 933,
              "linearizedBaseContracts": [
                933
              ],
              "name": "Context",
              "nameLocation": "642:7:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 914,
                    "nodeType": "Block",
                    "src": "718:34:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 911,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 910,
                        "id": 913,
                        "nodeType": "Return",
                        "src": "728:17:5"
                      }
                    ]
                  },
                  "id": 915,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 907,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:5"
                  },
                  "returnParameters": {
                    "id": 910,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 909,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 915,
                        "src": "709:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 908,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:5"
                  },
                  "scope": 933,
                  "src": "656:96:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 923,
                    "nodeType": "Block",
                    "src": "825:32:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 920,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:5",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 919,
                        "id": 922,
                        "nodeType": "Return",
                        "src": "835:15:5"
                      }
                    ]
                  },
                  "id": 924,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 916,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:5"
                  },
                  "returnParameters": {
                    "id": 919,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 918,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "809:14:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 917,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:5"
                  },
                  "scope": 933,
                  "src": "758:99:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 931,
                    "nodeType": "Block",
                    "src": "935:25:5",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 928,
                        "id": 930,
                        "nodeType": "Return",
                        "src": "945:8:5"
                      }
                    ]
                  },
                  "id": 932,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 925,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:5"
                  },
                  "returnParameters": {
                    "id": 928,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 927,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 932,
                        "src": "926:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 926,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:5"
                  },
                  "scope": 933,
                  "src": "863:97:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 934,
              "src": "624:338:5",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "Pausable": [
              1041
            ]
          },
          "id": 1042,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 935,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 937,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1042,
              "sourceUnit": 934,
              "src": "128:45:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 936,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 933,
                    "src": "136:7:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 939,
                    "name": "Context",
                    "nameLocations": [
                      "645:7:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 933,
                    "src": "645:7:6"
                  },
                  "id": 940,
                  "nodeType": "InheritanceSpecifier",
                  "src": "645:7:6"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 938,
                "nodeType": "StructuredDocumentation",
                "src": "175:439:6",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 1041,
              "linearizedBaseContracts": [
                1041,
                933
              ],
              "name": "Pausable",
              "nameLocation": "633:8:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 942,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "672:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1041,
                  "src": "659:20:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 941,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 943,
                    "nodeType": "StructuredDocumentation",
                    "src": "686:73:6",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 947,
                  "name": "Paused",
                  "nameLocation": "770:6:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 946,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 945,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "785:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 947,
                        "src": "777:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 944,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "776:17:6"
                  },
                  "src": "764:30:6"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 948,
                    "nodeType": "StructuredDocumentation",
                    "src": "800:70:6",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 952,
                  "name": "Unpaused",
                  "nameLocation": "881:8:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 951,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 950,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "898:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 952,
                        "src": "890:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 949,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:17:6"
                  },
                  "src": "875:32:6"
                },
                {
                  "documentation": {
                    "id": 953,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:76:6",
                    "text": " @dev The operation failed because the contract is paused."
                  },
                  "errorSelector": "d93c0665",
                  "id": 955,
                  "name": "EnforcedPause",
                  "nameLocation": "1000:13:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 954,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1013:2:6"
                  },
                  "src": "994:22:6"
                },
                {
                  "documentation": {
                    "id": 956,
                    "nodeType": "StructuredDocumentation",
                    "src": "1022:80:6",
                    "text": " @dev The operation failed because the contract is not paused."
                  },
                  "errorSelector": "8dfc202b",
                  "id": 958,
                  "name": "ExpectedPause",
                  "nameLocation": "1113:13:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 957,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1126:2:6"
                  },
                  "src": "1107:22:6"
                },
                {
                  "body": {
                    "id": 965,
                    "nodeType": "Block",
                    "src": "1340:47:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 961,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 995,
                            "src": "1350:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1350:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 963,
                        "nodeType": "ExpressionStatement",
                        "src": "1350:19:6"
                      },
                      {
                        "id": 964,
                        "nodeType": "PlaceholderStatement",
                        "src": "1379:1:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 959,
                    "nodeType": "StructuredDocumentation",
                    "src": "1135:175:6",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 966,
                  "name": "whenNotPaused",
                  "nameLocation": "1324:13:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 960,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1337:2:6"
                  },
                  "src": "1315:72:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 973,
                    "nodeType": "Block",
                    "src": "1587:44:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 969,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1008,
                            "src": "1597:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1597:16:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 971,
                        "nodeType": "ExpressionStatement",
                        "src": "1597:16:6"
                      },
                      {
                        "id": 972,
                        "nodeType": "PlaceholderStatement",
                        "src": "1623:1:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 967,
                    "nodeType": "StructuredDocumentation",
                    "src": "1393:167:6",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 974,
                  "name": "whenPaused",
                  "nameLocation": "1574:10:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 968,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1584:2:6"
                  },
                  "src": "1565:66:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 982,
                    "nodeType": "Block",
                    "src": "1779:31:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 980,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 942,
                          "src": "1796:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 979,
                        "id": 981,
                        "nodeType": "Return",
                        "src": "1789:14:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 975,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:84:6",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 983,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1735:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 976,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1741:2:6"
                  },
                  "returnParameters": {
                    "id": 979,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 978,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 983,
                        "src": "1773:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 977,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1772:6:6"
                  },
                  "scope": 1041,
                  "src": "1726:84:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 994,
                    "nodeType": "Block",
                    "src": "1929:77:6",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 987,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 983,
                            "src": "1943:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1943:8:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 993,
                        "nodeType": "IfStatement",
                        "src": "1939:61:6",
                        "trueBody": {
                          "id": 992,
                          "nodeType": "Block",
                          "src": "1953:47:6",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 989,
                                  "name": "EnforcedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 955,
                                  "src": "1974:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 990,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1974:15:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 991,
                              "nodeType": "RevertStatement",
                              "src": "1967:22:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 984,
                    "nodeType": "StructuredDocumentation",
                    "src": "1816:57:6",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 995,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "1887:17:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 985,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1904:2:6"
                  },
                  "returnParameters": {
                    "id": 986,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1929:0:6"
                  },
                  "scope": 1041,
                  "src": "1878:128:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1007,
                    "nodeType": "Block",
                    "src": "2126:78:6",
                    "statements": [
                      {
                        "condition": {
                          "id": 1001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2140:9:6",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 999,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 983,
                              "src": "2141:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 1000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2141:8:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1006,
                        "nodeType": "IfStatement",
                        "src": "2136:62:6",
                        "trueBody": {
                          "id": 1005,
                          "nodeType": "Block",
                          "src": "2151:47:6",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1002,
                                  "name": "ExpectedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 958,
                                  "src": "2172:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1003,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2172:15:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1004,
                              "nodeType": "RevertStatement",
                              "src": "2165:22:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 996,
                    "nodeType": "StructuredDocumentation",
                    "src": "2012:61:6",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 1008,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "2087:14:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 997,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2101:2:6"
                  },
                  "returnParameters": {
                    "id": 998,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2126:0:6"
                  },
                  "scope": 1041,
                  "src": "2078:126:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1023,
                    "nodeType": "Block",
                    "src": "2388:66:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1014,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 942,
                            "src": "2398:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2408:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2398:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1017,
                        "nodeType": "ExpressionStatement",
                        "src": "2398:14:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1019,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 915,
                                "src": "2434:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2434:12:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1018,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 947,
                            "src": "2427:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2427:20:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1022,
                        "nodeType": "EmitStatement",
                        "src": "2422:25:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1009,
                    "nodeType": "StructuredDocumentation",
                    "src": "2210:124:6",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 1024,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1012,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1011,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2374:13:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 966,
                        "src": "2374:13:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2374:13:6"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2348:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1010,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2354:2:6"
                  },
                  "returnParameters": {
                    "id": 1013,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2388:0:6"
                  },
                  "scope": 1041,
                  "src": "2339:115:6",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1039,
                    "nodeType": "Block",
                    "src": "2634:69:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1030,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 942,
                            "src": "2644:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2654:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2644:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1033,
                        "nodeType": "ExpressionStatement",
                        "src": "2644:15:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1035,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 915,
                                "src": "2683:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2683:12:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1034,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 952,
                            "src": "2674:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2674:22:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1038,
                        "nodeType": "EmitStatement",
                        "src": "2669:27:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1025,
                    "nodeType": "StructuredDocumentation",
                    "src": "2460:121:6",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 1040,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1028,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1027,
                        "name": "whenPaused",
                        "nameLocations": [
                          "2623:10:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 974,
                        "src": "2623:10:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2623:10:6"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2595:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1026,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:6"
                  },
                  "returnParameters": {
                    "id": 1029,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2634:0:6"
                  },
                  "scope": 1041,
                  "src": "2586:117:6",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1042,
              "src": "615:2090:6",
              "usedErrors": [
                955,
                958
              ],
              "usedEvents": [
                947,
                952
              ]
            }
          ],
          "src": "102:2604:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              1110
            ]
          },
          "id": 1111,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1043,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:7"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1044,
                "nodeType": "StructuredDocumentation",
                "src": "135:894:7",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 1110,
              "linearizedBaseContracts": [
                1110
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "1048:15:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 1047,
                  "mutability": "constant",
                  "name": "NOT_ENTERED",
                  "nameLocation": "1843:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1110,
                  "src": "1818:40:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1857:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 1050,
                  "mutability": "constant",
                  "name": "ENTERED",
                  "nameLocation": "1889:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1110,
                  "src": "1864:36:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 1049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1899:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1052,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1923:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1110,
                  "src": "1907:23:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1051,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1907:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 1053,
                    "nodeType": "StructuredDocumentation",
                    "src": "1937:52:7",
                    "text": " @dev Unauthorized reentrant call."
                  },
                  "errorSelector": "3ee5aeb5",
                  "id": 1055,
                  "name": "ReentrancyGuardReentrantCall",
                  "nameLocation": "2000:28:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1054,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2028:2:7"
                  },
                  "src": "1994:37:7"
                },
                {
                  "body": {
                    "id": 1062,
                    "nodeType": "Block",
                    "src": "2051:38:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1058,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1052,
                            "src": "2061:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1059,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1047,
                            "src": "2071:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2061:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1061,
                        "nodeType": "ExpressionStatement",
                        "src": "2061:21:7"
                      }
                    ]
                  },
                  "id": 1063,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1056,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2048:2:7"
                  },
                  "returnParameters": {
                    "id": 1057,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2051:0:7"
                  },
                  "scope": 1110,
                  "src": "2037:52:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1073,
                    "nodeType": "Block",
                    "src": "2490:79:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1066,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1090,
                            "src": "2500:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2500:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1068,
                        "nodeType": "ExpressionStatement",
                        "src": "2500:21:7"
                      },
                      {
                        "id": 1069,
                        "nodeType": "PlaceholderStatement",
                        "src": "2531:1:7"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1070,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1098,
                            "src": "2542:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2542:20:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1072,
                        "nodeType": "ExpressionStatement",
                        "src": "2542:20:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1064,
                    "nodeType": "StructuredDocumentation",
                    "src": "2095:366:7",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 1074,
                  "name": "nonReentrant",
                  "nameLocation": "2475:12:7",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1065,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2487:2:7"
                  },
                  "src": "2466:103:7",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1089,
                    "nodeType": "Block",
                    "src": "2614:268:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1077,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1052,
                            "src": "2702:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1078,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1050,
                            "src": "2713:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2702:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1084,
                        "nodeType": "IfStatement",
                        "src": "2698:86:7",
                        "trueBody": {
                          "id": 1083,
                          "nodeType": "Block",
                          "src": "2722:62:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1080,
                                  "name": "ReentrancyGuardReentrantCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1055,
                                  "src": "2743:28:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1081,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2743:30:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1082,
                              "nodeType": "RevertStatement",
                              "src": "2736:37:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1085,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1052,
                            "src": "2858:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1086,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1050,
                            "src": "2868:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2858:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1088,
                        "nodeType": "ExpressionStatement",
                        "src": "2858:17:7"
                      }
                    ]
                  },
                  "id": 1090,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2584:19:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1075,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:7"
                  },
                  "returnParameters": {
                    "id": 1076,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2614:0:7"
                  },
                  "scope": 1110,
                  "src": "2575:307:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1097,
                    "nodeType": "Block",
                    "src": "2926:170:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1093,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1052,
                            "src": "3068:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1094,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1047,
                            "src": "3078:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3068:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1096,
                        "nodeType": "ExpressionStatement",
                        "src": "3068:21:7"
                      }
                    ]
                  },
                  "id": 1098,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2897:18:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1091,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2915:2:7"
                  },
                  "returnParameters": {
                    "id": 1092,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2926:0:7"
                  },
                  "scope": 1110,
                  "src": "2888:208:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1108,
                    "nodeType": "Block",
                    "src": "3339:42:7",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1104,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1052,
                            "src": "3356:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1105,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1050,
                            "src": "3367:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3356:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1103,
                        "id": 1107,
                        "nodeType": "Return",
                        "src": "3349:25:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1099,
                    "nodeType": "StructuredDocumentation",
                    "src": "3102:168:7",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 1109,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3284:23:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1100,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3307:2:7"
                  },
                  "returnParameters": {
                    "id": 1103,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1102,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1109,
                        "src": "3333:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1101,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3332:6:7"
                  },
                  "scope": 1110,
                  "src": "3275:106:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1111,
              "src": "1030:2353:7",
              "usedErrors": [
                1055
              ],
              "usedEvents": []
            }
          ],
          "src": "109:3275:7"
        },
        "id": 7
      },
      "contracts/USDCRewardContract.sol": {
        "ast": {
          "absolutePath": "contracts/USDCRewardContract.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "IERC20": [
              877
            ],
            "Ownable": [
              147
            ],
            "Pausable": [
              1041
            ],
            "ReentrancyGuard": [
              1110
            ],
            "USDCRewardContract": [
              1677
            ]
          },
          "id": 1678,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1112,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1113,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1678,
              "sourceUnit": 148,
              "src": "58:52:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "@openzeppelin/contracts/utils/Pausable.sol",
              "id": 1114,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1678,
              "sourceUnit": 1042,
              "src": "111:52:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 1115,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1678,
              "sourceUnit": 1111,
              "src": "164:59:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1116,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1678,
              "sourceUnit": 878,
              "src": "224:56:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1118,
                    "name": "Ownable",
                    "nameLocations": [
                      "466:7:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "466:7:8"
                  },
                  "id": 1119,
                  "nodeType": "InheritanceSpecifier",
                  "src": "466:7:8"
                },
                {
                  "baseName": {
                    "id": 1120,
                    "name": "Pausable",
                    "nameLocations": [
                      "475:8:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1041,
                    "src": "475:8:8"
                  },
                  "id": 1121,
                  "nodeType": "InheritanceSpecifier",
                  "src": "475:8:8"
                },
                {
                  "baseName": {
                    "id": 1122,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "485:15:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1110,
                    "src": "485:15:8"
                  },
                  "id": 1123,
                  "nodeType": "InheritanceSpecifier",
                  "src": "485:15:8"
                }
              ],
              "canonicalName": "USDCRewardContract",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1117,
                "nodeType": "StructuredDocumentation",
                "src": "282:152:8",
                "text": " @title USDCRewardContract\n @dev A contract for managing point-based USDC rewards for users who upload conversation data\n @author Oto Team"
              },
              "fullyImplemented": true,
              "id": 1677,
              "linearizedBaseContracts": [
                1677,
                1110,
                1041,
                147,
                933
              ],
              "name": "USDCRewardContract",
              "nameLocation": "444:18:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "documentation": {
                    "id": 1124,
                    "nodeType": "StructuredDocumentation",
                    "src": "569:58:8",
                    "text": "@dev Mapping of user addresses to their point balances"
                  },
                  "id": 1128,
                  "mutability": "mutable",
                  "name": "pointBalances",
                  "nameLocation": "666:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "630:49:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1127,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1125,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "638:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "630:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1126,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "649:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1129,
                    "nodeType": "StructuredDocumentation",
                    "src": "684:64:8",
                    "text": "@dev Mapping of user addresses to their total claimed points"
                  },
                  "id": 1133,
                  "mutability": "mutable",
                  "name": "totalClaimedPoints",
                  "nameLocation": "787:18:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "751:54:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1132,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1130,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "759:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "751:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1131,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "770:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1134,
                    "nodeType": "StructuredDocumentation",
                    "src": "810:76:8",
                    "text": "@dev Exchange rate from points to USDC (1 point = exchangeRate USDC wei)"
                  },
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "exchangeRate",
                  "nameLocation": "905:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "889:28:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1137,
                    "nodeType": "StructuredDocumentation",
                    "src": "922:38:8",
                    "text": "@dev USDC token contract interface"
                  },
                  "id": 1140,
                  "mutability": "mutable",
                  "name": "usdcToken",
                  "nameLocation": "978:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "963:24:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$877",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1139,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1138,
                      "name": "IERC20",
                      "nameLocations": [
                        "963:6:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 877,
                      "src": "963:6:8"
                    },
                    "referencedDeclaration": 877,
                    "src": "963:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$877",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 1141,
                    "nodeType": "StructuredDocumentation",
                    "src": "1054:183:8",
                    "text": "@dev Thrown when user has insufficient points for the requested operation\n @param required The amount of points required\n @param available The amount of points available"
                  },
                  "errorSelector": "8059c747",
                  "id": 1147,
                  "name": "InsufficientPoints",
                  "nameLocation": "1246:18:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1146,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1143,
                        "mutability": "mutable",
                        "name": "required",
                        "nameLocation": "1273:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1147,
                        "src": "1265:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1142,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1265:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1145,
                        "mutability": "mutable",
                        "name": "available",
                        "nameLocation": "1291:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1147,
                        "src": "1283:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1144,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1283:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1264:37:8"
                  },
                  "src": "1240:62:8"
                },
                {
                  "documentation": {
                    "id": 1148,
                    "nodeType": "StructuredDocumentation",
                    "src": "1306:189:8",
                    "text": "@dev Thrown when contract has insufficient USDC balance for the requested operation\n @param required The amount of USDC required\n @param available The amount of USDC available"
                  },
                  "errorSelector": "0e45ed66",
                  "id": 1154,
                  "name": "InsufficientUSDCBalance",
                  "nameLocation": "1504:23:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1150,
                        "mutability": "mutable",
                        "name": "required",
                        "nameLocation": "1536:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1154,
                        "src": "1528:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1149,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1152,
                        "mutability": "mutable",
                        "name": "available",
                        "nameLocation": "1554:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1154,
                        "src": "1546:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1151,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1546:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1527:37:8"
                  },
                  "src": "1498:67:8"
                },
                {
                  "documentation": {
                    "id": 1155,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:66:8",
                    "text": "@dev Thrown when an invalid address (zero address) is provided"
                  },
                  "errorSelector": "e6c4247b",
                  "id": 1157,
                  "name": "InvalidAddress",
                  "nameLocation": "1644:14:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1156,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1658:2:8"
                  },
                  "src": "1638:23:8"
                },
                {
                  "documentation": {
                    "id": 1158,
                    "nodeType": "StructuredDocumentation",
                    "src": "1665:69:8",
                    "text": "@dev Thrown when an invalid amount (zero or negative) is provided"
                  },
                  "errorSelector": "2c5211c6",
                  "id": 1160,
                  "name": "InvalidAmount",
                  "nameLocation": "1743:13:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1159,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1756:2:8"
                  },
                  "src": "1737:22:8"
                },
                {
                  "documentation": {
                    "id": 1161,
                    "nodeType": "StructuredDocumentation",
                    "src": "1763:52:8",
                    "text": "@dev Thrown when exchange rate is not set (zero)"
                  },
                  "errorSelector": "62f216e5",
                  "id": 1163,
                  "name": "ExchangeRateNotSet",
                  "nameLocation": "1824:18:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1162,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1842:2:8"
                  },
                  "src": "1818:27:8"
                },
                {
                  "documentation": {
                    "id": 1164,
                    "nodeType": "StructuredDocumentation",
                    "src": "1849:53:8",
                    "text": "@dev Thrown when unauthorized access is attempted"
                  },
                  "errorSelector": "82b42900",
                  "id": 1166,
                  "name": "Unauthorized",
                  "nameLocation": "1911:12:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1165,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1923:2:8"
                  },
                  "src": "1905:21:8"
                },
                {
                  "documentation": {
                    "id": 1167,
                    "nodeType": "StructuredDocumentation",
                    "src": "1930:68:8",
                    "text": "@dev Thrown when contract is paused and operation is not allowed"
                  },
                  "errorSelector": "6d39fcd0",
                  "id": 1169,
                  "name": "ContractIsPaused",
                  "nameLocation": "2007:16:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1168,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2023:2:8"
                  },
                  "src": "2001:25:8"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1170,
                    "nodeType": "StructuredDocumentation",
                    "src": "2085:140:8",
                    "text": "@dev Emitted when points are added to a user's balance\n @param user The user address\n @param amount The amount of points added"
                  },
                  "eventSelector": "0fe6fcb45adaaa54f7e3491f6a7964049817f1e437f33587e634a4629fbcf3a6",
                  "id": 1176,
                  "name": "PointsAdded",
                  "nameLocation": "2234:11:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1175,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1172,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "2262:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1176,
                        "src": "2246:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1171,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2246:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1174,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2276:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1176,
                        "src": "2268:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1173,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2268:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2245:38:8"
                  },
                  "src": "2228:56:8"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1177,
                    "nodeType": "StructuredDocumentation",
                    "src": "2288:146:8",
                    "text": "@dev Emitted when points are removed from a user's balance\n @param user The user address\n @param amount The amount of points removed"
                  },
                  "eventSelector": "f9352367bd3be481e8f66e7940f6ea5b57fea7504271b1f2863a535443fd2bab",
                  "id": 1183,
                  "name": "PointsRemoved",
                  "nameLocation": "2443:13:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1182,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1179,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "2473:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "2457:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1178,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2457:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1181,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2487:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "2479:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1180,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2479:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2456:38:8"
                  },
                  "src": "2437:58:8"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1184,
                    "nodeType": "StructuredDocumentation",
                    "src": "2499:89:8",
                    "text": "@dev Emitted when exchange rate is updated\n @param newRate The new exchange rate"
                  },
                  "eventSelector": "972aba470577c14606bbf4bbdec1fed4925f242fcef40b4a8d242983365d0291",
                  "id": 1188,
                  "name": "ExchangeRateSet",
                  "nameLocation": "2597:15:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1187,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1186,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newRate",
                        "nameLocation": "2621:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1188,
                        "src": "2613:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1185,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2613:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2612:17:8"
                  },
                  "src": "2591:39:8"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1189,
                    "nodeType": "StructuredDocumentation",
                    "src": "2634:183:8",
                    "text": "@dev Emitted when USDC is claimed by a user\n @param user The user address\n @param pointsUsed The amount of points used\n @param usdcAmount The amount of USDC claimed"
                  },
                  "eventSelector": "eb9a8c68a32bc6989217e69f932cf098ff5d0e2f11305800394c73b554d2ce9e",
                  "id": 1197,
                  "name": "USDCClaimed",
                  "nameLocation": "2826:11:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1196,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1191,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "2859:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1197,
                        "src": "2843:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1190,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2843:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1193,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pointsUsed",
                        "nameLocation": "2877:10:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1197,
                        "src": "2869:18:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1192,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2869:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1195,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "usdcAmount",
                        "nameLocation": "2901:10:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1197,
                        "src": "2893:18:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1194,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2893:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2837:78:8"
                  },
                  "src": "2820:96:8"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1198,
                    "nodeType": "StructuredDocumentation",
                    "src": "2920:104:8",
                    "text": "@dev Emitted when USDC is deposited to the contract\n @param amount The amount of USDC deposited"
                  },
                  "eventSelector": "0f920186940a9c60ff07b508b49ba5dca2c647b29aebfa69964b44e5e873a62c",
                  "id": 1202,
                  "name": "USDCDeposited",
                  "nameLocation": "3033:13:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1201,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1200,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3055:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1202,
                        "src": "3047:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1199,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3047:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3046:16:8"
                  },
                  "src": "3027:36:8"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1203,
                    "nodeType": "StructuredDocumentation",
                    "src": "3067:106:8",
                    "text": "@dev Emitted when USDC is withdrawn from the contract\n @param amount The amount of USDC withdrawn"
                  },
                  "eventSelector": "4eacc637a5fb1dbbc94595a9432e0a8d75ae5d51d189021963a6cc8575465ddf",
                  "id": 1207,
                  "name": "USDCWithdrawn",
                  "nameLocation": "3182:13:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1206,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1205,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3204:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1207,
                        "src": "3196:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1204,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3196:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3195:16:8"
                  },
                  "src": "3176:36:8"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1208,
                    "nodeType": "StructuredDocumentation",
                    "src": "3216:40:8",
                    "text": "@dev Emitted when contract is paused"
                  },
                  "eventSelector": "ab35696f06e428ebc5ceba8cd17f8fed287baf43440206d1943af1ee53e6d267",
                  "id": 1210,
                  "name": "ContractPaused",
                  "nameLocation": "3265:14:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1209,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3279:2:8"
                  },
                  "src": "3259:23:8"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1211,
                    "nodeType": "StructuredDocumentation",
                    "src": "3286:42:8",
                    "text": "@dev Emitted when contract is unpaused"
                  },
                  "eventSelector": "0e5e3b3fb504c22cf5c42fa07d521225937514c654007e1f12646f89768d6f94",
                  "id": 1213,
                  "name": "ContractUnpaused",
                  "nameLocation": "3337:16:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1212,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3353:2:8"
                  },
                  "src": "3331:25:8"
                },
                {
                  "body": {
                    "id": 1244,
                    "nodeType": "Block",
                    "src": "3609:187:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1223,
                            "name": "_usdcToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1216,
                            "src": "3619:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1226,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3641:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3633:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1224,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3633:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3633:10:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3619:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1233,
                        "nodeType": "IfStatement",
                        "src": "3615:68:8",
                        "trueBody": {
                          "id": 1232,
                          "nodeType": "Block",
                          "src": "3645:38:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1229,
                                  "name": "InvalidAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1157,
                                  "src": "3660:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3660:16:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1231,
                              "nodeType": "RevertStatement",
                              "src": "3653:23:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1234,
                            "name": "usdcToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1140,
                            "src": "3689:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$877",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1236,
                                "name": "_usdcToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1216,
                                "src": "3708:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1235,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 877,
                              "src": "3701:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3701:18:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$877",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "3689:30:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$877",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1239,
                        "nodeType": "ExpressionStatement",
                        "src": "3689:30:8"
                      },
                      {
                        "expression": {
                          "id": 1242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1240,
                            "name": "exchangeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1136,
                            "src": "3725:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3740:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3725:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1243,
                        "nodeType": "ExpressionStatement",
                        "src": "3725:16:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1214,
                    "nodeType": "StructuredDocumentation",
                    "src": "3420:134:8",
                    "text": "@dev Constructor to initialize the contract with USDC token address\n @param _usdcToken The address of the USDC token contract"
                  },
                  "id": 1245,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1219,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3597:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3601:6:8",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3597:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1221,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1218,
                        "name": "Ownable",
                        "nameLocations": [
                          "3589:7:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "3589:7:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3589:19:8"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1217,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1216,
                        "mutability": "mutable",
                        "name": "_usdcToken",
                        "nameLocation": "3577:10:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1245,
                        "src": "3569:18:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1215,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3569:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3568:20:8"
                  },
                  "returnParameters": {
                    "id": 1222,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3609:0:8"
                  },
                  "scope": 1677,
                  "src": "3557:239:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1278,
                    "nodeType": "Block",
                    "src": "4099:166:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1256,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1248,
                              "src": "4122:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1255,
                            "name": "_validateAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1676,
                            "src": "4105:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 1257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4105:22:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1258,
                        "nodeType": "ExpressionStatement",
                        "src": "4105:22:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1259,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1250,
                            "src": "4138:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4148:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4138:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1266,
                        "nodeType": "IfStatement",
                        "src": "4134:54:8",
                        "trueBody": {
                          "id": 1265,
                          "nodeType": "Block",
                          "src": "4151:37:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1262,
                                  "name": "InvalidAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1160,
                                  "src": "4166:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4166:15:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1264,
                              "nodeType": "RevertStatement",
                              "src": "4159:22:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1267,
                              "name": "pointBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1128,
                              "src": "4194:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1269,
                            "indexExpression": {
                              "id": 1268,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1248,
                              "src": "4208:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4194:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1270,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1250,
                            "src": "4217:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4194:29:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1272,
                        "nodeType": "ExpressionStatement",
                        "src": "4194:29:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1274,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1248,
                              "src": "4247:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1275,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1250,
                              "src": "4253:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1273,
                            "name": "PointsAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1176,
                            "src": "4235:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4235:25:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1277,
                        "nodeType": "EmitStatement",
                        "src": "4230:30:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1246,
                    "nodeType": "StructuredDocumentation",
                    "src": "3875:153:8",
                    "text": "@dev Adds points to a user's balance (only owner)\n @param user The user address to add points to\n @param amount The amount of points to add"
                  },
                  "functionSelector": "507cd30f",
                  "id": 1279,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1253,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1252,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "4089:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "4089:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4089:9:8"
                    }
                  ],
                  "name": "addPoints",
                  "nameLocation": "4040:9:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1251,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1248,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "4058:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1279,
                        "src": "4050:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1247,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4050:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1250,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4072:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1279,
                        "src": "4064:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1249,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4064:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4049:30:8"
                  },
                  "returnParameters": {
                    "id": 1254,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4099:0:8"
                  },
                  "scope": 1677,
                  "src": "4031:234:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1328,
                    "nodeType": "Block",
                    "src": "4517:317:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1290,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1282,
                              "src": "4540:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1289,
                            "name": "_validateAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1676,
                            "src": "4523:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 1291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4523:22:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1292,
                        "nodeType": "ExpressionStatement",
                        "src": "4523:22:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1293,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1284,
                            "src": "4556:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4566:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4556:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1300,
                        "nodeType": "IfStatement",
                        "src": "4552:54:8",
                        "trueBody": {
                          "id": 1299,
                          "nodeType": "Block",
                          "src": "4569:37:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1296,
                                  "name": "InvalidAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1160,
                                  "src": "4584:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4584:15:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1298,
                              "nodeType": "RevertStatement",
                              "src": "4577:22:8"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1302
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1302,
                            "mutability": "mutable",
                            "name": "currentBalance",
                            "nameLocation": "4620:14:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1328,
                            "src": "4612:22:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1301,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4612:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1306,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1303,
                            "name": "pointBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "4637:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1305,
                          "indexExpression": {
                            "id": 1304,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1282,
                            "src": "4651:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4637:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4612:44:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1307,
                            "name": "currentBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1302,
                            "src": "4666:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1308,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1284,
                            "src": "4683:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4666:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1316,
                        "nodeType": "IfStatement",
                        "src": "4662:93:8",
                        "trueBody": {
                          "id": 1315,
                          "nodeType": "Block",
                          "src": "4691:64:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 1311,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1284,
                                    "src": "4725:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1312,
                                    "name": "currentBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1302,
                                    "src": "4733:14:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1310,
                                  "name": "InsufficientPoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1147,
                                  "src": "4706:18:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (uint256,uint256) pure returns (error)"
                                  }
                                },
                                "id": 1313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4706:42:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1314,
                              "nodeType": "RevertStatement",
                              "src": "4699:49:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1317,
                              "name": "pointBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1128,
                              "src": "4761:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1319,
                            "indexExpression": {
                              "id": 1318,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1282,
                              "src": "4775:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4761:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1320,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1284,
                            "src": "4784:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4761:29:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1322,
                        "nodeType": "ExpressionStatement",
                        "src": "4761:29:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1324,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1282,
                              "src": "4816:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1325,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1284,
                              "src": "4822:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1323,
                            "name": "PointsRemoved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1183,
                            "src": "4802:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4802:27:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1327,
                        "nodeType": "EmitStatement",
                        "src": "4797:32:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1280,
                    "nodeType": "StructuredDocumentation",
                    "src": "4269:172:8",
                    "text": "@dev Subtracts points from a user's balance (only owner)\n @param user The user address to subtract points from\n @param amount The amount of points to subtract"
                  },
                  "functionSelector": "4a222b35",
                  "id": 1329,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1287,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1286,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "4507:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "4507:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4507:9:8"
                    }
                  ],
                  "name": "subtractPoints",
                  "nameLocation": "4453:14:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1285,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1282,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "4476:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1329,
                        "src": "4468:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1281,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4468:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1284,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4490:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1329,
                        "src": "4482:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1283,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4482:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4467:30:8"
                  },
                  "returnParameters": {
                    "id": 1288,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4517:0:8"
                  },
                  "scope": 1677,
                  "src": "4444:390:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1341,
                    "nodeType": "Block",
                    "src": "5041:37:8",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1337,
                            "name": "pointBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "5054:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1339,
                          "indexExpression": {
                            "id": 1338,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1332,
                            "src": "5068:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5054:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1336,
                        "id": 1340,
                        "nodeType": "Return",
                        "src": "5047:26:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1330,
                    "nodeType": "StructuredDocumentation",
                    "src": "4838:129:8",
                    "text": "@dev Gets the point balance of a user\n @param user The user address to check\n @return The point balance of the user"
                  },
                  "functionSelector": "5f42513c",
                  "id": 1342,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPointBalance",
                  "nameLocation": "4979:15:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1333,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1332,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "5003:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1342,
                        "src": "4995:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1331,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4995:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4994:14:8"
                  },
                  "returnParameters": {
                    "id": 1336,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1335,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1342,
                        "src": "5032:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1334,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5032:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5031:9:8"
                  },
                  "scope": 1677,
                  "src": "4970:108:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1354,
                    "nodeType": "Block",
                    "src": "5313:42:8",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1350,
                            "name": "totalClaimedPoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1133,
                            "src": "5326:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1352,
                          "indexExpression": {
                            "id": 1351,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1345,
                            "src": "5345:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5326:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1349,
                        "id": 1353,
                        "nodeType": "Return",
                        "src": "5319:31:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1343,
                    "nodeType": "StructuredDocumentation",
                    "src": "5082:143:8",
                    "text": "@dev Gets the total claimed points of a user\n @param user The user address to check\n @return The total claimed points of the user"
                  },
                  "functionSelector": "1e2393ea",
                  "id": 1355,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTotalClaimedPoints",
                  "nameLocation": "5237:21:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1346,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1345,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "5272:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1355,
                        "src": "5264:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1344,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5264:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5258:22:8"
                  },
                  "returnParameters": {
                    "id": 1349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1348,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1355,
                        "src": "5304:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1347,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5304:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5303:9:8"
                  },
                  "scope": 1677,
                  "src": "5228:127:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1371,
                    "nodeType": "Block",
                    "src": "5633:63:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1363,
                            "name": "exchangeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1136,
                            "src": "5639:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1364,
                            "name": "rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1358,
                            "src": "5654:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5639:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1366,
                        "nodeType": "ExpressionStatement",
                        "src": "5639:19:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1368,
                              "name": "rate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1358,
                              "src": "5686:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1367,
                            "name": "ExchangeRateSet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1188,
                            "src": "5670:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5670:21:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1370,
                        "nodeType": "EmitStatement",
                        "src": "5665:26:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1356,
                    "nodeType": "StructuredDocumentation",
                    "src": "5442:130:8",
                    "text": "@dev Sets the exchange rate from points to USDC (only owner)\n @param rate The new exchange rate (1 point = rate USDC wei)"
                  },
                  "functionSelector": "db068e0e",
                  "id": 1372,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1361,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1360,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "5623:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "5623:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5623:9:8"
                    }
                  ],
                  "name": "setExchangeRate",
                  "nameLocation": "5584:15:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1358,
                        "mutability": "mutable",
                        "name": "rate",
                        "nameLocation": "5608:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1372,
                        "src": "5600:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1357,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5600:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5599:14:8"
                  },
                  "returnParameters": {
                    "id": 1362,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5633:0:8"
                  },
                  "scope": 1677,
                  "src": "5575:121:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1391,
                    "nodeType": "Block",
                    "src": "5958:96:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1380,
                            "name": "exchangeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1136,
                            "src": "5968:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5984:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5968:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1386,
                        "nodeType": "IfStatement",
                        "src": "5964:46:8",
                        "trueBody": {
                          "id": 1385,
                          "nodeType": "Block",
                          "src": "5987:23:8",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 1383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6002:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 1379,
                              "id": 1384,
                              "nodeType": "Return",
                              "src": "5995:8:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1387,
                            "name": "pointAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1375,
                            "src": "6023:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1388,
                            "name": "exchangeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1136,
                            "src": "6037:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6023:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1379,
                        "id": 1390,
                        "nodeType": "Return",
                        "src": "6016:33:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1373,
                    "nodeType": "StructuredDocumentation",
                    "src": "5700:165:8",
                    "text": "@dev Calculates the USDC amount for a given point amount\n @param pointAmount The amount of points to convert\n @return The equivalent USDC amount in wei"
                  },
                  "functionSelector": "4cabb824",
                  "id": 1392,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calculateUSDCAmount",
                  "nameLocation": "5877:19:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1375,
                        "mutability": "mutable",
                        "name": "pointAmount",
                        "nameLocation": "5910:11:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1392,
                        "src": "5902:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1374,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5902:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5896:29:8"
                  },
                  "returnParameters": {
                    "id": 1379,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1378,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1392,
                        "src": "5949:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1377,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5949:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5948:9:8"
                  },
                  "scope": 1677,
                  "src": "5868:186:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1493,
                    "nodeType": "Block",
                    "src": "6330:1034:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1403,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6353:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6357:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6353:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1402,
                            "name": "_validateAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1676,
                            "src": "6336:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 1405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6336:28:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1406,
                        "nodeType": "ExpressionStatement",
                        "src": "6336:28:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1407,
                            "name": "pointAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1395,
                            "src": "6375:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6390:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6375:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1414,
                        "nodeType": "IfStatement",
                        "src": "6371:59:8",
                        "trueBody": {
                          "id": 1413,
                          "nodeType": "Block",
                          "src": "6393:37:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1410,
                                  "name": "InvalidAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1160,
                                  "src": "6408:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6408:15:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1412,
                              "nodeType": "RevertStatement",
                              "src": "6401:22:8"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1415,
                            "name": "exchangeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1136,
                            "src": "6477:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6493:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6477:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1422,
                        "nodeType": "IfStatement",
                        "src": "6473:65:8",
                        "trueBody": {
                          "id": 1421,
                          "nodeType": "Block",
                          "src": "6496:42:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1418,
                                  "name": "ExchangeRateNotSet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1163,
                                  "src": "6511:18:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6511:20:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1420,
                              "nodeType": "RevertStatement",
                              "src": "6504:27:8"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1424
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1424,
                            "mutability": "mutable",
                            "name": "userBalance",
                            "nameLocation": "6586:11:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1493,
                            "src": "6578:19:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1423,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6578:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1429,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1425,
                            "name": "pointBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "6600:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1428,
                          "indexExpression": {
                            "expression": {
                              "id": 1426,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6614:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6618:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6614:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6600:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6578:47:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1430,
                            "name": "userBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1424,
                            "src": "6635:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1431,
                            "name": "pointAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1395,
                            "src": "6649:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6635:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1439,
                        "nodeType": "IfStatement",
                        "src": "6631:97:8",
                        "trueBody": {
                          "id": 1438,
                          "nodeType": "Block",
                          "src": "6662:66:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 1434,
                                    "name": "pointAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1395,
                                    "src": "6696:11:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1435,
                                    "name": "userBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1424,
                                    "src": "6709:11:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1433,
                                  "name": "InsufficientPoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1147,
                                  "src": "6677:18:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (uint256,uint256) pure returns (error)"
                                  }
                                },
                                "id": 1436,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6677:44:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1437,
                              "nodeType": "RevertStatement",
                              "src": "6670:51:8"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1441
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1441,
                            "mutability": "mutable",
                            "name": "usdcAmount",
                            "nameLocation": "6771:10:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1493,
                            "src": "6763:18:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1440,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6763:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1445,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1442,
                            "name": "pointAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1395,
                            "src": "6784:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1443,
                            "name": "exchangeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1136,
                            "src": "6798:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6784:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6763:47:8"
                      },
                      {
                        "assignments": [
                          1447
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1447,
                            "mutability": "mutable",
                            "name": "contractUSDCBalance",
                            "nameLocation": "6862:19:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1493,
                            "src": "6854:27:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1446,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6854:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1455,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1452,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6912:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_USDCRewardContract_$1677",
                                    "typeString": "contract USDCRewardContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_USDCRewardContract_$1677",
                                    "typeString": "contract USDCRewardContract"
                                  }
                                ],
                                "id": 1451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6904:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1450,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6904:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6904:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1448,
                              "name": "usdcToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "6884:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$877",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6894:9:8",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 834,
                            "src": "6884:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6884:34:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6854:64:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1456,
                            "name": "contractUSDCBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1447,
                            "src": "6928:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1457,
                            "name": "usdcAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1441,
                            "src": "6950:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6928:32:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1465,
                        "nodeType": "IfStatement",
                        "src": "6924:116:8",
                        "trueBody": {
                          "id": 1464,
                          "nodeType": "Block",
                          "src": "6962:78:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 1460,
                                    "name": "usdcAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1441,
                                    "src": "7001:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1461,
                                    "name": "contractUSDCBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1447,
                                    "src": "7013:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1459,
                                  "name": "InsufficientUSDCBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1154,
                                  "src": "6977:23:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (uint256,uint256) pure returns (error)"
                                  }
                                },
                                "id": 1462,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6977:56:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1463,
                              "nodeType": "RevertStatement",
                              "src": "6970:63:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1466,
                              "name": "pointBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1128,
                              "src": "7081:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1469,
                            "indexExpression": {
                              "expression": {
                                "id": 1467,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7095:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7099:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7095:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7081:25:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1470,
                            "name": "pointAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1395,
                            "src": "7110:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7081:40:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1472,
                        "nodeType": "ExpressionStatement",
                        "src": "7081:40:8"
                      },
                      {
                        "expression": {
                          "id": 1478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1473,
                              "name": "totalClaimedPoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1133,
                              "src": "7163:18:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1476,
                            "indexExpression": {
                              "expression": {
                                "id": 1474,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7182:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7186:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7182:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7163:30:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1477,
                            "name": "pointAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1395,
                            "src": "7197:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7163:45:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1479,
                        "nodeType": "ExpressionStatement",
                        "src": "7163:45:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1481,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7258:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7262:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7258:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1483,
                              "name": "usdcAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1441,
                              "src": "7270:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1480,
                            "name": "_transferUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1658,
                            "src": "7244:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7244:37:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1485,
                        "nodeType": "ExpressionStatement",
                        "src": "7244:37:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1487,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7323:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1488,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7327:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7323:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1489,
                              "name": "pointAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1395,
                              "src": "7335:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1490,
                              "name": "usdcAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1441,
                              "src": "7348:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1486,
                            "name": "USDCClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1197,
                            "src": "7311:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 1491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7311:48:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1492,
                        "nodeType": "EmitStatement",
                        "src": "7306:53:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1393,
                    "nodeType": "StructuredDocumentation",
                    "src": "6127:124:8",
                    "text": "@dev Allows users to claim USDC by spending their points\n @param pointAmount The amount of points to spend for USDC"
                  },
                  "functionSelector": "6e5f4a89",
                  "id": 1494,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1398,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1397,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "6303:13:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 966,
                        "src": "6303:13:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6303:13:8"
                    },
                    {
                      "id": 1400,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1399,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "6317:12:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1074,
                        "src": "6317:12:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6317:12:8"
                    }
                  ],
                  "name": "claimUSDC",
                  "nameLocation": "6263:9:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1396,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1395,
                        "mutability": "mutable",
                        "name": "pointAmount",
                        "nameLocation": "6281:11:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1494,
                        "src": "6273:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1394,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6273:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6272:21:8"
                  },
                  "returnParameters": {
                    "id": 1401,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6330:0:8"
                  },
                  "scope": 1677,
                  "src": "6254:1110:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1540,
                    "nodeType": "Block",
                    "src": "7609:325:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1502,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1497,
                            "src": "7619:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7629:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7619:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1509,
                        "nodeType": "IfStatement",
                        "src": "7615:54:8",
                        "trueBody": {
                          "id": 1508,
                          "nodeType": "Block",
                          "src": "7632:37:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1505,
                                  "name": "InvalidAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1160,
                                  "src": "7647:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1506,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7647:15:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1507,
                              "nodeType": "RevertStatement",
                              "src": "7640:22:8"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1511
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1511,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "7724:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1540,
                            "src": "7719:12:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1510,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "7719:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1522,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1514,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7757:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7761:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7757:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1518,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7777:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_USDCRewardContract_$1677",
                                    "typeString": "contract USDCRewardContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_USDCRewardContract_$1677",
                                    "typeString": "contract USDCRewardContract"
                                  }
                                ],
                                "id": 1517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7769:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1516,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7769:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7769:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1520,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1497,
                              "src": "7784:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1512,
                              "name": "usdcToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "7734:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$877",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7744:12:8",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 876,
                            "src": "7734:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7734:57:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7719:72:8"
                      },
                      {
                        "condition": {
                          "id": 1524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "7801:8:8",
                          "subExpression": {
                            "id": 1523,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1511,
                            "src": "7802:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1535,
                        "nodeType": "IfStatement",
                        "src": "7797:100:8",
                        "trueBody": {
                          "id": 1534,
                          "nodeType": "Block",
                          "src": "7811:86:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 1526,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1497,
                                    "src": "7850:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1529,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "7878:3:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1530,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7882:6:8",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "7878:10:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1527,
                                        "name": "usdcToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1140,
                                        "src": "7858:9:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$877",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 1528,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "7868:9:8",
                                      "memberName": "balanceOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 834,
                                      "src": "7858:19:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view external returns (uint256)"
                                      }
                                    },
                                    "id": 1531,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7858:31:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1525,
                                  "name": "InsufficientUSDCBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1154,
                                  "src": "7826:23:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (uint256,uint256) pure returns (error)"
                                  }
                                },
                                "id": 1532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7826:64:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1533,
                              "nodeType": "RevertStatement",
                              "src": "7819:71:8"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1537,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1497,
                              "src": "7922:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1536,
                            "name": "USDCDeposited",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1202,
                            "src": "7908:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7908:21:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1539,
                        "nodeType": "EmitStatement",
                        "src": "7903:26:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1495,
                    "nodeType": "StructuredDocumentation",
                    "src": "7449:101:8",
                    "text": "@dev Deposits USDC to the contract (only owner)\n @param amount The amount of USDC to deposit"
                  },
                  "functionSelector": "f688bcfb",
                  "id": 1541,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1500,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1499,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "7599:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "7599:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7599:9:8"
                    }
                  ],
                  "name": "depositUSDC",
                  "nameLocation": "7562:11:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1498,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1497,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "7582:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1541,
                        "src": "7574:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1496,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7574:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7573:16:8"
                  },
                  "returnParameters": {
                    "id": 1501,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7609:0:8"
                  },
                  "scope": 1677,
                  "src": "7553:381:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1599,
                    "nodeType": "Block",
                    "src": "8103:499:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1549,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1544,
                            "src": "8113:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8123:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8113:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1556,
                        "nodeType": "IfStatement",
                        "src": "8109:54:8",
                        "trueBody": {
                          "id": 1555,
                          "nodeType": "Block",
                          "src": "8126:37:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1552,
                                  "name": "InvalidAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1160,
                                  "src": "8141:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1553,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8141:15:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1554,
                              "nodeType": "RevertStatement",
                              "src": "8134:22:8"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1558
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1558,
                            "mutability": "mutable",
                            "name": "contractBalance",
                            "nameLocation": "8214:15:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1599,
                            "src": "8206:23:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1557,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8206:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1566,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1563,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8260:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_USDCRewardContract_$1677",
                                    "typeString": "contract USDCRewardContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_USDCRewardContract_$1677",
                                    "typeString": "contract USDCRewardContract"
                                  }
                                ],
                                "id": 1562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8252:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1561,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8252:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8252:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1559,
                              "name": "usdcToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "8232:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$877",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8242:9:8",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 834,
                            "src": "8232:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8232:34:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8206:60:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1567,
                            "name": "contractBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1558,
                            "src": "8276:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1568,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1544,
                            "src": "8294:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8276:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1576,
                        "nodeType": "IfStatement",
                        "src": "8272:100:8",
                        "trueBody": {
                          "id": 1575,
                          "nodeType": "Block",
                          "src": "8302:70:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 1571,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1544,
                                    "src": "8341:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1572,
                                    "name": "contractBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1558,
                                    "src": "8349:15:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1570,
                                  "name": "InsufficientUSDCBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1154,
                                  "src": "8317:23:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (uint256,uint256) pure returns (error)"
                                  }
                                },
                                "id": 1573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8317:48:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1574,
                              "nodeType": "RevertStatement",
                              "src": "8310:55:8"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1578
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1578,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "8427:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1599,
                            "src": "8422:12:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1577,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "8422:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1585,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1581,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8456:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8460:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8456:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1583,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1544,
                              "src": "8468:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1579,
                              "name": "usdcToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "8437:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$877",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8447:8:8",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 844,
                            "src": "8437:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8437:38:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8422:53:8"
                      },
                      {
                        "condition": {
                          "id": 1587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "8485:8:8",
                          "subExpression": {
                            "id": 1586,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1578,
                            "src": "8486:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1594,
                        "nodeType": "IfStatement",
                        "src": "8481:84:8",
                        "trueBody": {
                          "id": 1593,
                          "nodeType": "Block",
                          "src": "8495:70:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 1589,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1544,
                                    "src": "8534:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1590,
                                    "name": "contractBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1558,
                                    "src": "8542:15:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1588,
                                  "name": "InsufficientUSDCBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1154,
                                  "src": "8510:23:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (uint256,uint256) pure returns (error)"
                                  }
                                },
                                "id": 1591,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8510:48:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1592,
                              "nodeType": "RevertStatement",
                              "src": "8503:55:8"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1596,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1544,
                              "src": "8590:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1595,
                            "name": "USDCWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1207,
                            "src": "8576:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8576:21:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1598,
                        "nodeType": "EmitStatement",
                        "src": "8571:26:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1542,
                    "nodeType": "StructuredDocumentation",
                    "src": "7938:105:8",
                    "text": "@dev Withdraws USDC from the contract (only owner)\n @param amount The amount of USDC to withdraw"
                  },
                  "functionSelector": "db81f99b",
                  "id": 1600,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1547,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1546,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "8093:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "8093:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8093:9:8"
                    }
                  ],
                  "name": "withdrawUSDC",
                  "nameLocation": "8055:12:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1545,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1544,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "8076:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1600,
                        "src": "8068:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1543,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8068:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8067:16:8"
                  },
                  "returnParameters": {
                    "id": 1548,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8103:0:8"
                  },
                  "scope": 1677,
                  "src": "8046:556:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1612,
                    "nodeType": "Block",
                    "src": "8866:46:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1606,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1024,
                            "src": "8872:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8872:8:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1608,
                        "nodeType": "ExpressionStatement",
                        "src": "8872:8:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1609,
                            "name": "ContractPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1210,
                            "src": "8891:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8891:16:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1611,
                        "nodeType": "EmitStatement",
                        "src": "8886:21:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1601,
                    "nodeType": "StructuredDocumentation",
                    "src": "8678:149:8",
                    "text": "@dev Pauses the contract (only owner)\n @notice When paused, user functions like claimUSDC are disabled, but admin functions remain available"
                  },
                  "functionSelector": "8456cb59",
                  "id": 1613,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1604,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1603,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "8856:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "8856:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8856:9:8"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "8839:5:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1602,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8844:2:8"
                  },
                  "returnParameters": {
                    "id": 1605,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8866:0:8"
                  },
                  "scope": 1677,
                  "src": "8830:82:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1625,
                    "nodeType": "Block",
                    "src": "9053:50:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1619,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1040,
                            "src": "9059:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9059:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1621,
                        "nodeType": "ExpressionStatement",
                        "src": "9059:10:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1622,
                            "name": "ContractUnpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1213,
                            "src": "9080:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9080:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1624,
                        "nodeType": "EmitStatement",
                        "src": "9075:23:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1614,
                    "nodeType": "StructuredDocumentation",
                    "src": "8916:96:8",
                    "text": "@dev Unpauses the contract (only owner)\n @notice Restores normal contract functionality"
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 1626,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1617,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1616,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "9043:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "9043:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9043:9:8"
                    }
                  ],
                  "name": "unpause",
                  "nameLocation": "9024:7:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1615,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9031:2:8"
                  },
                  "returnParameters": {
                    "id": 1618,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9053:0:8"
                  },
                  "scope": 1677,
                  "src": "9015:88:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1657,
                    "nodeType": "Block",
                    "src": "9388:188:8",
                    "statements": [
                      {
                        "assignments": [
                          1635
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1635,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "9399:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1657,
                            "src": "9394:12:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1634,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "9394:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1641,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1638,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1629,
                              "src": "9428:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1639,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1631,
                              "src": "9432:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1636,
                              "name": "usdcToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "9409:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$877",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9419:8:8",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 844,
                            "src": "9409:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9409:30:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9394:45:8"
                      },
                      {
                        "condition": {
                          "id": 1643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "9449:8:8",
                          "subExpression": {
                            "id": 1642,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1635,
                            "src": "9450:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1656,
                        "nodeType": "IfStatement",
                        "src": "9445:127:8",
                        "trueBody": {
                          "id": 1655,
                          "nodeType": "Block",
                          "src": "9459:113:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 1645,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1631,
                                    "src": "9507:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 1650,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "9551:4:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_USDCRewardContract_$1677",
                                              "typeString": "contract USDCRewardContract"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_USDCRewardContract_$1677",
                                              "typeString": "contract USDCRewardContract"
                                            }
                                          ],
                                          "id": 1649,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "9543:7:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 1648,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "9543:7:8",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1651,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9543:13:8",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1646,
                                        "name": "usdcToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1140,
                                        "src": "9523:9:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$877",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 1647,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "9533:9:8",
                                      "memberName": "balanceOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 834,
                                      "src": "9523:19:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view external returns (uint256)"
                                      }
                                    },
                                    "id": 1652,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9523:34:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1644,
                                  "name": "InsufficientUSDCBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1154,
                                  "src": "9474:23:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (uint256,uint256) pure returns (error)"
                                  }
                                },
                                "id": 1653,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9474:91:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1654,
                              "nodeType": "RevertStatement",
                              "src": "9467:98:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1627,
                    "nodeType": "StructuredDocumentation",
                    "src": "9174:152:8",
                    "text": "@dev Internal function to transfer USDC to a user\n @param to The address to transfer USDC to\n @param amount The amount of USDC to transfer"
                  },
                  "id": 1658,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferUSDC",
                  "nameLocation": "9338:13:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1632,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1629,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "9360:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1658,
                        "src": "9352:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1628,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9352:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1631,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "9372:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1658,
                        "src": "9364:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1630,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9364:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9351:28:8"
                  },
                  "returnParameters": {
                    "id": 1633,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9388:0:8"
                  },
                  "scope": 1677,
                  "src": "9329:247:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1675,
                    "nodeType": "Block",
                    "src": "9724:72:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1664,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1661,
                            "src": "9734:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9750:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9742:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1665,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9742:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9742:10:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9734:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1674,
                        "nodeType": "IfStatement",
                        "src": "9730:62:8",
                        "trueBody": {
                          "id": 1673,
                          "nodeType": "Block",
                          "src": "9754:38:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1670,
                                  "name": "InvalidAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1157,
                                  "src": "9769:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1671,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9769:16:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1672,
                              "nodeType": "RevertStatement",
                              "src": "9762:23:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1659,
                    "nodeType": "StructuredDocumentation",
                    "src": "9580:88:8",
                    "text": "@dev Validates that an address is not zero\n @param addr The address to validate"
                  },
                  "id": 1676,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_validateAddress",
                  "nameLocation": "9680:16:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1662,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1661,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "9705:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1676,
                        "src": "9697:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1660,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9697:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9696:14:8"
                  },
                  "returnParameters": {
                    "id": 1663,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9724:0:8"
                  },
                  "scope": 1677,
                  "src": "9671:125:8",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 1678,
              "src": "435:9363:8",
              "usedErrors": [
                13,
                18,
                955,
                958,
                1055,
                1147,
                1154,
                1157,
                1160,
                1163,
                1166,
                1169
              ],
              "usedEvents": [
                24,
                947,
                952,
                1176,
                1183,
                1188,
                1197,
                1202,
                1207,
                1210,
                1213
              ]
            }
          ],
          "src": "32:9766:8"
        },
        "id": 8
      },
      "contracts/mock/MockERC20.sol": {
        "ast": {
          "absolutePath": "contracts/mock/MockERC20.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "ERC20": [
              799
            ],
            "IERC20": [
              877
            ],
            "IERC20Errors": [
              189
            ],
            "IERC20Metadata": [
              903
            ],
            "MockERC20": [
              1749
            ]
          },
          "id": 1750,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1679,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:9"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 1680,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1750,
              "sourceUnit": 800,
              "src": "58:55:9",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1682,
                    "name": "ERC20",
                    "nameLocations": [
                      "211:5:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 799,
                    "src": "211:5:9"
                  },
                  "id": 1683,
                  "nodeType": "InheritanceSpecifier",
                  "src": "211:5:9"
                }
              ],
              "canonicalName": "MockERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1681,
                "nodeType": "StructuredDocumentation",
                "src": "115:73:9",
                "text": " @title MockERC20\n @dev Mock ERC20 token for testing purposes"
              },
              "fullyImplemented": true,
              "id": 1749,
              "linearizedBaseContracts": [
                1749,
                799,
                189,
                903,
                877,
                933
              ],
              "name": "MockERC20",
              "nameLocation": "198:9:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1685,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nameLocation": "235:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1749,
                  "src": "221:23:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1684,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "221:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1712,
                    "nodeType": "Block",
                    "src": "356:133:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1698,
                            "name": "_decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1685,
                            "src": "362:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1699,
                            "name": "decimals_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1691,
                            "src": "374:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "362:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 1701,
                        "nodeType": "ExpressionStatement",
                        "src": "362:21:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1703,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "446:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "450:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "446:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "31303030303030",
                                "id": 1705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "458:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                },
                                "value": "1000000"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1708,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 1706,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "468:2:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "id": 1707,
                                  "name": "decimals_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1691,
                                  "src": "474:9:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "468:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "458:25:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1702,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "440:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "440:44:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1711,
                        "nodeType": "ExpressionStatement",
                        "src": "440:44:9"
                      }
                    ]
                  },
                  "id": 1713,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1694,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1687,
                          "src": "342:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 1695,
                          "name": "symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1689,
                          "src": "348:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "id": 1696,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1693,
                        "name": "ERC20",
                        "nameLocations": [
                          "336:5:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 799,
                        "src": "336:5:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "336:19:9"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1692,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1687,
                        "mutability": "mutable",
                        "name": "name",
                        "nameLocation": "280:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1713,
                        "src": "266:18:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1686,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "266:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1689,
                        "mutability": "mutable",
                        "name": "symbol",
                        "nameLocation": "304:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1713,
                        "src": "290:20:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1688,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "290:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1691,
                        "mutability": "mutable",
                        "name": "decimals_",
                        "nameLocation": "322:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1713,
                        "src": "316:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1690,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "316:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "260:75:9"
                  },
                  "returnParameters": {
                    "id": 1697,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "356:0:9"
                  },
                  "scope": 1749,
                  "src": "249:240:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    363
                  ],
                  "body": {
                    "id": 1721,
                    "nodeType": "Block",
                    "src": "558:27:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1719,
                          "name": "_decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1685,
                          "src": "571:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 1718,
                        "id": 1720,
                        "nodeType": "Return",
                        "src": "564:16:9"
                      }
                    ]
                  },
                  "functionSelector": "313ce567",
                  "id": 1722,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "502:8:9",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1715,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "533:8:9"
                  },
                  "parameters": {
                    "id": 1714,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "510:2:9"
                  },
                  "returnParameters": {
                    "id": 1718,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1717,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1722,
                        "src": "551:5:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1716,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "551:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "550:7:9"
                  },
                  "scope": 1749,
                  "src": "493:92:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1734,
                    "nodeType": "Block",
                    "src": "638:28:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1730,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1724,
                              "src": "650:2:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1731,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1726,
                              "src": "654:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1729,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "644:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "644:17:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1733,
                        "nodeType": "ExpressionStatement",
                        "src": "644:17:9"
                      }
                    ]
                  },
                  "functionSelector": "40c10f19",
                  "id": 1735,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "598:4:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1727,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1724,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "611:2:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1735,
                        "src": "603:10:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1723,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "603:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1726,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "623:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1735,
                        "src": "615:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1725,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "615:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "602:28:9"
                  },
                  "returnParameters": {
                    "id": 1728,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "638:0:9"
                  },
                  "scope": 1749,
                  "src": "589:77:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1747,
                    "nodeType": "Block",
                    "src": "721:30:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1743,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1737,
                              "src": "733:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1744,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1739,
                              "src": "739:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1742,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 672,
                            "src": "727:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "727:19:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1746,
                        "nodeType": "ExpressionStatement",
                        "src": "727:19:9"
                      }
                    ]
                  },
                  "functionSelector": "9dc29fac",
                  "id": 1748,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nameLocation": "679:4:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1740,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1737,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "692:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1748,
                        "src": "684:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1736,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1739,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "706:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1748,
                        "src": "698:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1738,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "698:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "683:30:9"
                  },
                  "returnParameters": {
                    "id": 1741,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "721:0:9"
                  },
                  "scope": 1749,
                  "src": "670:81:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1750,
              "src": "189:564:9",
              "usedErrors": [
                159,
                164,
                169,
                178,
                183,
                188
              ],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "32:722:9"
        },
        "id": 9
      },
      "contracts/mock/Storage.sol": {
        "ast": {
          "absolutePath": "contracts/mock/Storage.sol",
          "exportedSymbols": {
            "Storage": [
              1775
            ]
          },
          "id": 1776,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1751,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".24"
              ],
              "nodeType": "PragmaDirective",
              "src": "36:24:10"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Storage",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1752,
                "nodeType": "StructuredDocumentation",
                "src": "62:106:10",
                "text": " @title サンプル用コントラクト　Storage\n @dev Store & retrieve value in a variable"
              },
              "fullyImplemented": true,
              "id": 1775,
              "linearizedBaseContracts": [
                1775
              ],
              "name": "Storage",
              "nameLocation": "178:7:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1754,
                  "mutability": "mutable",
                  "name": "number",
                  "nameLocation": "201:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1775,
                  "src": "193:14:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "193:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1764,
                    "nodeType": "Block",
                    "src": "334:29:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1760,
                            "name": "number",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1754,
                            "src": "344:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1761,
                            "name": "num",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1757,
                            "src": "353:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "344:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1763,
                        "nodeType": "ExpressionStatement",
                        "src": "344:12:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1755,
                    "nodeType": "StructuredDocumentation",
                    "src": "214:80:10",
                    "text": " @dev Store value in variable\n @param num value to store"
                  },
                  "functionSelector": "6057361d",
                  "id": 1765,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "store",
                  "nameLocation": "308:5:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1758,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1757,
                        "mutability": "mutable",
                        "name": "num",
                        "nameLocation": "322:3:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1765,
                        "src": "314:11:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1756,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "314:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "313:13:10"
                  },
                  "returnParameters": {
                    "id": 1759,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "334:0:10"
                  },
                  "scope": 1775,
                  "src": "299:64:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1773,
                    "nodeType": "Block",
                    "src": "493:30:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1771,
                          "name": "number",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1754,
                          "src": "510:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1770,
                        "id": 1772,
                        "nodeType": "Return",
                        "src": "503:13:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1766,
                    "nodeType": "StructuredDocumentation",
                    "src": "369:70:10",
                    "text": " @dev Return value \n @return value of 'number'"
                  },
                  "functionSelector": "2e64cec1",
                  "id": 1774,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "retrieve",
                  "nameLocation": "453:8:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1767,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "461:2:10"
                  },
                  "returnParameters": {
                    "id": 1770,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1769,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1774,
                        "src": "485:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1768,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "485:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "484:9:10"
                  },
                  "scope": 1775,
                  "src": "444:79:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1776,
              "src": "169:356:10",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "36:489:10"
        },
        "id": 10
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"
        }
      },
      "contracts/USDCRewardContract.sol": {
        "USDCRewardContract": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_usdcToken",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "ContractIsPaused",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExchangeRateNotSet",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "required",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "available",
                  "type": "uint256"
                }
              ],
              "name": "InsufficientPoints",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "required",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "available",
                  "type": "uint256"
                }
              ],
              "name": "InsufficientUSDCBalance",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidAddress",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidAmount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Unauthorized",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [],
              "name": "ContractPaused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [],
              "name": "ContractUnpaused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newRate",
                  "type": "uint256"
                }
              ],
              "name": "ExchangeRateSet",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "PointsAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "PointsRemoved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "pointsUsed",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "usdcAmount",
                  "type": "uint256"
                }
              ],
              "name": "USDCClaimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "USDCDeposited",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "USDCWithdrawn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "addPoints",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "pointAmount",
                  "type": "uint256"
                }
              ],
              "name": "calculateUSDCAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "pointAmount",
                  "type": "uint256"
                }
              ],
              "name": "claimUSDC",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "depositUSDC",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getPointBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getTotalClaimedPoints",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                }
              ],
              "name": "setExchangeRate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "subtractPoints",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawUSDC",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 204,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_address_fromMemory": {
                  "entryPoint": 219,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": 780,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple": {
                  "entryPoint": 329,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 793,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 134,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 52,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": 171,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_address": {
                  "entryPoint": 906,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": 696,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by": {
                  "entryPoint": 283,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 160,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": 467,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "constant_NOT_ENTERED": {
                  "entryPoint": 727,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "constructor_Ownable": {
                  "entryPoint": 815,
                  "id": 50,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "constructor_Pausable": {
                  "entryPoint": 769,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "constructor_ReentrancyGuard": {
                  "entryPoint": 740,
                  "id": 1063,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "constructor_USDCRewardContract": {
                  "entryPoint": 584,
                  "id": 1245,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "convert_address_to_address": {
                  "entryPoint": 962,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_contract_IERC20": {
                  "entryPoint": 375,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_IERC20_to_contract_IERC20": {
                  "entryPoint": 420,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 317,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 289,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": 699,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_rational_by_to_t_uint256": {
                  "entryPoint": 470,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 950,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_contract_IERC20": {
                  "entryPoint": 363,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 335,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 521,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_arguments_for_constructor_object_USDCRewardContract": {
                  "entryPoint": 250,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_address": {
                  "entryPoint": 917,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 95,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_transferOwnership": {
                  "entryPoint": 1009,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": 286,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 73,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": 974,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_contract_IERC20": {
                  "entryPoint": 432,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint256": {
                  "entryPoint": 549,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": 937,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 58,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 155,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 63,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 387,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": 900,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 498,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_0": {
                  "entryPoint": 393,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_address_to_address": {
                  "entryPoint": 977,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_contract_IERC20_to_contract_IERC20": {
                  "entryPoint": 435,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_uint256_to_uint256": {
                  "entryPoint": 552,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 183,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040523461002f576100196100146100fa565b610248565b610021610034565b6118fc61045382396118fc90f35b61003a565b60405190565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b906100699061003f565b810190811060018060401b0382111761008157604052565b610049565b90610099610092610034565b928361005f565b565b600080fd5b60018060a01b031690565b6100b4906100a0565b90565b6100c0816100ab565b036100c757565b600080fd5b905051906100d9826100b7565b565b906020828203126100f5576100f2916000016100cc565b90565b61009b565b610118611d4f8038038061010d81610086565b9283398101906100db565b90565b90565b90565b61013561013061013a9261011b565b61011e565b6100a0565b90565b61014690610121565b90565b60000190565b61016361015e610168926100a0565b61011e565b6100a0565b90565b6101749061014f565b90565b6101809061016b565b90565b60001b90565b9061019a60018060a01b0391610183565b9181191691161790565b6101ad9061016b565b90565b90565b906101c86101c36101cf926101a4565b6101b0565b8254610189565b9055565b90565b6101ea6101e56101ef9261011b565b61011e565b6101d3565b90565b906101ff60001991610183565b9181191691161790565b61021d610218610222926101d3565b61011e565b6101d3565b90565b90565b9061023d61023861024492610209565b610225565b82546101f2565b9055565b610251336102e4565b8061026d610267610262600061013d565b6100ab565b916100ab565b1461029b5761027e61028591610177565b60056101b3565b61029961029260006101d6565b6004610228565b565b600063e6c4247b60e01b8152806102b460048201610149565b0390fd5b90565b6102cf6102ca6102d4926102b8565b61011e565b6101d3565b90565b6102e160016102bb565b90565b6102ed90610301565b6102ff6102f86102d7565b6001610228565b565b61030a9061032f565b565b610315906100ab565b9052565b919061032d9060006020850194019061030c565b565b8061034b610345610340600061013d565b6100ab565b916100ab565b1461035b57610359906103f1565b565b610380610368600061013d565b6000918291631e4fbdf760e01b835260048301610319565b0390fd5b60001c90565b60018060a01b031690565b6103a16103a691610384565b61038a565b90565b6103b39054610395565b90565b6103bf9061014f565b90565b6103cb906103b6565b90565b90565b906103e66103e16103ed926103c2565b6103ce565b8254610189565b9055565b6103fb60006103a9565b6104068260006103d1565b9061043a6104347f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0936103c2565b916103c2565b91610443610034565b8061044d81610149565b0390a356fe60806040526004361015610013575b61057e565b61001e60003561010d565b80631e2393ea146101085780633f4ba83a146101035780634a222b35146100fe5780634cabb824146100f9578063507cd30f146100f45780635c975abb146100ef5780635f42513c146100ea5780636e5f4a89146100e5578063715018a6146100e05780638456cb59146100db5780638da5cb5b146100d6578063db068e0e146100d1578063db81f99b146100cc578063f2fde38b146100c75763f688bcfb0361000e5761054b565b610518565b6104e5565b6104b2565b61047d565b610427565b6103f4565b6103c1565b61038c565b610357565b6102fb565b6102c6565b610273565b6101ee565b6101a3565b60e01c90565b60405190565b600080fd5b600080fd5b60018060a01b031690565b61013790610123565b90565b6101438161012e565b0361014a57565b600080fd5b9050359061015c8261013a565b565b90602082820312610178576101759160000161014f565b90565b61011e565b90565b6101899061017d565b9052565b91906101a190600060208501940190610180565b565b346101d3576101cf6101be6101b936600461015e565b610601565b6101c6610113565b9182918261018d565b0390f35b610119565b60009103126101e357565b61011e565b60000190565b3461021c576101fe3660046101d8565b610206610672565b61020e610113565b80610218816101e8565b0390f35b610119565b61022a8161017d565b0361023157565b600080fd5b9050359061024382610221565b565b919060408382031261026e578061026261026b926000860161014f565b93602001610236565b90565b61011e565b346102a25761028c610286366004610245565b90610862565b610294610113565b8061029e816101e8565b0390f35b610119565b906020828203126102c1576102be91600001610236565b90565b61011e565b346102f6576102f26102e16102dc3660046102a7565b6108a3565b6102e9610113565b9182918261018d565b0390f35b610119565b3461032a5761031461030e366004610245565b906109d7565b61031c610113565b80610326816101e8565b0390f35b610119565b151590565b61033d9061032f565b9052565b919061035590600060208501940190610334565b565b34610387576103673660046101d8565b610383610372610a15565b61037a610113565b91829182610341565b0390f35b610119565b346103bc576103b86103a76103a236600461015e565b610a2b565b6103af610113565b9182918261018d565b0390f35b610119565b346103ef576103d96103d43660046102a7565b610d95565b6103e1610113565b806103eb816101e8565b0390f35b610119565b34610422576104043660046101d8565b61040c610dee565b610414610113565b8061041e816101e8565b0390f35b610119565b34610455576104373660046101d8565b61043f610e4a565b610447610113565b80610451816101e8565b0390f35b610119565b6104639061012e565b9052565b919061047b9060006020850194019061045a565b565b346104ad5761048d3660046101d8565b6104a9610498610e85565b6104a0610113565b91829182610467565b0390f35b610119565b346104e0576104ca6104c53660046102a7565b610ef4565b6104d2610113565b806104dc816101e8565b0390f35b610119565b34610513576104fd6104f83660046102a7565b61116c565b610505610113565b8061050f816101e8565b0390f35b610119565b346105465761053061052b36600461015e565b6111df565b610538610113565b80610542816101e8565b0390f35b610119565b346105795761056361055e3660046102a7565b6113ed565b61056b610113565b80610575816101e8565b0390f35b610119565b600080fd5b600090565b90565b61059f61059a6105a492610123565b610588565b610123565b90565b6105b09061058b565b90565b6105bc906105a7565b90565b906105c9906105b3565b600052602052604060002090565b60001c90565b90565b6105ec6105f1916105d7565b6105dd565b90565b6105fe90546105e0565b90565b61061861061d91610610610583565b5060036105bf565b6105f4565b90565b6106286113f8565b610630610632565b565b61063a6114f5565b7f0e5e3b3fb504c22cf5c42fa07d521225937514c654007e1f12646f89768d6f94610663610113565b8061066d816101e8565b0390a1565b61067a610620565b565b9061068e916106896113f8565b61076a565b565b90565b6106a76106a26106ac92610690565b610588565b61017d565b90565b9160206106d19294936106ca60408201966000830190610180565b0190610180565b565b634e487b7160e01b600052601160045260246000fd5b6106f86106fe9193929361017d565b9261017d565b820391821161070957565b6106d3565b60001b90565b906107216000199161070e565b9181191691161790565b61073f61073a6107449261017d565b610588565b61017d565b90565b90565b9061075f61075a6107669261072b565b610747565b8254610714565b9055565b610773816114ff565b816107876107816000610693565b9161017d565b14610845576107a061079b600283906105bf565b6105f4565b806107b36107ad8561017d565b9161017d565b1061082557506107e1826107db6107cc600285906105bf565b916107d6836105f4565b6106e9565b9061074a565b61082061080e7ff9352367bd3be481e8f66e7940f6ea5b57fea7504271b1f2863a535443fd2bab926105b3565b92610817610113565b9182918261018d565b0390a2565b826108416000928392638059c74760e01b8452600484016106af565b0390fd5b600063162908e360e11b81528061085e600482016101e8565b0390fd5b9061086c9161067c565b565b61087d6108839193929361017d565b9261017d565b9161088f83820261017d565b92818404149015171561089e57565b6106d3565b6108ab610583565b506108b660046105f4565b6108c96108c36000610693565b9161017d565b146108e5576108e2906108dc60046105f4565b9061086e565b90565b506108f06000610693565b90565b90610905916109006113f8565b61092c565b565b61091661091c9193929361017d565b9261017d565b820180921161092757565b6106d3565b610935816114ff565b816109496109436000610693565b9161017d565b146109ba5761097682610970610961600285906105bf565b9161096b836105f4565b610907565b9061074a565b6109b56109a37f0fe6fcb45adaaa54f7e3491f6a7964049817f1e437f33587e634a4629fbcf3a6926105b3565b926109ac610113565b9182918261018d565b0390a2565b600063162908e360e11b8152806109d3600482016101e8565b0390fd5b906109e1916108f3565b565b600090565b60a01c90565b60ff1690565b610a00610a05916109e8565b6109ee565b90565b610a1290546109f4565b90565b610a1d6109e3565b50610a286000610a08565b90565b610a42610a4791610a3a610583565b5060026105bf565b6105f4565b90565b610a5b90610a5661153e565b610a5d565b565b610a6e90610a69611595565b610b4a565b610a7661161a565b565b60018060a01b031690565b610a8f610a94916105d7565b610a78565b90565b610aa19054610a83565b90565b610aad906105a7565b90565b610ab9906105a7565b90565b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b90610ae690610abc565b810190811067ffffffffffffffff821117610b0057604052565b610ac6565b60e01b90565b90505190610b1882610221565b565b90602082820312610b3457610b3191600001610b0b565b90565b61011e565b610b41610113565b3d6000823e3d90fd5b610b53336114ff565b80610b67610b616000610693565b9161017d565b14610d7857610b7660046105f4565b610b89610b836000610693565b9161017d565b14610d5b57610ba2610b9d600233906105bf565b6105f4565b80610bb5610baf8461017d565b9161017d565b10610d3b5750610bcf81610bc960046105f4565b9061086e565b90610c196020610be7610be26005610a97565b610aa4565b6370a0823190610c0e610bf930610ab0565b92610c02610113565b95869485938493610b05565b835260048301610467565b03915afa908115610d3657600091610d08575b5080610c40610c3a8561017d565b9161017d565b10610ce85750610c6e81610c68610c59600233906105bf565b91610c63836105f4565b6106e9565b9061074a565b610c9681610c90610c81600333906105bf565b91610c8b836105f4565b610907565b9061074a565b610ca133839061162e565b339091610cce7feb9a8c68a32bc6989217e69f932cf098ff5d0e2f11305800394c73b554d2ce9e926105b3565b92610ce3610cda610113565b928392836106af565b0390a2565b82610d046000928392630722f6b360e11b8452600484016106af565b0390fd5b610d29915060203d8111610d2f575b610d218183610adc565b810190610b1a565b38610c2c565b503d610d17565b610b39565b90610d576000928392638059c74760e01b8452600484016106af565b0390fd5b60006362f216e560e01b815280610d74600482016101e8565b0390fd5b600063162908e360e11b815280610d91600482016101e8565b0390fd5b610d9e90610a4a565b565b610da86113f8565b610db0610dda565b565b610dc6610dc1610dcb92610690565b610588565b610123565b90565b610dd790610db2565b90565b610dec610de76000610dce565b6117b9565b565b610df6610da0565b565b610e006113f8565b610e08610e0a565b565b610e1261187b565b7fab35696f06e428ebc5ceba8cd17f8fed287baf43440206d1943af1ee53e6d267610e3b610113565b80610e45816101e8565b0390a1565b610e52610df8565b565b600090565b60018060a01b031690565b610e70610e75916105d7565b610e59565b90565b610e829054610e64565b90565b610e8d610e54565b50610e986000610e78565b90565b610eac90610ea76113f8565b610eae565b565b610eb981600461074a565b610eef7f972aba470577c14606bbf4bbdec1fed4925f242fcef40b4a8d242983365d029191610ee6610113565b9182918261018d565b0390a1565b610efd90610e9b565b565b610f1090610f0b6113f8565b610f79565b565b610f1b8161032f565b03610f2257565b600080fd5b90505190610f3482610f12565b565b90602082820312610f5057610f4d91600001610f27565b90565b61011e565b916020610f77929493610f706040820196600083019061045a565b0190610180565b565b80610f8d610f876000610693565b9161017d565b1461114f57610fdb6020610fa9610fa46005610a97565b610aa4565b6370a0823190610fd0610fbb30610ab0565b92610fc4610113565b95869485938493610b05565b835260048301610467565b03915afa90811561114a5760009161111c575b5080611002610ffc8461017d565b9161017d565b106110fc576110196110146005610a97565b610aa4565b602063a9059cbb9133906110416000879561104c611035610113565b97889687958694610b05565b845260048401610f55565b03925af180156110f757611069916000916110c9575b501561032f565b6110a957506110a47f4eacc637a5fb1dbbc94595a9432e0a8d75ae5d51d189021963a6cc8575465ddf9161109b610113565b9182918261018d565b0390a1565b906110c56000928392630722f6b360e11b8452600484016106af565b0390fd5b6110ea915060203d81116110f0575b6110e28183610adc565b810190610f36565b38611062565b503d6110d8565b610b39565b906111186000928392630722f6b360e11b8452600484016106af565b0390fd5b61113d915060203d8111611143575b6111358183610adc565b810190610b1a565b38610fee565b503d61112b565b610b39565b600063162908e360e11b815280611168600482016101e8565b0390fd5b61117590610eff565b565b611188906111836113f8565b61118a565b565b806111a66111a061119b6000610dce565b61012e565b9161012e565b146111b6576111b4906117b9565b565b6111db6111c36000610dce565b6000918291631e4fbdf760e01b835260048301610467565b0390fd5b6111e890611177565b565b6111fb906111f66113f8565b611230565b565b60409061122761122e949695939661121d6060840198600085019061045a565b602083019061045a565b0190610180565b565b8061124461123e6000610693565b9161017d565b146113d05761125b6112566005610a97565b610aa4565b60206323b872dd91339061128c600061127330610ab0565b9561129788611280610113565b98899788968795610b05565b8552600485016111fd565b03925af180156113cb576112b49160009161139d575b501561032f565b6112f3576112ee7f0f920186940a9c60ff07b508b49ba5dca2c647b29aebfa69964b44e5e873a62c916112e5610113565b9182918261018d565b0390a1565b61133590602061130b6113066005610a97565b610aa4565b6370a082319061132a339261131e610113565b96879485938493610b05565b835260048301610467565b03915afa91821561139857600092611368575b506113646000928392630722f6b360e11b8452600484016106af565b0390fd5b61138a91925060203d8111611391575b6113828183610adc565b810190610b1a565b9082611348565b503d611378565b610b39565b6113be915060203d81116113c4575b6113b68183610adc565b810190610f36565b386112ad565b503d6113ac565b610b39565b600063162908e360e11b8152806113e9600482016101e8565b0390fd5b6113f6906111ea565b565b611400610e85565b61141961141361140e611885565b61012e565b9161012e565b0361142057565b61144361142b611885565b600091829163118cdaa760e01b835260048301610467565b0390fd5b61144f611892565b6114576114a7565b565b60a01b90565b9061146e60ff60a01b91611459565b9181191691161790565b6114819061032f565b90565b90565b9061149c6114976114a392611478565b611484565b825461145f565b9055565b6114b2600080611487565b6114ba611885565b6114f07f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa916114e7610113565b91829182610467565b0390a1565b6114fd611447565b565b61151a61151461150f6000610dce565b61012e565b9161012e565b1461152157565b600063e6c4247b60e01b81528061153a600482016101e8565b0390fd5b611546610a15565b61154c57565b600063d93c066560e01b815280611565600482016101e8565b0390fd5b90565b61158061157b61158592611569565b610588565b61017d565b90565b611592600261156c565b90565b61159f60016105f4565b6115b86115b26115ad611588565b61017d565b9161017d565b146115d1576115cf6115c8611588565b600161074a565b565b6000633ee5aeb560e01b8152806115ea600482016101e8565b0390fd5b90565b61160561160061160a926115ee565b610588565b61017d565b90565b61161760016115f1565b90565b61162c61162561160d565b600161074a565b565b602061164261163d6005610a97565b610aa4565b63a9059cbb92906116676000869561167261165b610113565b97889687958694610b05565b845260048401610f55565b03925af180156117765761168f91600091611748575b501561032f565b6116965750565b6116e09060206116ae6116a96005610a97565b610aa4565b6370a08231906116d56116c030610ab0565b926116c9610113565b96879485938493610b05565b835260048301610467565b03915afa91821561174357600092611713575b5061170f6000928392630722f6b360e11b8452600484016106af565b0390fd5b61173591925060203d811161173c575b61172d8183610adc565b810190610b1a565b90826116f3565b503d611723565b610b39565b611769915060203d811161176f575b6117618183610adc565b810190610f36565b38611688565b503d611757565b610b39565b9061178c60018060a01b039161070e565b9181191691161790565b90565b906117ae6117a96117b5926105b3565b611796565b825461177b565b9055565b6117c36000610e78565b6117ce826000611799565b906118026117fc7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0936105b3565b916105b3565b9161180b610113565b80611815816101e8565b0390a3565b61182261153e565b61182a61182c565b565b61183860016000611487565b611840611885565b6118767f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589161186d610113565b91829182610467565b0390a1565b61188361181a565b565b61188d610e54565b503390565b6118a361189d610a15565b1561032f565b6118a957565b6000638dfc202b60e01b8152806118c2600482016101e8565b0390fdfea2646970667358221220a58b8c83160a8460330dd00a70fd0986bd66994083215a0d4939d1603b3a436064736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x2F JUMPI PUSH2 0x19 PUSH2 0x14 PUSH2 0xFA JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST PUSH2 0x21 PUSH2 0x34 JUMP JUMPDEST PUSH2 0x18FC PUSH2 0x453 DUP3 CODECOPY PUSH2 0x18FC SWAP1 RETURN JUMPDEST PUSH2 0x3A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x69 SWAP1 PUSH2 0x3F JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x81 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST SWAP1 PUSH2 0x99 PUSH2 0x92 PUSH2 0x34 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x5F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xB4 SWAP1 PUSH2 0xA0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC0 DUP2 PUSH2 0xAB JUMP JUMPDEST SUB PUSH2 0xC7 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xD9 DUP3 PUSH2 0xB7 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF5 JUMPI PUSH2 0xF2 SWAP2 PUSH1 0x0 ADD PUSH2 0xCC JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1D4F DUP1 CODESIZE SUB DUP1 PUSH2 0x10D DUP2 PUSH2 0x86 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0xDB JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x130 PUSH2 0x13A SWAP3 PUSH2 0x11B JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH2 0xA0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x146 SWAP1 PUSH2 0x121 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x15E PUSH2 0x168 SWAP3 PUSH2 0xA0 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH2 0xA0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x174 SWAP1 PUSH2 0x14F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x180 SWAP1 PUSH2 0x16B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x19A PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x1AD SWAP1 PUSH2 0x16B JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1C8 PUSH2 0x1C3 PUSH2 0x1CF SWAP3 PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0x1B0 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x189 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x1E5 PUSH2 0x1EF SWAP3 PUSH2 0x11B JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1FF PUSH1 0x0 NOT SWAP2 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x21D PUSH2 0x218 PUSH2 0x222 SWAP3 PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x23D PUSH2 0x238 PUSH2 0x244 SWAP3 PUSH2 0x209 JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1F2 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x251 CALLER PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH2 0x26D PUSH2 0x267 PUSH2 0x262 PUSH1 0x0 PUSH2 0x13D JUMP JUMPDEST PUSH2 0xAB JUMP JUMPDEST SWAP2 PUSH2 0xAB JUMP JUMPDEST EQ PUSH2 0x29B JUMPI PUSH2 0x27E PUSH2 0x285 SWAP2 PUSH2 0x177 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x1B3 JUMP JUMPDEST PUSH2 0x299 PUSH2 0x292 PUSH1 0x0 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x228 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x2B4 PUSH1 0x4 DUP3 ADD PUSH2 0x149 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x2CA PUSH2 0x2D4 SWAP3 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2E1 PUSH1 0x1 PUSH2 0x2BB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2ED SWAP1 PUSH2 0x301 JUMP JUMPDEST PUSH2 0x2FF PUSH2 0x2F8 PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x228 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x30A SWAP1 PUSH2 0x32F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x315 SWAP1 PUSH2 0xAB JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x32D SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x30C JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x34B PUSH2 0x345 PUSH2 0x340 PUSH1 0x0 PUSH2 0x13D JUMP JUMPDEST PUSH2 0xAB JUMP JUMPDEST SWAP2 PUSH2 0xAB JUMP JUMPDEST EQ PUSH2 0x35B JUMPI PUSH2 0x359 SWAP1 PUSH2 0x3F1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x380 PUSH2 0x368 PUSH1 0x0 PUSH2 0x13D JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x319 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x3A1 PUSH2 0x3A6 SWAP2 PUSH2 0x384 JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3B3 SWAP1 SLOAD PUSH2 0x395 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3BF SWAP1 PUSH2 0x14F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3CB SWAP1 PUSH2 0x3B6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3E6 PUSH2 0x3E1 PUSH2 0x3ED SWAP3 PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST DUP3 SLOAD PUSH2 0x189 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3FB PUSH1 0x0 PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x406 DUP3 PUSH1 0x0 PUSH2 0x3D1 JUMP JUMPDEST SWAP1 PUSH2 0x43A PUSH2 0x434 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x3C2 JUMP JUMPDEST SWAP2 PUSH2 0x3C2 JUMP JUMPDEST SWAP2 PUSH2 0x443 PUSH2 0x34 JUMP JUMPDEST DUP1 PUSH2 0x44D DUP2 PUSH2 0x149 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0x10D JUMP JUMPDEST DUP1 PUSH4 0x1E2393EA EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x4A222B35 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x4CABB824 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x507CD30F EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x5F42513C EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x6E5F4A89 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0xDB068E0E EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0xDB81F99B EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC7 JUMPI PUSH4 0xF688BCFB SUB PUSH2 0xE JUMPI PUSH2 0x54B JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x47D JUMP JUMPDEST PUSH2 0x427 JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST PUSH2 0x38C JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH2 0x2FB JUMP JUMPDEST PUSH2 0x2C6 JUMP JUMPDEST PUSH2 0x273 JUMP JUMPDEST PUSH2 0x1EE JUMP JUMPDEST PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x137 SWAP1 PUSH2 0x123 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x143 DUP2 PUSH2 0x12E JUMP JUMPDEST SUB PUSH2 0x14A JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x15C DUP3 PUSH2 0x13A JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x178 JUMPI PUSH2 0x175 SWAP2 PUSH1 0x0 ADD PUSH2 0x14F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x189 SWAP1 PUSH2 0x17D JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1A1 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x180 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x1D3 JUMPI PUSH2 0x1CF PUSH2 0x1BE PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x1E3 JUMPI JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x21C JUMPI PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x206 PUSH2 0x672 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x218 DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST PUSH2 0x22A DUP2 PUSH2 0x17D JUMP JUMPDEST SUB PUSH2 0x231 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x243 DUP3 PUSH2 0x221 JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x26E JUMPI DUP1 PUSH2 0x262 PUSH2 0x26B SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x14F JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x236 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST CALLVALUE PUSH2 0x2A2 JUMPI PUSH2 0x28C PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x245 JUMP JUMPDEST SWAP1 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x294 PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x29E DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x2C1 JUMPI PUSH2 0x2BE SWAP2 PUSH1 0x0 ADD PUSH2 0x236 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST CALLVALUE PUSH2 0x2F6 JUMPI PUSH2 0x2F2 PUSH2 0x2E1 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0x2E9 PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH2 0x314 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x245 JUMP JUMPDEST SWAP1 PUSH2 0x9D7 JUMP JUMPDEST PUSH2 0x31C PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x326 DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x33D SWAP1 PUSH2 0x32F JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x355 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x334 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x387 JUMPI PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x383 PUSH2 0x372 PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x37A PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x341 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST CALLVALUE PUSH2 0x3BC JUMPI PUSH2 0x3B8 PUSH2 0x3A7 PUSH2 0x3A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E JUMP JUMPDEST PUSH2 0xA2B JUMP JUMPDEST PUSH2 0x3AF PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST CALLVALUE PUSH2 0x3EF JUMPI PUSH2 0x3D9 PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0xD95 JUMP JUMPDEST PUSH2 0x3E1 PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x3EB DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST CALLVALUE PUSH2 0x422 JUMPI PUSH2 0x404 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x40C PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x414 PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x41E DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST CALLVALUE PUSH2 0x455 JUMPI PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x43F PUSH2 0xE4A JUMP JUMPDEST PUSH2 0x447 PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x451 DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST PUSH2 0x463 SWAP1 PUSH2 0x12E JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x47B SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x45A JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x4AD JUMPI PUSH2 0x48D CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x4A9 PUSH2 0x498 PUSH2 0xE85 JUMP JUMPDEST PUSH2 0x4A0 PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x467 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST CALLVALUE PUSH2 0x4E0 JUMPI PUSH2 0x4CA PUSH2 0x4C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0x4D2 PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x4DC DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST CALLVALUE PUSH2 0x513 JUMPI PUSH2 0x4FD PUSH2 0x4F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0x116C JUMP JUMPDEST PUSH2 0x505 PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x50F DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST CALLVALUE PUSH2 0x546 JUMPI PUSH2 0x530 PUSH2 0x52B CALLDATASIZE PUSH1 0x4 PUSH2 0x15E JUMP JUMPDEST PUSH2 0x11DF JUMP JUMPDEST PUSH2 0x538 PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x542 DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST CALLVALUE PUSH2 0x579 JUMPI PUSH2 0x563 PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0x13ED JUMP JUMPDEST PUSH2 0x56B PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x575 DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x59F PUSH2 0x59A PUSH2 0x5A4 SWAP3 PUSH2 0x123 JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH2 0x123 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x5B0 SWAP1 PUSH2 0x58B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x5BC SWAP1 PUSH2 0x5A7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x5C9 SWAP1 PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x5EC PUSH2 0x5F1 SWAP2 PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x5FE SWAP1 SLOAD PUSH2 0x5E0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x618 PUSH2 0x61D SWAP2 PUSH2 0x610 PUSH2 0x583 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x628 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0x630 PUSH2 0x632 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x63A PUSH2 0x14F5 JUMP JUMPDEST PUSH32 0xE5E3B3FB504C22CF5C42FA07D521225937514C654007E1F12646F89768D6F94 PUSH2 0x663 PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x66D DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x67A PUSH2 0x620 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x68E SWAP2 PUSH2 0x689 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0x76A JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6A7 PUSH2 0x6A2 PUSH2 0x6AC SWAP3 PUSH2 0x690 JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH2 0x17D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x6D1 SWAP3 SWAP5 SWAP4 PUSH2 0x6CA PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x180 JUMP JUMPDEST ADD SWAP1 PUSH2 0x180 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x6F8 PUSH2 0x6FE SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x17D JUMP JUMPDEST SWAP3 PUSH2 0x17D JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0x709 JUMPI JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x721 PUSH1 0x0 NOT SWAP2 PUSH2 0x70E JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x73F PUSH2 0x73A PUSH2 0x744 SWAP3 PUSH2 0x17D JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH2 0x17D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x75F PUSH2 0x75A PUSH2 0x766 SWAP3 PUSH2 0x72B JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x714 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x773 DUP2 PUSH2 0x14FF JUMP JUMPDEST DUP2 PUSH2 0x787 PUSH2 0x781 PUSH1 0x0 PUSH2 0x693 JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST EQ PUSH2 0x845 JUMPI PUSH2 0x7A0 PUSH2 0x79B PUSH1 0x2 DUP4 SWAP1 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST DUP1 PUSH2 0x7B3 PUSH2 0x7AD DUP6 PUSH2 0x17D JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST LT PUSH2 0x825 JUMPI POP PUSH2 0x7E1 DUP3 PUSH2 0x7DB PUSH2 0x7CC PUSH1 0x2 DUP6 SWAP1 PUSH2 0x5BF JUMP JUMPDEST SWAP2 PUSH2 0x7D6 DUP4 PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST SWAP1 PUSH2 0x74A JUMP JUMPDEST PUSH2 0x820 PUSH2 0x80E PUSH32 0xF9352367BD3BE481E8F66E7940F6EA5B57FEA7504271B1F2863A535443FD2BAB SWAP3 PUSH2 0x5B3 JUMP JUMPDEST SWAP3 PUSH2 0x817 PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18D JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST DUP3 PUSH2 0x841 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x8059C747 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x6AF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x85E PUSH1 0x4 DUP3 ADD PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x86C SWAP2 PUSH2 0x67C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x87D PUSH2 0x883 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x17D JUMP JUMPDEST SWAP3 PUSH2 0x17D JUMP JUMPDEST SWAP2 PUSH2 0x88F DUP4 DUP3 MUL PUSH2 0x17D JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x89E JUMPI JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x8AB PUSH2 0x583 JUMP JUMPDEST POP PUSH2 0x8B6 PUSH1 0x4 PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x8C9 PUSH2 0x8C3 PUSH1 0x0 PUSH2 0x693 JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST EQ PUSH2 0x8E5 JUMPI PUSH2 0x8E2 SWAP1 PUSH2 0x8DC PUSH1 0x4 PUSH2 0x5F4 JUMP JUMPDEST SWAP1 PUSH2 0x86E JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP PUSH2 0x8F0 PUSH1 0x0 PUSH2 0x693 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x905 SWAP2 PUSH2 0x900 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0x92C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x916 PUSH2 0x91C SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x17D JUMP JUMPDEST SWAP3 PUSH2 0x17D JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x927 JUMPI JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x935 DUP2 PUSH2 0x14FF JUMP JUMPDEST DUP2 PUSH2 0x949 PUSH2 0x943 PUSH1 0x0 PUSH2 0x693 JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST EQ PUSH2 0x9BA JUMPI PUSH2 0x976 DUP3 PUSH2 0x970 PUSH2 0x961 PUSH1 0x2 DUP6 SWAP1 PUSH2 0x5BF JUMP JUMPDEST SWAP2 PUSH2 0x96B DUP4 PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x907 JUMP JUMPDEST SWAP1 PUSH2 0x74A JUMP JUMPDEST PUSH2 0x9B5 PUSH2 0x9A3 PUSH32 0xFE6FCB45ADAAA54F7E3491F6A7964049817F1E437F33587E634A4629FBCF3A6 SWAP3 PUSH2 0x5B3 JUMP JUMPDEST SWAP3 PUSH2 0x9AC PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18D JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x9D3 PUSH1 0x4 DUP3 ADD PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x9E1 SWAP2 PUSH2 0x8F3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xA0 SHR SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xA00 PUSH2 0xA05 SWAP2 PUSH2 0x9E8 JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA12 SWAP1 SLOAD PUSH2 0x9F4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA1D PUSH2 0x9E3 JUMP JUMPDEST POP PUSH2 0xA28 PUSH1 0x0 PUSH2 0xA08 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA42 PUSH2 0xA47 SWAP2 PUSH2 0xA3A PUSH2 0x583 JUMP JUMPDEST POP PUSH1 0x2 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA5B SWAP1 PUSH2 0xA56 PUSH2 0x153E JUMP JUMPDEST PUSH2 0xA5D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA6E SWAP1 PUSH2 0xA69 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0xB4A JUMP JUMPDEST PUSH2 0xA76 PUSH2 0x161A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xA8F PUSH2 0xA94 SWAP2 PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0xA78 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAA1 SWAP1 SLOAD PUSH2 0xA83 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAAD SWAP1 PUSH2 0x5A7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAB9 SWAP1 PUSH2 0x5A7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0xAE6 SWAP1 PUSH2 0xABC JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB00 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xAC6 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xB18 DUP3 PUSH2 0x221 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xB34 JUMPI PUSH2 0xB31 SWAP2 PUSH1 0x0 ADD PUSH2 0xB0B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH2 0xB41 PUSH2 0x113 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xB53 CALLER PUSH2 0x14FF JUMP JUMPDEST DUP1 PUSH2 0xB67 PUSH2 0xB61 PUSH1 0x0 PUSH2 0x693 JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST EQ PUSH2 0xD78 JUMPI PUSH2 0xB76 PUSH1 0x4 PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0xB89 PUSH2 0xB83 PUSH1 0x0 PUSH2 0x693 JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST EQ PUSH2 0xD5B JUMPI PUSH2 0xBA2 PUSH2 0xB9D PUSH1 0x2 CALLER SWAP1 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST DUP1 PUSH2 0xBB5 PUSH2 0xBAF DUP5 PUSH2 0x17D JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST LT PUSH2 0xD3B JUMPI POP PUSH2 0xBCF DUP2 PUSH2 0xBC9 PUSH1 0x4 PUSH2 0x5F4 JUMP JUMPDEST SWAP1 PUSH2 0x86E JUMP JUMPDEST SWAP1 PUSH2 0xC19 PUSH1 0x20 PUSH2 0xBE7 PUSH2 0xBE2 PUSH1 0x5 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xC0E PUSH2 0xBF9 ADDRESS PUSH2 0xAB0 JUMP JUMPDEST SWAP3 PUSH2 0xC02 PUSH2 0x113 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xB05 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x467 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xD36 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xD08 JUMPI JUMPDEST POP DUP1 PUSH2 0xC40 PUSH2 0xC3A DUP6 PUSH2 0x17D JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST LT PUSH2 0xCE8 JUMPI POP PUSH2 0xC6E DUP2 PUSH2 0xC68 PUSH2 0xC59 PUSH1 0x2 CALLER SWAP1 PUSH2 0x5BF JUMP JUMPDEST SWAP2 PUSH2 0xC63 DUP4 PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST SWAP1 PUSH2 0x74A JUMP JUMPDEST PUSH2 0xC96 DUP2 PUSH2 0xC90 PUSH2 0xC81 PUSH1 0x3 CALLER SWAP1 PUSH2 0x5BF JUMP JUMPDEST SWAP2 PUSH2 0xC8B DUP4 PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x907 JUMP JUMPDEST SWAP1 PUSH2 0x74A JUMP JUMPDEST PUSH2 0xCA1 CALLER DUP4 SWAP1 PUSH2 0x162E JUMP JUMPDEST CALLER SWAP1 SWAP2 PUSH2 0xCCE PUSH32 0xEB9A8C68A32BC6989217E69F932CF098FF5D0E2F11305800394C73B554D2CE9E SWAP3 PUSH2 0x5B3 JUMP JUMPDEST SWAP3 PUSH2 0xCE3 PUSH2 0xCDA PUSH2 0x113 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x6AF JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST DUP3 PUSH2 0xD04 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x722F6B3 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x6AF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xD29 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xD2F JUMPI JUMPDEST PUSH2 0xD21 DUP2 DUP4 PUSH2 0xADC JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xB1A JUMP JUMPDEST CODESIZE PUSH2 0xC2C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xD17 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST SWAP1 PUSH2 0xD57 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x8059C747 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x6AF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x62F216E5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xD74 PUSH1 0x4 DUP3 ADD PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0xD91 PUSH1 0x4 DUP3 ADD PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xD9E SWAP1 PUSH2 0xA4A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDA8 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0xDB0 PUSH2 0xDDA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDC6 PUSH2 0xDC1 PUSH2 0xDCB SWAP3 PUSH2 0x690 JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH2 0x123 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDD7 SWAP1 PUSH2 0xDB2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDEC PUSH2 0xDE7 PUSH1 0x0 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x17B9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDF6 PUSH2 0xDA0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE00 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0xE08 PUSH2 0xE0A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE12 PUSH2 0x187B JUMP JUMPDEST PUSH32 0xAB35696F06E428EBC5CEBA8CD17F8FED287BAF43440206D1943AF1EE53E6D267 PUSH2 0xE3B PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0xE45 DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xE52 PUSH2 0xDF8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xE70 PUSH2 0xE75 SWAP2 PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0xE59 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE82 SWAP1 SLOAD PUSH2 0xE64 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE8D PUSH2 0xE54 JUMP JUMPDEST POP PUSH2 0xE98 PUSH1 0x0 PUSH2 0xE78 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xEAC SWAP1 PUSH2 0xEA7 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0xEAE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xEB9 DUP2 PUSH1 0x4 PUSH2 0x74A JUMP JUMPDEST PUSH2 0xEEF PUSH32 0x972ABA470577C14606BBF4BBDEC1FED4925F242FCEF40B4A8D242983365D0291 SWAP2 PUSH2 0xEE6 PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18D JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xEFD SWAP1 PUSH2 0xE9B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF10 SWAP1 PUSH2 0xF0B PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0xF79 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF1B DUP2 PUSH2 0x32F JUMP JUMPDEST SUB PUSH2 0xF22 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xF34 DUP3 PUSH2 0xF12 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF50 JUMPI PUSH2 0xF4D SWAP2 PUSH1 0x0 ADD PUSH2 0xF27 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xF77 SWAP3 SWAP5 SWAP4 PUSH2 0xF70 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x45A JUMP JUMPDEST ADD SWAP1 PUSH2 0x180 JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0xF8D PUSH2 0xF87 PUSH1 0x0 PUSH2 0x693 JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST EQ PUSH2 0x114F JUMPI PUSH2 0xFDB PUSH1 0x20 PUSH2 0xFA9 PUSH2 0xFA4 PUSH1 0x5 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xFD0 PUSH2 0xFBB ADDRESS PUSH2 0xAB0 JUMP JUMPDEST SWAP3 PUSH2 0xFC4 PUSH2 0x113 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xB05 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x467 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x114A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x111C JUMPI JUMPDEST POP DUP1 PUSH2 0x1002 PUSH2 0xFFC DUP5 PUSH2 0x17D JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST LT PUSH2 0x10FC JUMPI PUSH2 0x1019 PUSH2 0x1014 PUSH1 0x5 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x20 PUSH4 0xA9059CBB SWAP2 CALLER SWAP1 PUSH2 0x1041 PUSH1 0x0 DUP8 SWAP6 PUSH2 0x104C PUSH2 0x1035 PUSH2 0x113 JUMP JUMPDEST SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0xB05 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xF55 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x10F7 JUMPI PUSH2 0x1069 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x10C9 JUMPI JUMPDEST POP ISZERO PUSH2 0x32F JUMP JUMPDEST PUSH2 0x10A9 JUMPI POP PUSH2 0x10A4 PUSH32 0x4EACC637A5FB1DBBC94595A9432E0A8D75AE5D51D189021963A6CC8575465DDF SWAP2 PUSH2 0x109B PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18D JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST SWAP1 PUSH2 0x10C5 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x722F6B3 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x6AF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x10EA SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x10F0 JUMPI JUMPDEST PUSH2 0x10E2 DUP2 DUP4 PUSH2 0xADC JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xF36 JUMP JUMPDEST CODESIZE PUSH2 0x1062 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x10D8 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST SWAP1 PUSH2 0x1118 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x722F6B3 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x6AF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x113D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1143 JUMPI JUMPDEST PUSH2 0x1135 DUP2 DUP4 PUSH2 0xADC JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xB1A JUMP JUMPDEST CODESIZE PUSH2 0xFEE JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x112B JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x1168 PUSH1 0x4 DUP3 ADD PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1175 SWAP1 PUSH2 0xEFF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1188 SWAP1 PUSH2 0x1183 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0x118A JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x11A6 PUSH2 0x11A0 PUSH2 0x119B PUSH1 0x0 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x12E JUMP JUMPDEST SWAP2 PUSH2 0x12E JUMP JUMPDEST EQ PUSH2 0x11B6 JUMPI PUSH2 0x11B4 SWAP1 PUSH2 0x17B9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x11DB PUSH2 0x11C3 PUSH1 0x0 PUSH2 0xDCE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x467 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E8 SWAP1 PUSH2 0x1177 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x11FB SWAP1 PUSH2 0x11F6 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0x1230 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x1227 PUSH2 0x122E SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x121D PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x45A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x45A JUMP JUMPDEST ADD SWAP1 PUSH2 0x180 JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x1244 PUSH2 0x123E PUSH1 0x0 PUSH2 0x693 JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST EQ PUSH2 0x13D0 JUMPI PUSH2 0x125B PUSH2 0x1256 PUSH1 0x5 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x20 PUSH4 0x23B872DD SWAP2 CALLER SWAP1 PUSH2 0x128C PUSH1 0x0 PUSH2 0x1273 ADDRESS PUSH2 0xAB0 JUMP JUMPDEST SWAP6 PUSH2 0x1297 DUP9 PUSH2 0x1280 PUSH2 0x113 JUMP JUMPDEST SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH2 0xB05 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x11FD JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x13CB JUMPI PUSH2 0x12B4 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x139D JUMPI JUMPDEST POP ISZERO PUSH2 0x32F JUMP JUMPDEST PUSH2 0x12F3 JUMPI PUSH2 0x12EE PUSH32 0xF920186940A9C60FF07B508B49BA5DCA2C647B29AEBFA69964B44E5E873A62C SWAP2 PUSH2 0x12E5 PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18D JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1335 SWAP1 PUSH1 0x20 PUSH2 0x130B PUSH2 0x1306 PUSH1 0x5 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x132A CALLER SWAP3 PUSH2 0x131E PUSH2 0x113 JUMP JUMPDEST SWAP7 DUP8 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xB05 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x467 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1398 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1368 JUMPI JUMPDEST POP PUSH2 0x1364 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x722F6B3 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x6AF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x138A SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1391 JUMPI JUMPDEST PUSH2 0x1382 DUP2 DUP4 PUSH2 0xADC JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xB1A JUMP JUMPDEST SWAP1 DUP3 PUSH2 0x1348 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1378 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x13BE SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x13C4 JUMPI JUMPDEST PUSH2 0x13B6 DUP2 DUP4 PUSH2 0xADC JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xF36 JUMP JUMPDEST CODESIZE PUSH2 0x12AD JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x13AC JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x13E9 PUSH1 0x4 DUP3 ADD PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F6 SWAP1 PUSH2 0x11EA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1400 PUSH2 0xE85 JUMP JUMPDEST PUSH2 0x1419 PUSH2 0x1413 PUSH2 0x140E PUSH2 0x1885 JUMP JUMPDEST PUSH2 0x12E JUMP JUMPDEST SWAP2 PUSH2 0x12E JUMP JUMPDEST SUB PUSH2 0x1420 JUMPI JUMP JUMPDEST PUSH2 0x1443 PUSH2 0x142B PUSH2 0x1885 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x467 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x144F PUSH2 0x1892 JUMP JUMPDEST PUSH2 0x1457 PUSH2 0x14A7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x146E PUSH1 0xFF PUSH1 0xA0 SHL SWAP2 PUSH2 0x1459 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x1481 SWAP1 PUSH2 0x32F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x149C PUSH2 0x1497 PUSH2 0x14A3 SWAP3 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x1484 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x145F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x14B2 PUSH1 0x0 DUP1 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x14BA PUSH2 0x1885 JUMP JUMPDEST PUSH2 0x14F0 PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP2 PUSH2 0x14E7 PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x467 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x14FD PUSH2 0x1447 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x151A PUSH2 0x1514 PUSH2 0x150F PUSH1 0x0 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x12E JUMP JUMPDEST SWAP2 PUSH2 0x12E JUMP JUMPDEST EQ PUSH2 0x1521 JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x153A PUSH1 0x4 DUP3 ADD PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1546 PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x154C JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1565 PUSH1 0x4 DUP3 ADD PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1580 PUSH2 0x157B PUSH2 0x1585 SWAP3 PUSH2 0x1569 JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH2 0x17D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1592 PUSH1 0x2 PUSH2 0x156C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x159F PUSH1 0x1 PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x15B8 PUSH2 0x15B2 PUSH2 0x15AD PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x17D JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST EQ PUSH2 0x15D1 JUMPI PUSH2 0x15CF PUSH2 0x15C8 PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x74A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x15EA PUSH1 0x4 DUP3 ADD PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1605 PUSH2 0x1600 PUSH2 0x160A SWAP3 PUSH2 0x15EE JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH2 0x17D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1617 PUSH1 0x1 PUSH2 0x15F1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x162C PUSH2 0x1625 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x1 PUSH2 0x74A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x20 PUSH2 0x1642 PUSH2 0x163D PUSH1 0x5 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST PUSH4 0xA9059CBB SWAP3 SWAP1 PUSH2 0x1667 PUSH1 0x0 DUP7 SWAP6 PUSH2 0x1672 PUSH2 0x165B PUSH2 0x113 JUMP JUMPDEST SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0xB05 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xF55 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1776 JUMPI PUSH2 0x168F SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1748 JUMPI JUMPDEST POP ISZERO PUSH2 0x32F JUMP JUMPDEST PUSH2 0x1696 JUMPI POP JUMP JUMPDEST PUSH2 0x16E0 SWAP1 PUSH1 0x20 PUSH2 0x16AE PUSH2 0x16A9 PUSH1 0x5 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x16D5 PUSH2 0x16C0 ADDRESS PUSH2 0xAB0 JUMP JUMPDEST SWAP3 PUSH2 0x16C9 PUSH2 0x113 JUMP JUMPDEST SWAP7 DUP8 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xB05 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x467 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1743 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1713 JUMPI JUMPDEST POP PUSH2 0x170F PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x722F6B3 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x6AF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1735 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x173C JUMPI JUMPDEST PUSH2 0x172D DUP2 DUP4 PUSH2 0xADC JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xB1A JUMP JUMPDEST SWAP1 DUP3 PUSH2 0x16F3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1723 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x1769 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x176F JUMPI JUMPDEST PUSH2 0x1761 DUP2 DUP4 PUSH2 0xADC JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xF36 JUMP JUMPDEST CODESIZE PUSH2 0x1688 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1757 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST SWAP1 PUSH2 0x178C PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x70E JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x17AE PUSH2 0x17A9 PUSH2 0x17B5 SWAP3 PUSH2 0x5B3 JUMP JUMPDEST PUSH2 0x1796 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x177B JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x17C3 PUSH1 0x0 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x17CE DUP3 PUSH1 0x0 PUSH2 0x1799 JUMP JUMPDEST SWAP1 PUSH2 0x1802 PUSH2 0x17FC PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x5B3 JUMP JUMPDEST SWAP2 PUSH2 0x5B3 JUMP JUMPDEST SWAP2 PUSH2 0x180B PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x1815 DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x1822 PUSH2 0x153E JUMP JUMPDEST PUSH2 0x182A PUSH2 0x182C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1838 PUSH1 0x1 PUSH1 0x0 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x1840 PUSH2 0x1885 JUMP JUMPDEST PUSH2 0x1876 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0x186D PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x467 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1883 PUSH2 0x181A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x188D PUSH2 0xE54 JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST PUSH2 0x18A3 PUSH2 0x189D PUSH2 0xA15 JUMP JUMPDEST ISZERO PUSH2 0x32F JUMP JUMPDEST PUSH2 0x18A9 JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x18C2 PUSH1 0x4 DUP3 ADD PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 DUP12 DUP13 DUP4 AND EXP DUP5 PUSH1 0x33 0xD 0xD0 EXP PUSH17 0xFD0986BD66994083215A0D4939D1603B3A NUMBER PUSH1 0x64 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
              "sourceMap": "435:9363:8:-:0;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;3557:239::-;;3597:10;3557:239;:::i;:::-;3619:10;:24;;3633:10;3641:1;3633:10;:::i;:::-;3619:24;:::i;:::-;;;:::i;:::-;;3615:68;;3701:18;3689:30;3708:10;3701:18;:::i;:::-;3689:30;;:::i;:::-;3725:16;;3740:1;3725:16;:::i;:::-;;;:::i;:::-;3557:239::o;3615:68::-;3660:16;;;;;;;;;;;;:::i;:::-;;;;435:9363;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1818:40:7:-;1857:1;;;:::i;:::-;1818:40;:::o;2037:52::-;;;;:::i;:::-;2061:21;2071:11;;:::i;:::-;2061:21;;:::i;:::-;2037:52::o;615:2090:6:-;;;;:::i;:::-;:::o;435:9363:8:-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;1225:187:0:-;1273:12;:26;;1289:10;1297:1;1289:10;:::i;:::-;1273:26;:::i;:::-;;;:::i;:::-;;1269:95;;1392:12;;;:::i;:::-;1225:187::o;1269:95::-;1322:31;1342:10;1350:1;1342:10;:::i;:::-;1322:31;;;;;;;;;;;;;:::i;:::-;;;;435:9363:8;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;2912:187:0:-;3004:6;;;:::i;:::-;3020:17;3029:8;3020:17;;:::i;:::-;3083:8;3052:40;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;2912:187::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode": {
                  "entryPoint": 472,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 335,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_addresst_uint256": {
                  "entryPoint": 581,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 3894,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_bool_fromMemory": {
                  "entryPoint": 3879,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint256_fromMemory": {
                  "entryPoint": 2827,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_address": {
                  "entryPoint": 350,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_uint256": {
                  "entryPoint": 679,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256": {
                  "entryPoint": 566,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256_fromMemory": {
                  "entryPoint": 2842,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": 1114,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_address_address_uint256": {
                  "entryPoint": 4605,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": 3925,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_bool": {
                  "entryPoint": 833,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bool_to_bool": {
                  "entryPoint": 820,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple": {
                  "entryPoint": 488,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 1127,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256": {
                  "entryPoint": 397,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_to_uint256": {
                  "entryPoint": 384,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint256_uint256": {
                  "entryPoint": 1711,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 275,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 2311,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 2158,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 1769,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": 302,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bool": {
                  "entryPoint": 815,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_address": {
                  "entryPoint": 3673,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_bool": {
                  "entryPoint": 2542,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_contract_IERC20": {
                  "entryPoint": 2680,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint256": {
                  "entryPoint": 1501,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": 5614,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by_1": {
                  "entryPoint": 5481,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by": {
                  "entryPoint": 1680,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 291,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": 381,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "constant_ENTERED": {
                  "entryPoint": 5512,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "constant_NOT_ENTERED": {
                  "entryPoint": 5645,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "convert_address_to_address": {
                  "entryPoint": 1459,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_bool_to_bool": {
                  "entryPoint": 5240,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_IERC20_to_address": {
                  "entryPoint": 2724,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_USDCRewardContract_to_address": {
                  "entryPoint": 2736,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_2_by_1_to_uint256": {
                  "entryPoint": 5484,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 3534,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 3506,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": 5617,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_rational_by_to_t_uint256": {
                  "entryPoint": 1683,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 1447,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 1419,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 1835,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "external_fun_addPoints": {
                  "entryPoint": 763,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_calculateUSDCAmount": {
                  "entryPoint": 710,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_claimUSDC": {
                  "entryPoint": 961,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_depositUSDC": {
                  "entryPoint": 1355,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getPointBalance": {
                  "entryPoint": 908,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getTotalClaimedPoints": {
                  "entryPoint": 419,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_owner": {
                  "entryPoint": 1149,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_pause": {
                  "entryPoint": 1063,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_paused": {
                  "entryPoint": 855,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_renounceOwnership": {
                  "entryPoint": 1012,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_setExchangeRate": {
                  "entryPoint": 1202,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_subtractPoints": {
                  "entryPoint": 627,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_transferOwnership": {
                  "entryPoint": 1304,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_unpause": {
                  "entryPoint": 494,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_withdrawUSDC": {
                  "entryPoint": 1253,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_from_storage_value_offset_address": {
                  "entryPoint": 3684,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_bool": {
                  "entryPoint": 2548,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_contract_IERC20": {
                  "entryPoint": 2691,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_uint256": {
                  "entryPoint": 1504,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 2780,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun__transferOwnership": {
                  "entryPoint": 6073,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun__unpause_inner": {
                  "entryPoint": 5287,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_addPoints": {
                  "entryPoint": 2519,
                  "id": 1279,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_addPoints_inner": {
                  "entryPoint": 2348,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_calculateUSDCAmount": {
                  "entryPoint": 2211,
                  "id": 1392,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_checkOwner": {
                  "entryPoint": 5112,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_claimUSDC": {
                  "entryPoint": 3477,
                  "id": 1494,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_claimUSDC_inner": {
                  "entryPoint": 2890,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_depositUSDC": {
                  "entryPoint": 5101,
                  "id": 1541,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_depositUSDC_inner": {
                  "entryPoint": 4656,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_getPointBalance": {
                  "entryPoint": 2603,
                  "id": 1342,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_getTotalClaimedPoints": {
                  "entryPoint": 1537,
                  "id": 1355,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_msgSender": {
                  "entryPoint": 6277,
                  "id": 915,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_nonReentrantAfter": {
                  "entryPoint": 5658,
                  "id": 1098,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 5525,
                  "id": 1090,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_owner": {
                  "entryPoint": 3717,
                  "id": 67,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_pause": {
                  "entryPoint": 6267,
                  "id": 1024,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_pause_1613": {
                  "entryPoint": 3658,
                  "id": 1613,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_pause_1613_inner": {
                  "entryPoint": 3594,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_pause_inner": {
                  "entryPoint": 6188,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_paused": {
                  "entryPoint": 2581,
                  "id": 983,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_renounceOwnership": {
                  "entryPoint": 3566,
                  "id": 98,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_renounceOwnership_inner": {
                  "entryPoint": 3546,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_requireNotPaused": {
                  "entryPoint": 5438,
                  "id": 995,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_requirePaused": {
                  "entryPoint": 6290,
                  "id": 1008,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_setExchangeRate": {
                  "entryPoint": 3828,
                  "id": 1372,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_setExchangeRate_inner": {
                  "entryPoint": 3758,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_subtractPoints": {
                  "entryPoint": 2146,
                  "id": 1329,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_subtractPoints_inner": {
                  "entryPoint": 1898,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_transferOwnership": {
                  "entryPoint": 4575,
                  "id": 126,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_transferOwnership_inner": {
                  "entryPoint": 4490,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_transferUSDC": {
                  "entryPoint": 5678,
                  "id": 1658,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_unpause": {
                  "entryPoint": 5365,
                  "id": 1040,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_unpause_1626": {
                  "entryPoint": 1650,
                  "id": 1626,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_unpause_inner": {
                  "entryPoint": 1586,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_validateAddress": {
                  "entryPoint": 5375,
                  "id": 1676,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_withdrawUSDC": {
                  "entryPoint": 4460,
                  "id": 1600,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_withdrawUSDC_inner": {
                  "entryPoint": 3961,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": 1416,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_uint256_of_address": {
                  "entryPoint": 1471,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "modifier_nonReentrant": {
                  "entryPoint": 2653,
                  "id": 1074,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner": {
                  "entryPoint": 3488,
                  "id": 58,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_104": {
                  "entryPoint": 4471,
                  "id": 58,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_1253": {
                  "entryPoint": 2291,
                  "id": 58,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_1287": {
                  "entryPoint": 1660,
                  "id": 58,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_1361": {
                  "entryPoint": 3739,
                  "id": 58,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_1500": {
                  "entryPoint": 4586,
                  "id": 58,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_1547": {
                  "entryPoint": 3839,
                  "id": 58,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_1604": {
                  "entryPoint": 3576,
                  "id": 58,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_1617": {
                  "entryPoint": 1568,
                  "id": 58,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "modifier_whenNotPaused": {
                  "entryPoint": 2634,
                  "id": 966,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_whenNotPaused_1012": {
                  "entryPoint": 6170,
                  "id": 966,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "modifier_whenPaused": {
                  "entryPoint": 5191,
                  "id": 974,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x11": {
                  "entryPoint": 1747,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 2758,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": 6038,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_bool": {
                  "entryPoint": 5252,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint256": {
                  "entryPoint": 1863,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": 3704,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_bool": {
                  "entryPoint": 2568,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_contract_IERC20": {
                  "entryPoint": 2711,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint256": {
                  "entryPoint": 1524,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74": {
                  "entryPoint": 1406,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 281,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 286,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_forward": {
                  "entryPoint": 2873,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 2748,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 1806,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_160": {
                  "entryPoint": 5209,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_224": {
                  "entryPoint": 2821,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_0_unsigned": {
                  "entryPoint": 1495,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_224_unsigned": {
                  "entryPoint": 269,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": 2536,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 1812,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_0": {
                  "entryPoint": 6011,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_20": {
                  "entryPoint": 5215,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_address_to_address": {
                  "entryPoint": 6041,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_bool_to_bool": {
                  "entryPoint": 5255,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_uint256_to_uint256": {
                  "entryPoint": 1866,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 314,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_bool": {
                  "entryPoint": 3858,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_uint256": {
                  "entryPoint": 545,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "zero_value_for_split_address": {
                  "entryPoint": 3668,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_bool": {
                  "entryPoint": 2531,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint256": {
                  "entryPoint": 1411,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361015610013575b61057e565b61001e60003561010d565b80631e2393ea146101085780633f4ba83a146101035780634a222b35146100fe5780634cabb824146100f9578063507cd30f146100f45780635c975abb146100ef5780635f42513c146100ea5780636e5f4a89146100e5578063715018a6146100e05780638456cb59146100db5780638da5cb5b146100d6578063db068e0e146100d1578063db81f99b146100cc578063f2fde38b146100c75763f688bcfb0361000e5761054b565b610518565b6104e5565b6104b2565b61047d565b610427565b6103f4565b6103c1565b61038c565b610357565b6102fb565b6102c6565b610273565b6101ee565b6101a3565b60e01c90565b60405190565b600080fd5b600080fd5b60018060a01b031690565b61013790610123565b90565b6101438161012e565b0361014a57565b600080fd5b9050359061015c8261013a565b565b90602082820312610178576101759160000161014f565b90565b61011e565b90565b6101899061017d565b9052565b91906101a190600060208501940190610180565b565b346101d3576101cf6101be6101b936600461015e565b610601565b6101c6610113565b9182918261018d565b0390f35b610119565b60009103126101e357565b61011e565b60000190565b3461021c576101fe3660046101d8565b610206610672565b61020e610113565b80610218816101e8565b0390f35b610119565b61022a8161017d565b0361023157565b600080fd5b9050359061024382610221565b565b919060408382031261026e578061026261026b926000860161014f565b93602001610236565b90565b61011e565b346102a25761028c610286366004610245565b90610862565b610294610113565b8061029e816101e8565b0390f35b610119565b906020828203126102c1576102be91600001610236565b90565b61011e565b346102f6576102f26102e16102dc3660046102a7565b6108a3565b6102e9610113565b9182918261018d565b0390f35b610119565b3461032a5761031461030e366004610245565b906109d7565b61031c610113565b80610326816101e8565b0390f35b610119565b151590565b61033d9061032f565b9052565b919061035590600060208501940190610334565b565b34610387576103673660046101d8565b610383610372610a15565b61037a610113565b91829182610341565b0390f35b610119565b346103bc576103b86103a76103a236600461015e565b610a2b565b6103af610113565b9182918261018d565b0390f35b610119565b346103ef576103d96103d43660046102a7565b610d95565b6103e1610113565b806103eb816101e8565b0390f35b610119565b34610422576104043660046101d8565b61040c610dee565b610414610113565b8061041e816101e8565b0390f35b610119565b34610455576104373660046101d8565b61043f610e4a565b610447610113565b80610451816101e8565b0390f35b610119565b6104639061012e565b9052565b919061047b9060006020850194019061045a565b565b346104ad5761048d3660046101d8565b6104a9610498610e85565b6104a0610113565b91829182610467565b0390f35b610119565b346104e0576104ca6104c53660046102a7565b610ef4565b6104d2610113565b806104dc816101e8565b0390f35b610119565b34610513576104fd6104f83660046102a7565b61116c565b610505610113565b8061050f816101e8565b0390f35b610119565b346105465761053061052b36600461015e565b6111df565b610538610113565b80610542816101e8565b0390f35b610119565b346105795761056361055e3660046102a7565b6113ed565b61056b610113565b80610575816101e8565b0390f35b610119565b600080fd5b600090565b90565b61059f61059a6105a492610123565b610588565b610123565b90565b6105b09061058b565b90565b6105bc906105a7565b90565b906105c9906105b3565b600052602052604060002090565b60001c90565b90565b6105ec6105f1916105d7565b6105dd565b90565b6105fe90546105e0565b90565b61061861061d91610610610583565b5060036105bf565b6105f4565b90565b6106286113f8565b610630610632565b565b61063a6114f5565b7f0e5e3b3fb504c22cf5c42fa07d521225937514c654007e1f12646f89768d6f94610663610113565b8061066d816101e8565b0390a1565b61067a610620565b565b9061068e916106896113f8565b61076a565b565b90565b6106a76106a26106ac92610690565b610588565b61017d565b90565b9160206106d19294936106ca60408201966000830190610180565b0190610180565b565b634e487b7160e01b600052601160045260246000fd5b6106f86106fe9193929361017d565b9261017d565b820391821161070957565b6106d3565b60001b90565b906107216000199161070e565b9181191691161790565b61073f61073a6107449261017d565b610588565b61017d565b90565b90565b9061075f61075a6107669261072b565b610747565b8254610714565b9055565b610773816114ff565b816107876107816000610693565b9161017d565b14610845576107a061079b600283906105bf565b6105f4565b806107b36107ad8561017d565b9161017d565b1061082557506107e1826107db6107cc600285906105bf565b916107d6836105f4565b6106e9565b9061074a565b61082061080e7ff9352367bd3be481e8f66e7940f6ea5b57fea7504271b1f2863a535443fd2bab926105b3565b92610817610113565b9182918261018d565b0390a2565b826108416000928392638059c74760e01b8452600484016106af565b0390fd5b600063162908e360e11b81528061085e600482016101e8565b0390fd5b9061086c9161067c565b565b61087d6108839193929361017d565b9261017d565b9161088f83820261017d565b92818404149015171561089e57565b6106d3565b6108ab610583565b506108b660046105f4565b6108c96108c36000610693565b9161017d565b146108e5576108e2906108dc60046105f4565b9061086e565b90565b506108f06000610693565b90565b90610905916109006113f8565b61092c565b565b61091661091c9193929361017d565b9261017d565b820180921161092757565b6106d3565b610935816114ff565b816109496109436000610693565b9161017d565b146109ba5761097682610970610961600285906105bf565b9161096b836105f4565b610907565b9061074a565b6109b56109a37f0fe6fcb45adaaa54f7e3491f6a7964049817f1e437f33587e634a4629fbcf3a6926105b3565b926109ac610113565b9182918261018d565b0390a2565b600063162908e360e11b8152806109d3600482016101e8565b0390fd5b906109e1916108f3565b565b600090565b60a01c90565b60ff1690565b610a00610a05916109e8565b6109ee565b90565b610a1290546109f4565b90565b610a1d6109e3565b50610a286000610a08565b90565b610a42610a4791610a3a610583565b5060026105bf565b6105f4565b90565b610a5b90610a5661153e565b610a5d565b565b610a6e90610a69611595565b610b4a565b610a7661161a565b565b60018060a01b031690565b610a8f610a94916105d7565b610a78565b90565b610aa19054610a83565b90565b610aad906105a7565b90565b610ab9906105a7565b90565b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b90610ae690610abc565b810190811067ffffffffffffffff821117610b0057604052565b610ac6565b60e01b90565b90505190610b1882610221565b565b90602082820312610b3457610b3191600001610b0b565b90565b61011e565b610b41610113565b3d6000823e3d90fd5b610b53336114ff565b80610b67610b616000610693565b9161017d565b14610d7857610b7660046105f4565b610b89610b836000610693565b9161017d565b14610d5b57610ba2610b9d600233906105bf565b6105f4565b80610bb5610baf8461017d565b9161017d565b10610d3b5750610bcf81610bc960046105f4565b9061086e565b90610c196020610be7610be26005610a97565b610aa4565b6370a0823190610c0e610bf930610ab0565b92610c02610113565b95869485938493610b05565b835260048301610467565b03915afa908115610d3657600091610d08575b5080610c40610c3a8561017d565b9161017d565b10610ce85750610c6e81610c68610c59600233906105bf565b91610c63836105f4565b6106e9565b9061074a565b610c9681610c90610c81600333906105bf565b91610c8b836105f4565b610907565b9061074a565b610ca133839061162e565b339091610cce7feb9a8c68a32bc6989217e69f932cf098ff5d0e2f11305800394c73b554d2ce9e926105b3565b92610ce3610cda610113565b928392836106af565b0390a2565b82610d046000928392630722f6b360e11b8452600484016106af565b0390fd5b610d29915060203d8111610d2f575b610d218183610adc565b810190610b1a565b38610c2c565b503d610d17565b610b39565b90610d576000928392638059c74760e01b8452600484016106af565b0390fd5b60006362f216e560e01b815280610d74600482016101e8565b0390fd5b600063162908e360e11b815280610d91600482016101e8565b0390fd5b610d9e90610a4a565b565b610da86113f8565b610db0610dda565b565b610dc6610dc1610dcb92610690565b610588565b610123565b90565b610dd790610db2565b90565b610dec610de76000610dce565b6117b9565b565b610df6610da0565b565b610e006113f8565b610e08610e0a565b565b610e1261187b565b7fab35696f06e428ebc5ceba8cd17f8fed287baf43440206d1943af1ee53e6d267610e3b610113565b80610e45816101e8565b0390a1565b610e52610df8565b565b600090565b60018060a01b031690565b610e70610e75916105d7565b610e59565b90565b610e829054610e64565b90565b610e8d610e54565b50610e986000610e78565b90565b610eac90610ea76113f8565b610eae565b565b610eb981600461074a565b610eef7f972aba470577c14606bbf4bbdec1fed4925f242fcef40b4a8d242983365d029191610ee6610113565b9182918261018d565b0390a1565b610efd90610e9b565b565b610f1090610f0b6113f8565b610f79565b565b610f1b8161032f565b03610f2257565b600080fd5b90505190610f3482610f12565b565b90602082820312610f5057610f4d91600001610f27565b90565b61011e565b916020610f77929493610f706040820196600083019061045a565b0190610180565b565b80610f8d610f876000610693565b9161017d565b1461114f57610fdb6020610fa9610fa46005610a97565b610aa4565b6370a0823190610fd0610fbb30610ab0565b92610fc4610113565b95869485938493610b05565b835260048301610467565b03915afa90811561114a5760009161111c575b5080611002610ffc8461017d565b9161017d565b106110fc576110196110146005610a97565b610aa4565b602063a9059cbb9133906110416000879561104c611035610113565b97889687958694610b05565b845260048401610f55565b03925af180156110f757611069916000916110c9575b501561032f565b6110a957506110a47f4eacc637a5fb1dbbc94595a9432e0a8d75ae5d51d189021963a6cc8575465ddf9161109b610113565b9182918261018d565b0390a1565b906110c56000928392630722f6b360e11b8452600484016106af565b0390fd5b6110ea915060203d81116110f0575b6110e28183610adc565b810190610f36565b38611062565b503d6110d8565b610b39565b906111186000928392630722f6b360e11b8452600484016106af565b0390fd5b61113d915060203d8111611143575b6111358183610adc565b810190610b1a565b38610fee565b503d61112b565b610b39565b600063162908e360e11b815280611168600482016101e8565b0390fd5b61117590610eff565b565b611188906111836113f8565b61118a565b565b806111a66111a061119b6000610dce565b61012e565b9161012e565b146111b6576111b4906117b9565b565b6111db6111c36000610dce565b6000918291631e4fbdf760e01b835260048301610467565b0390fd5b6111e890611177565b565b6111fb906111f66113f8565b611230565b565b60409061122761122e949695939661121d6060840198600085019061045a565b602083019061045a565b0190610180565b565b8061124461123e6000610693565b9161017d565b146113d05761125b6112566005610a97565b610aa4565b60206323b872dd91339061128c600061127330610ab0565b9561129788611280610113565b98899788968795610b05565b8552600485016111fd565b03925af180156113cb576112b49160009161139d575b501561032f565b6112f3576112ee7f0f920186940a9c60ff07b508b49ba5dca2c647b29aebfa69964b44e5e873a62c916112e5610113565b9182918261018d565b0390a1565b61133590602061130b6113066005610a97565b610aa4565b6370a082319061132a339261131e610113565b96879485938493610b05565b835260048301610467565b03915afa91821561139857600092611368575b506113646000928392630722f6b360e11b8452600484016106af565b0390fd5b61138a91925060203d8111611391575b6113828183610adc565b810190610b1a565b9082611348565b503d611378565b610b39565b6113be915060203d81116113c4575b6113b68183610adc565b810190610f36565b386112ad565b503d6113ac565b610b39565b600063162908e360e11b8152806113e9600482016101e8565b0390fd5b6113f6906111ea565b565b611400610e85565b61141961141361140e611885565b61012e565b9161012e565b0361142057565b61144361142b611885565b600091829163118cdaa760e01b835260048301610467565b0390fd5b61144f611892565b6114576114a7565b565b60a01b90565b9061146e60ff60a01b91611459565b9181191691161790565b6114819061032f565b90565b90565b9061149c6114976114a392611478565b611484565b825461145f565b9055565b6114b2600080611487565b6114ba611885565b6114f07f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa916114e7610113565b91829182610467565b0390a1565b6114fd611447565b565b61151a61151461150f6000610dce565b61012e565b9161012e565b1461152157565b600063e6c4247b60e01b81528061153a600482016101e8565b0390fd5b611546610a15565b61154c57565b600063d93c066560e01b815280611565600482016101e8565b0390fd5b90565b61158061157b61158592611569565b610588565b61017d565b90565b611592600261156c565b90565b61159f60016105f4565b6115b86115b26115ad611588565b61017d565b9161017d565b146115d1576115cf6115c8611588565b600161074a565b565b6000633ee5aeb560e01b8152806115ea600482016101e8565b0390fd5b90565b61160561160061160a926115ee565b610588565b61017d565b90565b61161760016115f1565b90565b61162c61162561160d565b600161074a565b565b602061164261163d6005610a97565b610aa4565b63a9059cbb92906116676000869561167261165b610113565b97889687958694610b05565b845260048401610f55565b03925af180156117765761168f91600091611748575b501561032f565b6116965750565b6116e09060206116ae6116a96005610a97565b610aa4565b6370a08231906116d56116c030610ab0565b926116c9610113565b96879485938493610b05565b835260048301610467565b03915afa91821561174357600092611713575b5061170f6000928392630722f6b360e11b8452600484016106af565b0390fd5b61173591925060203d811161173c575b61172d8183610adc565b810190610b1a565b90826116f3565b503d611723565b610b39565b611769915060203d811161176f575b6117618183610adc565b810190610f36565b38611688565b503d611757565b610b39565b9061178c60018060a01b039161070e565b9181191691161790565b90565b906117ae6117a96117b5926105b3565b611796565b825461177b565b9055565b6117c36000610e78565b6117ce826000611799565b906118026117fc7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0936105b3565b916105b3565b9161180b610113565b80611815816101e8565b0390a3565b61182261153e565b61182a61182c565b565b61183860016000611487565b611840611885565b6118767f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589161186d610113565b91829182610467565b0390a1565b61188361181a565b565b61188d610e54565b503390565b6118a361189d610a15565b1561032f565b6118a957565b6000638dfc202b60e01b8152806118c2600482016101e8565b0390fdfea2646970667358221220a58b8c83160a8460330dd00a70fd0986bd66994083215a0d4939d1603b3a436064736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0x10D JUMP JUMPDEST DUP1 PUSH4 0x1E2393EA EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x4A222B35 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x4CABB824 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x507CD30F EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x5F42513C EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x6E5F4A89 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0xDB068E0E EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0xDB81F99B EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC7 JUMPI PUSH4 0xF688BCFB SUB PUSH2 0xE JUMPI PUSH2 0x54B JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x47D JUMP JUMPDEST PUSH2 0x427 JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST PUSH2 0x38C JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH2 0x2FB JUMP JUMPDEST PUSH2 0x2C6 JUMP JUMPDEST PUSH2 0x273 JUMP JUMPDEST PUSH2 0x1EE JUMP JUMPDEST PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x137 SWAP1 PUSH2 0x123 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x143 DUP2 PUSH2 0x12E JUMP JUMPDEST SUB PUSH2 0x14A JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x15C DUP3 PUSH2 0x13A JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x178 JUMPI PUSH2 0x175 SWAP2 PUSH1 0x0 ADD PUSH2 0x14F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x189 SWAP1 PUSH2 0x17D JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1A1 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x180 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x1D3 JUMPI PUSH2 0x1CF PUSH2 0x1BE PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x1E3 JUMPI JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x21C JUMPI PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x206 PUSH2 0x672 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x218 DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST PUSH2 0x22A DUP2 PUSH2 0x17D JUMP JUMPDEST SUB PUSH2 0x231 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x243 DUP3 PUSH2 0x221 JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x26E JUMPI DUP1 PUSH2 0x262 PUSH2 0x26B SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x14F JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x236 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST CALLVALUE PUSH2 0x2A2 JUMPI PUSH2 0x28C PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x245 JUMP JUMPDEST SWAP1 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x294 PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x29E DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x2C1 JUMPI PUSH2 0x2BE SWAP2 PUSH1 0x0 ADD PUSH2 0x236 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST CALLVALUE PUSH2 0x2F6 JUMPI PUSH2 0x2F2 PUSH2 0x2E1 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0x2E9 PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH2 0x314 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x245 JUMP JUMPDEST SWAP1 PUSH2 0x9D7 JUMP JUMPDEST PUSH2 0x31C PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x326 DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x33D SWAP1 PUSH2 0x32F JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x355 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x334 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x387 JUMPI PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x383 PUSH2 0x372 PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x37A PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x341 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST CALLVALUE PUSH2 0x3BC JUMPI PUSH2 0x3B8 PUSH2 0x3A7 PUSH2 0x3A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E JUMP JUMPDEST PUSH2 0xA2B JUMP JUMPDEST PUSH2 0x3AF PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST CALLVALUE PUSH2 0x3EF JUMPI PUSH2 0x3D9 PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0xD95 JUMP JUMPDEST PUSH2 0x3E1 PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x3EB DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST CALLVALUE PUSH2 0x422 JUMPI PUSH2 0x404 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x40C PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x414 PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x41E DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST CALLVALUE PUSH2 0x455 JUMPI PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x43F PUSH2 0xE4A JUMP JUMPDEST PUSH2 0x447 PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x451 DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST PUSH2 0x463 SWAP1 PUSH2 0x12E JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x47B SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x45A JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x4AD JUMPI PUSH2 0x48D CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x4A9 PUSH2 0x498 PUSH2 0xE85 JUMP JUMPDEST PUSH2 0x4A0 PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x467 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST CALLVALUE PUSH2 0x4E0 JUMPI PUSH2 0x4CA PUSH2 0x4C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0x4D2 PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x4DC DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST CALLVALUE PUSH2 0x513 JUMPI PUSH2 0x4FD PUSH2 0x4F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0x116C JUMP JUMPDEST PUSH2 0x505 PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x50F DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST CALLVALUE PUSH2 0x546 JUMPI PUSH2 0x530 PUSH2 0x52B CALLDATASIZE PUSH1 0x4 PUSH2 0x15E JUMP JUMPDEST PUSH2 0x11DF JUMP JUMPDEST PUSH2 0x538 PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x542 DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST CALLVALUE PUSH2 0x579 JUMPI PUSH2 0x563 PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0x13ED JUMP JUMPDEST PUSH2 0x56B PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x575 DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x59F PUSH2 0x59A PUSH2 0x5A4 SWAP3 PUSH2 0x123 JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH2 0x123 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x5B0 SWAP1 PUSH2 0x58B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x5BC SWAP1 PUSH2 0x5A7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x5C9 SWAP1 PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x5EC PUSH2 0x5F1 SWAP2 PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x5FE SWAP1 SLOAD PUSH2 0x5E0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x618 PUSH2 0x61D SWAP2 PUSH2 0x610 PUSH2 0x583 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x628 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0x630 PUSH2 0x632 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x63A PUSH2 0x14F5 JUMP JUMPDEST PUSH32 0xE5E3B3FB504C22CF5C42FA07D521225937514C654007E1F12646F89768D6F94 PUSH2 0x663 PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x66D DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x67A PUSH2 0x620 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x68E SWAP2 PUSH2 0x689 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0x76A JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6A7 PUSH2 0x6A2 PUSH2 0x6AC SWAP3 PUSH2 0x690 JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH2 0x17D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x6D1 SWAP3 SWAP5 SWAP4 PUSH2 0x6CA PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x180 JUMP JUMPDEST ADD SWAP1 PUSH2 0x180 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x6F8 PUSH2 0x6FE SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x17D JUMP JUMPDEST SWAP3 PUSH2 0x17D JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0x709 JUMPI JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x721 PUSH1 0x0 NOT SWAP2 PUSH2 0x70E JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x73F PUSH2 0x73A PUSH2 0x744 SWAP3 PUSH2 0x17D JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH2 0x17D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x75F PUSH2 0x75A PUSH2 0x766 SWAP3 PUSH2 0x72B JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x714 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x773 DUP2 PUSH2 0x14FF JUMP JUMPDEST DUP2 PUSH2 0x787 PUSH2 0x781 PUSH1 0x0 PUSH2 0x693 JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST EQ PUSH2 0x845 JUMPI PUSH2 0x7A0 PUSH2 0x79B PUSH1 0x2 DUP4 SWAP1 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST DUP1 PUSH2 0x7B3 PUSH2 0x7AD DUP6 PUSH2 0x17D JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST LT PUSH2 0x825 JUMPI POP PUSH2 0x7E1 DUP3 PUSH2 0x7DB PUSH2 0x7CC PUSH1 0x2 DUP6 SWAP1 PUSH2 0x5BF JUMP JUMPDEST SWAP2 PUSH2 0x7D6 DUP4 PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST SWAP1 PUSH2 0x74A JUMP JUMPDEST PUSH2 0x820 PUSH2 0x80E PUSH32 0xF9352367BD3BE481E8F66E7940F6EA5B57FEA7504271B1F2863A535443FD2BAB SWAP3 PUSH2 0x5B3 JUMP JUMPDEST SWAP3 PUSH2 0x817 PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18D JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST DUP3 PUSH2 0x841 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x8059C747 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x6AF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x85E PUSH1 0x4 DUP3 ADD PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x86C SWAP2 PUSH2 0x67C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x87D PUSH2 0x883 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x17D JUMP JUMPDEST SWAP3 PUSH2 0x17D JUMP JUMPDEST SWAP2 PUSH2 0x88F DUP4 DUP3 MUL PUSH2 0x17D JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x89E JUMPI JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x8AB PUSH2 0x583 JUMP JUMPDEST POP PUSH2 0x8B6 PUSH1 0x4 PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x8C9 PUSH2 0x8C3 PUSH1 0x0 PUSH2 0x693 JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST EQ PUSH2 0x8E5 JUMPI PUSH2 0x8E2 SWAP1 PUSH2 0x8DC PUSH1 0x4 PUSH2 0x5F4 JUMP JUMPDEST SWAP1 PUSH2 0x86E JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP PUSH2 0x8F0 PUSH1 0x0 PUSH2 0x693 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x905 SWAP2 PUSH2 0x900 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0x92C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x916 PUSH2 0x91C SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x17D JUMP JUMPDEST SWAP3 PUSH2 0x17D JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x927 JUMPI JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x935 DUP2 PUSH2 0x14FF JUMP JUMPDEST DUP2 PUSH2 0x949 PUSH2 0x943 PUSH1 0x0 PUSH2 0x693 JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST EQ PUSH2 0x9BA JUMPI PUSH2 0x976 DUP3 PUSH2 0x970 PUSH2 0x961 PUSH1 0x2 DUP6 SWAP1 PUSH2 0x5BF JUMP JUMPDEST SWAP2 PUSH2 0x96B DUP4 PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x907 JUMP JUMPDEST SWAP1 PUSH2 0x74A JUMP JUMPDEST PUSH2 0x9B5 PUSH2 0x9A3 PUSH32 0xFE6FCB45ADAAA54F7E3491F6A7964049817F1E437F33587E634A4629FBCF3A6 SWAP3 PUSH2 0x5B3 JUMP JUMPDEST SWAP3 PUSH2 0x9AC PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18D JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x9D3 PUSH1 0x4 DUP3 ADD PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x9E1 SWAP2 PUSH2 0x8F3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xA0 SHR SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xA00 PUSH2 0xA05 SWAP2 PUSH2 0x9E8 JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA12 SWAP1 SLOAD PUSH2 0x9F4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA1D PUSH2 0x9E3 JUMP JUMPDEST POP PUSH2 0xA28 PUSH1 0x0 PUSH2 0xA08 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA42 PUSH2 0xA47 SWAP2 PUSH2 0xA3A PUSH2 0x583 JUMP JUMPDEST POP PUSH1 0x2 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA5B SWAP1 PUSH2 0xA56 PUSH2 0x153E JUMP JUMPDEST PUSH2 0xA5D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA6E SWAP1 PUSH2 0xA69 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0xB4A JUMP JUMPDEST PUSH2 0xA76 PUSH2 0x161A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xA8F PUSH2 0xA94 SWAP2 PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0xA78 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAA1 SWAP1 SLOAD PUSH2 0xA83 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAAD SWAP1 PUSH2 0x5A7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAB9 SWAP1 PUSH2 0x5A7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0xAE6 SWAP1 PUSH2 0xABC JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB00 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xAC6 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xB18 DUP3 PUSH2 0x221 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xB34 JUMPI PUSH2 0xB31 SWAP2 PUSH1 0x0 ADD PUSH2 0xB0B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH2 0xB41 PUSH2 0x113 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xB53 CALLER PUSH2 0x14FF JUMP JUMPDEST DUP1 PUSH2 0xB67 PUSH2 0xB61 PUSH1 0x0 PUSH2 0x693 JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST EQ PUSH2 0xD78 JUMPI PUSH2 0xB76 PUSH1 0x4 PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0xB89 PUSH2 0xB83 PUSH1 0x0 PUSH2 0x693 JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST EQ PUSH2 0xD5B JUMPI PUSH2 0xBA2 PUSH2 0xB9D PUSH1 0x2 CALLER SWAP1 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST DUP1 PUSH2 0xBB5 PUSH2 0xBAF DUP5 PUSH2 0x17D JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST LT PUSH2 0xD3B JUMPI POP PUSH2 0xBCF DUP2 PUSH2 0xBC9 PUSH1 0x4 PUSH2 0x5F4 JUMP JUMPDEST SWAP1 PUSH2 0x86E JUMP JUMPDEST SWAP1 PUSH2 0xC19 PUSH1 0x20 PUSH2 0xBE7 PUSH2 0xBE2 PUSH1 0x5 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xC0E PUSH2 0xBF9 ADDRESS PUSH2 0xAB0 JUMP JUMPDEST SWAP3 PUSH2 0xC02 PUSH2 0x113 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xB05 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x467 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xD36 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xD08 JUMPI JUMPDEST POP DUP1 PUSH2 0xC40 PUSH2 0xC3A DUP6 PUSH2 0x17D JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST LT PUSH2 0xCE8 JUMPI POP PUSH2 0xC6E DUP2 PUSH2 0xC68 PUSH2 0xC59 PUSH1 0x2 CALLER SWAP1 PUSH2 0x5BF JUMP JUMPDEST SWAP2 PUSH2 0xC63 DUP4 PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST SWAP1 PUSH2 0x74A JUMP JUMPDEST PUSH2 0xC96 DUP2 PUSH2 0xC90 PUSH2 0xC81 PUSH1 0x3 CALLER SWAP1 PUSH2 0x5BF JUMP JUMPDEST SWAP2 PUSH2 0xC8B DUP4 PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x907 JUMP JUMPDEST SWAP1 PUSH2 0x74A JUMP JUMPDEST PUSH2 0xCA1 CALLER DUP4 SWAP1 PUSH2 0x162E JUMP JUMPDEST CALLER SWAP1 SWAP2 PUSH2 0xCCE PUSH32 0xEB9A8C68A32BC6989217E69F932CF098FF5D0E2F11305800394C73B554D2CE9E SWAP3 PUSH2 0x5B3 JUMP JUMPDEST SWAP3 PUSH2 0xCE3 PUSH2 0xCDA PUSH2 0x113 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x6AF JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST DUP3 PUSH2 0xD04 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x722F6B3 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x6AF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xD29 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xD2F JUMPI JUMPDEST PUSH2 0xD21 DUP2 DUP4 PUSH2 0xADC JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xB1A JUMP JUMPDEST CODESIZE PUSH2 0xC2C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xD17 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST SWAP1 PUSH2 0xD57 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x8059C747 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x6AF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x62F216E5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xD74 PUSH1 0x4 DUP3 ADD PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0xD91 PUSH1 0x4 DUP3 ADD PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xD9E SWAP1 PUSH2 0xA4A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDA8 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0xDB0 PUSH2 0xDDA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDC6 PUSH2 0xDC1 PUSH2 0xDCB SWAP3 PUSH2 0x690 JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH2 0x123 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDD7 SWAP1 PUSH2 0xDB2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDEC PUSH2 0xDE7 PUSH1 0x0 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x17B9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDF6 PUSH2 0xDA0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE00 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0xE08 PUSH2 0xE0A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE12 PUSH2 0x187B JUMP JUMPDEST PUSH32 0xAB35696F06E428EBC5CEBA8CD17F8FED287BAF43440206D1943AF1EE53E6D267 PUSH2 0xE3B PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0xE45 DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xE52 PUSH2 0xDF8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xE70 PUSH2 0xE75 SWAP2 PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0xE59 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE82 SWAP1 SLOAD PUSH2 0xE64 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE8D PUSH2 0xE54 JUMP JUMPDEST POP PUSH2 0xE98 PUSH1 0x0 PUSH2 0xE78 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xEAC SWAP1 PUSH2 0xEA7 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0xEAE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xEB9 DUP2 PUSH1 0x4 PUSH2 0x74A JUMP JUMPDEST PUSH2 0xEEF PUSH32 0x972ABA470577C14606BBF4BBDEC1FED4925F242FCEF40B4A8D242983365D0291 SWAP2 PUSH2 0xEE6 PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18D JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xEFD SWAP1 PUSH2 0xE9B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF10 SWAP1 PUSH2 0xF0B PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0xF79 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF1B DUP2 PUSH2 0x32F JUMP JUMPDEST SUB PUSH2 0xF22 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xF34 DUP3 PUSH2 0xF12 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF50 JUMPI PUSH2 0xF4D SWAP2 PUSH1 0x0 ADD PUSH2 0xF27 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xF77 SWAP3 SWAP5 SWAP4 PUSH2 0xF70 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x45A JUMP JUMPDEST ADD SWAP1 PUSH2 0x180 JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0xF8D PUSH2 0xF87 PUSH1 0x0 PUSH2 0x693 JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST EQ PUSH2 0x114F JUMPI PUSH2 0xFDB PUSH1 0x20 PUSH2 0xFA9 PUSH2 0xFA4 PUSH1 0x5 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xFD0 PUSH2 0xFBB ADDRESS PUSH2 0xAB0 JUMP JUMPDEST SWAP3 PUSH2 0xFC4 PUSH2 0x113 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xB05 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x467 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x114A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x111C JUMPI JUMPDEST POP DUP1 PUSH2 0x1002 PUSH2 0xFFC DUP5 PUSH2 0x17D JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST LT PUSH2 0x10FC JUMPI PUSH2 0x1019 PUSH2 0x1014 PUSH1 0x5 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x20 PUSH4 0xA9059CBB SWAP2 CALLER SWAP1 PUSH2 0x1041 PUSH1 0x0 DUP8 SWAP6 PUSH2 0x104C PUSH2 0x1035 PUSH2 0x113 JUMP JUMPDEST SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0xB05 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xF55 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x10F7 JUMPI PUSH2 0x1069 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x10C9 JUMPI JUMPDEST POP ISZERO PUSH2 0x32F JUMP JUMPDEST PUSH2 0x10A9 JUMPI POP PUSH2 0x10A4 PUSH32 0x4EACC637A5FB1DBBC94595A9432E0A8D75AE5D51D189021963A6CC8575465DDF SWAP2 PUSH2 0x109B PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18D JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST SWAP1 PUSH2 0x10C5 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x722F6B3 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x6AF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x10EA SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x10F0 JUMPI JUMPDEST PUSH2 0x10E2 DUP2 DUP4 PUSH2 0xADC JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xF36 JUMP JUMPDEST CODESIZE PUSH2 0x1062 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x10D8 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST SWAP1 PUSH2 0x1118 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x722F6B3 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x6AF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x113D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1143 JUMPI JUMPDEST PUSH2 0x1135 DUP2 DUP4 PUSH2 0xADC JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xB1A JUMP JUMPDEST CODESIZE PUSH2 0xFEE JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x112B JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x1168 PUSH1 0x4 DUP3 ADD PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1175 SWAP1 PUSH2 0xEFF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1188 SWAP1 PUSH2 0x1183 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0x118A JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x11A6 PUSH2 0x11A0 PUSH2 0x119B PUSH1 0x0 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x12E JUMP JUMPDEST SWAP2 PUSH2 0x12E JUMP JUMPDEST EQ PUSH2 0x11B6 JUMPI PUSH2 0x11B4 SWAP1 PUSH2 0x17B9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x11DB PUSH2 0x11C3 PUSH1 0x0 PUSH2 0xDCE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x467 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E8 SWAP1 PUSH2 0x1177 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x11FB SWAP1 PUSH2 0x11F6 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0x1230 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x1227 PUSH2 0x122E SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x121D PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x45A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x45A JUMP JUMPDEST ADD SWAP1 PUSH2 0x180 JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x1244 PUSH2 0x123E PUSH1 0x0 PUSH2 0x693 JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST EQ PUSH2 0x13D0 JUMPI PUSH2 0x125B PUSH2 0x1256 PUSH1 0x5 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x20 PUSH4 0x23B872DD SWAP2 CALLER SWAP1 PUSH2 0x128C PUSH1 0x0 PUSH2 0x1273 ADDRESS PUSH2 0xAB0 JUMP JUMPDEST SWAP6 PUSH2 0x1297 DUP9 PUSH2 0x1280 PUSH2 0x113 JUMP JUMPDEST SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH2 0xB05 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x11FD JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x13CB JUMPI PUSH2 0x12B4 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x139D JUMPI JUMPDEST POP ISZERO PUSH2 0x32F JUMP JUMPDEST PUSH2 0x12F3 JUMPI PUSH2 0x12EE PUSH32 0xF920186940A9C60FF07B508B49BA5DCA2C647B29AEBFA69964B44E5E873A62C SWAP2 PUSH2 0x12E5 PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18D JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1335 SWAP1 PUSH1 0x20 PUSH2 0x130B PUSH2 0x1306 PUSH1 0x5 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x132A CALLER SWAP3 PUSH2 0x131E PUSH2 0x113 JUMP JUMPDEST SWAP7 DUP8 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xB05 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x467 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1398 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1368 JUMPI JUMPDEST POP PUSH2 0x1364 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x722F6B3 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x6AF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x138A SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1391 JUMPI JUMPDEST PUSH2 0x1382 DUP2 DUP4 PUSH2 0xADC JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xB1A JUMP JUMPDEST SWAP1 DUP3 PUSH2 0x1348 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1378 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x13BE SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x13C4 JUMPI JUMPDEST PUSH2 0x13B6 DUP2 DUP4 PUSH2 0xADC JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xF36 JUMP JUMPDEST CODESIZE PUSH2 0x12AD JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x13AC JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x13E9 PUSH1 0x4 DUP3 ADD PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F6 SWAP1 PUSH2 0x11EA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1400 PUSH2 0xE85 JUMP JUMPDEST PUSH2 0x1419 PUSH2 0x1413 PUSH2 0x140E PUSH2 0x1885 JUMP JUMPDEST PUSH2 0x12E JUMP JUMPDEST SWAP2 PUSH2 0x12E JUMP JUMPDEST SUB PUSH2 0x1420 JUMPI JUMP JUMPDEST PUSH2 0x1443 PUSH2 0x142B PUSH2 0x1885 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x467 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x144F PUSH2 0x1892 JUMP JUMPDEST PUSH2 0x1457 PUSH2 0x14A7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x146E PUSH1 0xFF PUSH1 0xA0 SHL SWAP2 PUSH2 0x1459 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x1481 SWAP1 PUSH2 0x32F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x149C PUSH2 0x1497 PUSH2 0x14A3 SWAP3 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x1484 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x145F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x14B2 PUSH1 0x0 DUP1 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x14BA PUSH2 0x1885 JUMP JUMPDEST PUSH2 0x14F0 PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP2 PUSH2 0x14E7 PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x467 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x14FD PUSH2 0x1447 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x151A PUSH2 0x1514 PUSH2 0x150F PUSH1 0x0 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x12E JUMP JUMPDEST SWAP2 PUSH2 0x12E JUMP JUMPDEST EQ PUSH2 0x1521 JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x153A PUSH1 0x4 DUP3 ADD PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1546 PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x154C JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1565 PUSH1 0x4 DUP3 ADD PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1580 PUSH2 0x157B PUSH2 0x1585 SWAP3 PUSH2 0x1569 JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH2 0x17D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1592 PUSH1 0x2 PUSH2 0x156C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x159F PUSH1 0x1 PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x15B8 PUSH2 0x15B2 PUSH2 0x15AD PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x17D JUMP JUMPDEST SWAP2 PUSH2 0x17D JUMP JUMPDEST EQ PUSH2 0x15D1 JUMPI PUSH2 0x15CF PUSH2 0x15C8 PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x74A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x15EA PUSH1 0x4 DUP3 ADD PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1605 PUSH2 0x1600 PUSH2 0x160A SWAP3 PUSH2 0x15EE JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH2 0x17D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1617 PUSH1 0x1 PUSH2 0x15F1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x162C PUSH2 0x1625 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x1 PUSH2 0x74A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x20 PUSH2 0x1642 PUSH2 0x163D PUSH1 0x5 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST PUSH4 0xA9059CBB SWAP3 SWAP1 PUSH2 0x1667 PUSH1 0x0 DUP7 SWAP6 PUSH2 0x1672 PUSH2 0x165B PUSH2 0x113 JUMP JUMPDEST SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0xB05 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xF55 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1776 JUMPI PUSH2 0x168F SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1748 JUMPI JUMPDEST POP ISZERO PUSH2 0x32F JUMP JUMPDEST PUSH2 0x1696 JUMPI POP JUMP JUMPDEST PUSH2 0x16E0 SWAP1 PUSH1 0x20 PUSH2 0x16AE PUSH2 0x16A9 PUSH1 0x5 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x16D5 PUSH2 0x16C0 ADDRESS PUSH2 0xAB0 JUMP JUMPDEST SWAP3 PUSH2 0x16C9 PUSH2 0x113 JUMP JUMPDEST SWAP7 DUP8 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xB05 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x467 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1743 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1713 JUMPI JUMPDEST POP PUSH2 0x170F PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x722F6B3 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x6AF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1735 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x173C JUMPI JUMPDEST PUSH2 0x172D DUP2 DUP4 PUSH2 0xADC JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xB1A JUMP JUMPDEST SWAP1 DUP3 PUSH2 0x16F3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1723 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x1769 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x176F JUMPI JUMPDEST PUSH2 0x1761 DUP2 DUP4 PUSH2 0xADC JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xF36 JUMP JUMPDEST CODESIZE PUSH2 0x1688 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1757 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST SWAP1 PUSH2 0x178C PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x70E JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x17AE PUSH2 0x17A9 PUSH2 0x17B5 SWAP3 PUSH2 0x5B3 JUMP JUMPDEST PUSH2 0x1796 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x177B JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x17C3 PUSH1 0x0 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x17CE DUP3 PUSH1 0x0 PUSH2 0x1799 JUMP JUMPDEST SWAP1 PUSH2 0x1802 PUSH2 0x17FC PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x5B3 JUMP JUMPDEST SWAP2 PUSH2 0x5B3 JUMP JUMPDEST SWAP2 PUSH2 0x180B PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH2 0x1815 DUP2 PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x1822 PUSH2 0x153E JUMP JUMPDEST PUSH2 0x182A PUSH2 0x182C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1838 PUSH1 0x1 PUSH1 0x0 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x1840 PUSH2 0x1885 JUMP JUMPDEST PUSH2 0x1876 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0x186D PUSH2 0x113 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x467 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1883 PUSH2 0x181A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x188D PUSH2 0xE54 JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST PUSH2 0x18A3 PUSH2 0x189D PUSH2 0xA15 JUMP JUMPDEST ISZERO PUSH2 0x32F JUMP JUMPDEST PUSH2 0x18A9 JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x18C2 PUSH1 0x4 DUP3 ADD PUSH2 0x1E8 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 DUP12 DUP13 DUP4 AND EXP DUP5 PUSH1 0x33 0xD 0xD0 EXP PUSH17 0xFD0986BD66994083215A0D4939D1603B3A NUMBER PUSH1 0x64 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
              "sourceMap": "435:9363:8:-:0;;;;;;;;;-1:-1:-1;435:9363:8;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;5228:127::-;5326:24;;5228:127;5304:7;;:::i;:::-;5326:18;;:24;:::i;:::-;;:::i;:::-;5319:31;:::o;1500:62:0:-;;;:::i;:::-;1554:1;;:::i;:::-;1500:62::o;9015:88:8:-;;;:::i;:::-;9080:18;;;:::i;:::-;;;;;:::i;:::-;;;;9015:88::o;:::-;;;:::i;:::-;:::o;1500:62:0:-;;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;435:9363:8:-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;4444:390::-;4540:4;;;:::i;:::-;4556:6;:11;;4566:1;4556:11;:::i;:::-;;;:::i;:::-;;4552:54;;4637:19;;:13;4651:4;4637:19;;:::i;:::-;;:::i;:::-;4666:14;:23;;4683:6;4666:23;:::i;:::-;;;:::i;:::-;;4662:93;;4784:6;4761:29;4784:6;4761:29;:19;:13;4775:4;4761:19;;:::i;:::-;:29;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;4802:27;;;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;4444:390::o;4662:93::-;4725:6;4706:42;;;;;;;;;;;;;;:::i;:::-;;;;4552:54;4584:15;;;;;;;;;;;;:::i;:::-;;;;4444:390;;;;;:::i;:::-;:::o;435:9363::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;:::i;5868:186::-;5949:7;;:::i;:::-;5968:12;;;;:::i;:::-;:17;;5984:1;5968:17;:::i;:::-;;;:::i;:::-;;5964:46;;6023:26;:11;6037:12;;;:::i;:::-;6023:26;;:::i;:::-;6016:33;:::o;5964:46::-;6002:1;5995:8;6002:1;5995:8;:::i;:::-;;:::o;1500:62:0:-;;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;435:9363:8:-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;4031:234::-;4122:4;;;:::i;:::-;4138:6;:11;;4148:1;4138:11;:::i;:::-;;;:::i;:::-;;4134:54;;4194:29;4217:6;4194:29;:19;:13;4208:4;4194:19;;:::i;:::-;:29;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;4235:25;;;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;4031:234::o;4134:54::-;4166:15;4584;;;4166;;;;;;;;:::i;:::-;;;;4031:234;;;;;:::i;:::-;:::o;435:9363::-;;;:::o;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;1726:84:6:-;1773:4;;:::i;:::-;1796:7;;;;:::i;:::-;1789:14;:::o;4970:108:8:-;5054:19;;4970:108;5032:7;;:::i;:::-;5054:13;;:19;:::i;:::-;;:::i;:::-;5047:26;:::o;1315:72:6:-;1379:1;1315:72;;;:::i;:::-;1379:1;:::i;:::-;1315:72::o;2466:103:7:-;2531:1;2466:103;;;:::i;:::-;2531:1;:::i;:::-;;;:::i;:::-;2466:103::o;435:9363:8:-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;6254:1110;6353:10;;;:::i;:::-;6375:11;:16;;6390:1;6375:16;:::i;:::-;;;:::i;:::-;;6371:59;;6477:12;;;:::i;:::-;:17;;6493:1;6477:17;:::i;:::-;;;:::i;:::-;;6473:65;;6600:25;;:13;6614:10;6600:25;;:::i;:::-;;:::i;:::-;6635:11;:25;;6649:11;6635:25;:::i;:::-;;;:::i;:::-;;6631:97;;6784:11;:26;:11;6798:12;;;:::i;:::-;6784:26;;:::i;:::-;6884:9;:34;;:19;:9;;;:::i;:::-;:19;:::i;:::-;;6912:4;6884:34;6904:13;6912:4;6904:13;:::i;:::-;6884:34;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;6254:1110;6854:64;6928:19;:32;;6950:10;6928:32;:::i;:::-;;;:::i;:::-;;6924:116;;7110:11;7081:40;7110:11;7081:40;:25;:13;7095:10;7081:25;;:::i;:::-;:40;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;7163:45;7197:11;7163:45;:30;:18;7182:10;7163:30;;:::i;:::-;:45;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;7270:10;7258;7270;;;:::i;:::-;7323;7335:11;7348:10;7311:48;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;6254:1110::o;6924:116::-;7001:10;6977:56;;;;;;;;;;;;;;:::i;:::-;;;;6884:34;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;6631:97::-;6677:44;;;4706:42;;;;;;6677:44;;;;;;:::i;:::-;;;;6473:65;6511:20;;;;;;;;;;;;:::i;:::-;;;;6371:59;6408:15;4584;;;6408;;;;;;;;:::i;:::-;;;;6254:1110;;;;:::i;:::-;:::o;1500:62:0:-;;;:::i;:::-;1554:1;;:::i;:::-;1500:62::o;435:9363:8:-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;2293:101:0:-;2376:10;;2384:1;2376:10;:::i;:::-;;:::i;:::-;2293:101::o;:::-;;;:::i;:::-;:::o;1500:62::-;;;:::i;:::-;1554:1;;:::i;:::-;1500:62::o;8830:82:8:-;;;:::i;:::-;8891:16;;;:::i;:::-;;;;;:::i;:::-;;;;8830:82::o;:::-;;;:::i;:::-;:::o;435:9363::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;1638:85:0:-;1684:7;;:::i;:::-;1710:6;;;;:::i;:::-;1703:13;:::o;1500:62::-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;5575:121:8:-;5639:19;5654:4;5639:19;;:::i;:::-;5670:21;;;;;:::i;:::-;;;;;;:::i;:::-;;;;5575:121::o;:::-;;;;:::i;:::-;:::o;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;435:9363:8:-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;8046:556::-;8113:6;:11;;8123:1;8113:11;:::i;:::-;;;:::i;:::-;;8109:54;;8232:34;;:19;:9;;;:::i;:::-;:19;:::i;:::-;;8260:4;8232:34;8252:13;8260:4;8252:13;:::i;:::-;8232:34;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;8046:556;8206:60;8276:15;:24;;8294:6;8276:24;:::i;:::-;;;:::i;:::-;;8272:100;;8437:18;:9;;;:::i;:::-;:18;:::i;:::-;:38;:18;8456:10;;8468:6;8437:38;;8468:6;8437:38;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;8485:8;8437:38;;;;;8046:556;8422:53;8485:8;;:::i;:::-;8481:84;;8590:6;8576:21;;;;;:::i;:::-;;;;;;:::i;:::-;;;;8046:556::o;8481:84::-;8510:48;;;6977:56;;;;;;8510:48;;;;;;:::i;:::-;;;;8437:38;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;8272:100::-;8317:48;;;6977:56;;;;;;8317:48;;;;;;:::i;:::-;;;;8232:34;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;8109:54::-;8141:15;4584;;;8141;;;;;;;;:::i;:::-;;;;8046:556;;;;:::i;:::-;:::o;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;2543:215::-;2627:8;:22;;2639:10;2647:1;2639:10;:::i;:::-;2627:22;:::i;:::-;;;:::i;:::-;;2623:91;;2742:8;;;:::i;:::-;2543:215::o;2623:91::-;2672:31;2692:10;2700:1;2692:10;:::i;:::-;2672:31;;;;;;;;;;;;;:::i;:::-;;;;2543:215;;;;:::i;:::-;:::o;1500:62::-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;435:9363:8:-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;7553:381::-;7619:6;:11;;7629:1;7619:11;:::i;:::-;;;:::i;:::-;;7615:54;;7734:22;:9;;;:::i;:::-;:22;:::i;:::-;:57;:22;7757:10;;7777:4;7734:57;;7769:13;7777:4;7769:13;:::i;:::-;7784:6;7734:57;7784:6;7734:57;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;7801:8;7734:57;;;;;7553:381;7719:72;7801:8;;:::i;:::-;7797:100;;7908:21;;;;;:::i;:::-;;;;;;:::i;:::-;;;;7553:381::o;7797:100::-;7858:31;7850:6;7858:31;:19;:9;;;:::i;:::-;:19;:::i;:::-;;7878:10;7858:31;7878:10;7858:31;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;7797:100;7826:64;;;6977:56;;;;;;7826:64;;;;;;:::i;:::-;;;;7858:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;7734:57::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;7615:54::-;7647:15;4584;;;7647;;;;;;;;:::i;:::-;;;;7553:381;;;;:::i;:::-;:::o;1796:162:0:-;1855:7;;:::i;:::-;:23;;1866:12;;:::i;:::-;1855:23;:::i;:::-;;;:::i;:::-;;1851:101;;1796:162::o;1851:101::-;1901:40;1928:12;;:::i;:::-;1901:40;;;;;;;;;;;;;:::i;:::-;;;;1565:66:6;;;:::i;:::-;1623:1;;:::i;:::-;1565:66::o;435:9363:8:-;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;2586:117:6:-;2644:15;2654:5;2644:15;;:::i;:::-;2683:12;;:::i;:::-;2674:22;;;;;:::i;:::-;;;;;;:::i;:::-;;;;2586:117::o;:::-;;;:::i;:::-;:::o;9671:125:8:-;9734:18;;9742:10;9750:1;9742:10;:::i;:::-;9734:18;:::i;:::-;;;:::i;:::-;;9730:62;;9671:125::o;9730:62::-;9769:16;;;;;;;;;;;;:::i;:::-;;;;1878:128:6;1943:8;;:::i;:::-;1939:61;;1878:128::o;1939:61::-;1974:15;;;;;;;;;;;;:::i;:::-;;;;435:9363:8;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1864:36:7:-;1899:1;;;:::i;:::-;1864:36;:::o;2575:307::-;2702:7;;;:::i;:::-;:18;;2713:7;;:::i;:::-;2702:18;:::i;:::-;;;:::i;:::-;;2698:86;;2858:17;2868:7;;:::i;:::-;2858:17;;:::i;:::-;2575:307::o;2698:86::-;2743:30;;;;;;;;;;;;:::i;:::-;;;;435:9363:8;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1818:40:7:-;1857:1;;;:::i;:::-;1818:40;:::o;2888:208::-;3068:21;3078:11;;:::i;:::-;3068:21;;:::i;:::-;2888:208::o;9329:247:8:-;9409:30;:18;:9;;;:::i;:::-;:18;:::i;:::-;;9428:2;9432:6;9409:30;;9432:6;9409:30;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;9449:8;9409:30;;;;;9329:247;9394:45;9449:8;;:::i;:::-;9445:127;;9329:247;:::o;9445:127::-;9523:34;9507:6;9523:34;:19;:9;;;:::i;:::-;:19;:::i;:::-;;9551:4;9523:34;9543:13;9551:4;9543:13;:::i;:::-;9523:34;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;9445:127;9474:91;;;6977:56;;;;;;9474:91;;;;;;:::i;:::-;;;;9523:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;9409:30::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;435:9363::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;2912:187:0:-;3004:6;;;:::i;:::-;3020:17;3029:8;3020:17;;:::i;:::-;3083:8;3052:40;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;2912:187::o;1315:72:6:-;;;:::i;:::-;1379:1;;:::i;:::-;1315:72::o;2339:115::-;2398:14;2408:4;2398:14;;:::i;:::-;2434:12;;:::i;:::-;2427:20;;;;;:::i;:::-;;;;;;:::i;:::-;;;;2339:115::o;:::-;;;:::i;:::-;:::o;656:96:5:-;709:7;;:::i;:::-;735:10;;728:17;:::o;2078:126:6:-;2140:9;2141:8;;:::i;:::-;2140:9;;:::i;:::-;2136:62;;2078:126::o;2136:62::-;2172:15;;;;;;;;;;;;:::i;:::-;;;"
            },
            "methodIdentifiers": {
              "addPoints(address,uint256)": "507cd30f",
              "calculateUSDCAmount(uint256)": "4cabb824",
              "claimUSDC(uint256)": "6e5f4a89",
              "depositUSDC(uint256)": "f688bcfb",
              "getPointBalance(address)": "5f42513c",
              "getTotalClaimedPoints(address)": "1e2393ea",
              "owner()": "8da5cb5b",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "renounceOwnership()": "715018a6",
              "setExchangeRate(uint256)": "db068e0e",
              "subtractPoints(address,uint256)": "4a222b35",
              "transferOwnership(address)": "f2fde38b",
              "unpause()": "3f4ba83a",
              "withdrawUSDC(uint256)": "db81f99b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdcToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ContractIsPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExchangeRateNotSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"}],\"name\":\"InsufficientPoints\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"}],\"name\":\"InsufficientUSDCBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ContractPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ContractUnpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"ExchangeRateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PointsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PointsRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pointsUsed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"USDCClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"USDCDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"USDCWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pointAmount\",\"type\":\"uint256\"}],\"name\":\"calculateUSDCAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pointAmount\",\"type\":\"uint256\"}],\"name\":\"claimUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getPointBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getTotalClaimedPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setExchangeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"subtractPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Oto Team\",\"details\":\"A contract for managing point-based USDC rewards for users who upload conversation data\",\"errors\":{\"ContractIsPaused()\":[{\"details\":\"Thrown when contract is paused and operation is not allowed\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExchangeRateNotSet()\":[{\"details\":\"Thrown when exchange rate is not set (zero)\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InsufficientPoints(uint256,uint256)\":[{\"details\":\"Thrown when user has insufficient points for the requested operation\",\"params\":{\"available\":\"The amount of points available\",\"required\":\"The amount of points required\"}}],\"InsufficientUSDCBalance(uint256,uint256)\":[{\"details\":\"Thrown when contract has insufficient USDC balance for the requested operation\",\"params\":{\"available\":\"The amount of USDC available\",\"required\":\"The amount of USDC required\"}}],\"InvalidAddress()\":[{\"details\":\"Thrown when an invalid address (zero address) is provided\"}],\"InvalidAmount()\":[{\"details\":\"Thrown when an invalid amount (zero or negative) is provided\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"Unauthorized()\":[{\"details\":\"Thrown when unauthorized access is attempted\"}]},\"events\":{\"ContractPaused()\":{\"details\":\"Emitted when contract is paused\"},\"ContractUnpaused()\":{\"details\":\"Emitted when contract is unpaused\"},\"ExchangeRateSet(uint256)\":{\"details\":\"Emitted when exchange rate is updated\",\"params\":{\"newRate\":\"The new exchange rate\"}},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"PointsAdded(address,uint256)\":{\"details\":\"Emitted when points are added to a user's balance\",\"params\":{\"amount\":\"The amount of points added\",\"user\":\"The user address\"}},\"PointsRemoved(address,uint256)\":{\"details\":\"Emitted when points are removed from a user's balance\",\"params\":{\"amount\":\"The amount of points removed\",\"user\":\"The user address\"}},\"USDCClaimed(address,uint256,uint256)\":{\"details\":\"Emitted when USDC is claimed by a user\",\"params\":{\"pointsUsed\":\"The amount of points used\",\"usdcAmount\":\"The amount of USDC claimed\",\"user\":\"The user address\"}},\"USDCDeposited(uint256)\":{\"details\":\"Emitted when USDC is deposited to the contract\",\"params\":{\"amount\":\"The amount of USDC deposited\"}},\"USDCWithdrawn(uint256)\":{\"details\":\"Emitted when USDC is withdrawn from the contract\",\"params\":{\"amount\":\"The amount of USDC withdrawn\"}},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"addPoints(address,uint256)\":{\"details\":\"Adds points to a user's balance (only owner)\",\"params\":{\"amount\":\"The amount of points to add\",\"user\":\"The user address to add points to\"}},\"calculateUSDCAmount(uint256)\":{\"details\":\"Calculates the USDC amount for a given point amount\",\"params\":{\"pointAmount\":\"The amount of points to convert\"},\"returns\":{\"_0\":\"The equivalent USDC amount in wei\"}},\"claimUSDC(uint256)\":{\"details\":\"Allows users to claim USDC by spending their points\",\"params\":{\"pointAmount\":\"The amount of points to spend for USDC\"}},\"constructor\":{\"details\":\"Constructor to initialize the contract with USDC token address\",\"params\":{\"_usdcToken\":\"The address of the USDC token contract\"}},\"depositUSDC(uint256)\":{\"details\":\"Deposits USDC to the contract (only owner)\",\"params\":{\"amount\":\"The amount of USDC to deposit\"}},\"getPointBalance(address)\":{\"details\":\"Gets the point balance of a user\",\"params\":{\"user\":\"The user address to check\"},\"returns\":{\"_0\":\"The point balance of the user\"}},\"getTotalClaimedPoints(address)\":{\"details\":\"Gets the total claimed points of a user\",\"params\":{\"user\":\"The user address to check\"},\"returns\":{\"_0\":\"The total claimed points of the user\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Pauses the contract (only owner)\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setExchangeRate(uint256)\":{\"details\":\"Sets the exchange rate from points to USDC (only owner)\",\"params\":{\"rate\":\"The new exchange rate (1 point = rate USDC wei)\"}},\"subtractPoints(address,uint256)\":{\"details\":\"Subtracts points from a user's balance (only owner)\",\"params\":{\"amount\":\"The amount of points to subtract\",\"user\":\"The user address to subtract points from\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Unpauses the contract (only owner)\"},\"withdrawUSDC(uint256)\":{\"details\":\"Withdraws USDC from the contract (only owner)\",\"params\":{\"amount\":\"The amount of USDC to withdraw\"}}},\"stateVariables\":{\"exchangeRate\":{\"details\":\"Exchange rate from points to USDC (1 point = exchangeRate USDC wei)\"},\"pointBalances\":{\"details\":\"Mapping of user addresses to their point balances\"},\"totalClaimedPoints\":{\"details\":\"Mapping of user addresses to their total claimed points\"},\"usdcToken\":{\"details\":\"USDC token contract interface\"}},\"title\":\"USDCRewardContract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"pause()\":{\"notice\":\"When paused, user functions like claimUSDC are disabled, but admin functions remain available\"},\"unpause()\":{\"notice\":\"Restores normal contract functionality\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/USDCRewardContract.sol\":\"USDCRewardContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/USDCRewardContract.sol\":{\"keccak256\":\"0xda01811d37f6e15b643698e742c487f3930aea2cc4c6af2c68075f630429d1c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2232fe2fac02684301dc663ecff62e6a8bd23e47e7adc0901323da1c90ee2f66\",\"dweb:/ipfs/QmcPnLe6ZuGL9TTKh2WksRcstS6RRNm1jajUGfnXt5wVhV\"]}},\"version\":1}"
        }
      },
      "contracts/mock/MockERC20.sol": {
        "MockERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                },
                {
                  "internalType": "uint8",
                  "name": "decimals_",
                  "type": "uint8"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_available_length_string_fromMemory": {
                  "entryPoint": 246,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_decode_string_fromMemory": {
                  "entryPoint": 300,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_stringt_stringt_uint8_fromMemory": {
                  "entryPoint": 377,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_uint8_fromMemory": {
                  "entryPoint": 362,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": 1505,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_address_uint256_uint256": {
                  "entryPoint": 1769,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 1518,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256": {
                  "entryPoint": 1940,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_to_uint256": {
                  "entryPoint": 1756,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "allocate_memory": {
                  "entryPoint": 135,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 53,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_string": {
                  "entryPoint": 176,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": 880,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_string": {
                  "entryPoint": 812,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 1889,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_rational_by_uint8": {
                  "entryPoint": 635,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 694,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 1065,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "cleanup_address": {
                  "entryPoint": 1493,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint256": {
                  "entryPoint": 1720,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": 663,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by": {
                  "entryPoint": 1439,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 1442,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": 610,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint8": {
                  "entryPoint": 335,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clear_storage_range_bytes1": {
                  "entryPoint": 1033,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "constructor_ERC20": {
                  "entryPoint": 1415,
                  "id": 336,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "constructor_MockERC20": {
                  "entryPoint": 747,
                  "id": 1713,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "convert_address_to_address": {
                  "entryPoint": 1678,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 1481,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 1453,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": 666,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 1666,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 1638,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 943,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint8_to_uint8": {
                  "entryPoint": 547,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_arguments_for_constructor_object_MockERC20": {
                  "entryPoint": 481,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 3
                },
                "copy_byte_array_to_storage_from_string_to_string": {
                  "entryPoint": 1196,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 209,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "divide_by_ceil": {
                  "entryPoint": 891,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 838,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_uint256": {
                  "entryPoint": 1723,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": 1178,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 96,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_mint": {
                  "entryPoint": 1540,
                  "id": 639,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_update": {
                  "entryPoint": 1962,
                  "id": 606,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": 544,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_uint256_of_address": {
                  "entryPoint": 1690,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mask_bytes_dynamic": {
                  "entryPoint": 1156,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 613,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x22": {
                  "entryPoint": 816,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 74,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_uint256": {
                  "entryPoint": 971,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint8": {
                  "entryPoint": 575,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint256": {
                  "entryPoint": 1743,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
                  "entryPoint": 166,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
                  "entryPoint": 171,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": 161,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 59,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 156,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 64,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 516,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_dynamic": {
                  "entryPoint": 901,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": 1714,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned_dynamic": {
                  "entryPoint": 1152,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "storage_set_to_zero_uint256": {
                  "entryPoint": 1013,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_byte_slice_dynamic32": {
                  "entryPoint": 905,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 1834,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_0": {
                  "entryPoint": 522,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_string_to_string": {
                  "entryPoint": 1403,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_uint256_to_uint256": {
                  "entryPoint": 1857,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_uint8_to_uint8": {
                  "entryPoint": 578,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_uint256_to_uint256": {
                  "entryPoint": 974,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "validator_revert_uint8": {
                  "entryPoint": 341,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "wrapping_add_uint256": {
                  "entryPoint": 1926,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "wrapping_sub_uint256": {
                  "entryPoint": 1820,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint256": {
                  "entryPoint": 1008,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x30 JUMPI PUSH2 0x1A PUSH2 0x14 PUSH2 0x1E1 JUMP JUMPDEST SWAP2 PUSH2 0x2EB JUMP JUMPDEST PUSH2 0x22 PUSH2 0x35 JUMP JUMPDEST PUSH2 0xEBB PUSH2 0x922 DUP3 CODECOPY PUSH2 0xEBB SWAP1 RETURN JUMPDEST PUSH2 0x3B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x6A SWAP1 PUSH2 0x40 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x82 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x4A JUMP JUMPDEST SWAP1 PUSH2 0x9A PUSH2 0x93 PUSH2 0x35 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x60 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xCC JUMPI PUSH2 0xC8 PUSH1 0x20 SWAP2 PUSH2 0x40 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x4A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xE5 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0xD4 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x10B PUSH2 0x106 DUP3 PUSH2 0xB0 JUMP JUMPDEST PUSH2 0x87 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 DUP3 DUP5 ADD GT PUSH2 0x127 JUMPI PUSH2 0x125 SWAP3 PUSH2 0xD1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xAB JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x14A JUMPI DUP2 PUSH1 0x20 PUSH2 0x147 SWAP4 MLOAD SWAP2 ADD PUSH2 0xF6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA6 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x15E DUP2 PUSH2 0x14F JUMP JUMPDEST SUB PUSH2 0x165 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x177 DUP3 PUSH2 0x155 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x1DC JUMPI PUSH1 0x0 DUP3 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1D7 JUMPI DUP4 PUSH2 0x1A3 SWAP2 DUP5 ADD PUSH2 0x12C JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP4 ADD MLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1D2 JUMPI PUSH2 0x1C6 DUP2 PUSH2 0x1CF SWAP4 DUP7 ADD PUSH2 0x12C JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x16A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA1 JUMP JUMPDEST PUSH2 0xA1 JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH2 0x1FF PUSH2 0x17DD DUP1 CODESIZE SUB DUP1 PUSH2 0x1F4 DUP2 PUSH2 0x87 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0x179 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x216 PUSH1 0xFF SWAP2 PUSH2 0x204 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x232 PUSH2 0x23C SWAP3 PUSH2 0x14F JUMP JUMPDEST PUSH2 0x220 JUMP JUMPDEST PUSH2 0x14F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x257 PUSH2 0x252 PUSH2 0x25E SWAP3 PUSH2 0x223 JUMP JUMPDEST PUSH2 0x23F JUMP JUMPDEST DUP3 SLOAD PUSH2 0x20A JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x284 SWAP1 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x4D DUP2 GT PUSH2 0x292 JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST PUSH2 0x265 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2AE PUSH2 0x2A9 PUSH2 0x2B3 SWAP3 PUSH2 0x297 JUMP JUMPDEST PUSH2 0x220 JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x2CB SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x262 JUMP JUMPDEST SWAP3 PUSH2 0x262 JUMP JUMPDEST SWAP2 PUSH2 0x2D7 DUP4 DUP3 MUL PUSH2 0x262 JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2E6 JUMPI JUMP JUMPDEST PUSH2 0x265 JUMP JUMPDEST PUSH2 0x32A SWAP3 SWAP2 PUSH2 0x2F9 SWAP2 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x304 DUP2 PUSH1 0x5 PUSH2 0x242 JUMP JUMPDEST PUSH2 0x324 CALLER SWAP2 PUSH2 0x31F PUSH2 0x319 PUSH3 0xF4240 SWAP3 PUSH2 0x27B JUMP JUMPDEST SWAP2 PUSH2 0x29A JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST SWAP1 PUSH2 0x604 JUMP JUMPDEST JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x366 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x361 JUMPI JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x356 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1F PUSH1 0x20 SWAP2 ADD DIV SWAP1 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x8 PUSH2 0x3A5 SWAP2 MUL SWAP2 PUSH2 0x39F PUSH1 0x0 NOT DUP5 PUSH2 0x385 JUMP JUMPDEST SWAP3 PUSH2 0x385 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x3C3 PUSH2 0x3BE PUSH2 0x3C8 SWAP3 PUSH2 0x262 JUMP JUMPDEST PUSH2 0x220 JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3E4 PUSH2 0x3DF PUSH2 0x3EC SWAP4 PUSH2 0x3AF JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x389 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x407 SWAP2 PUSH2 0x401 PUSH2 0x3F0 JUMP JUMPDEST SWAP2 PUSH2 0x3CE JUMP JUMPDEST JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT PUSH2 0x415 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x423 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x3F5 JUMP JUMPDEST ADD PUSH2 0x40A JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x439 JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x445 PUSH2 0x46A SWAP4 PUSH2 0x370 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x451 DUP5 PUSH2 0x37B JUMP JUMPDEST DUP4 ADD SWAP4 LT PUSH2 0x472 JUMPI JUMPDEST PUSH2 0x463 SWAP1 PUSH2 0x37B JUMP JUMPDEST ADD SWAP1 PUSH2 0x409 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x434 JUMP JUMPDEST SWAP2 POP PUSH2 0x463 DUP2 SWAP3 SWAP1 POP PUSH2 0x45A JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x495 SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x8 MUL PUSH2 0x480 JUMP JUMPDEST NOT AND SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x4A4 SWAP2 PUSH2 0x484 JUMP JUMPDEST SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x4B6 DUP2 PUSH2 0x32C JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x576 JUMPI PUSH2 0x4D8 DUP3 PUSH2 0x4D2 DUP6 SLOAD PUSH2 0x346 JUMP JUMPDEST DUP6 PUSH2 0x429 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x50D JUMPI SWAP2 DUP1 SWAP2 PUSH2 0x4FC SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x501 JUMPI JUMPDEST POP POP PUSH2 0x49A JUMP JUMPDEST SWAP1 SSTORE JUMPDEST JUMP JUMPDEST SWAP1 SWAP2 POP ADD MLOAD CODESIZE DUP1 PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x51C DUP6 PUSH2 0x370 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x55E JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x544 JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE PUSH2 0x4FF JUMP JUMPDEST PUSH2 0x554 SWAP2 ADD MLOAD PUSH1 0x1F DUP5 AND SWAP1 PUSH2 0x484 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x538 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x520 JUMP JUMPDEST PUSH2 0x4A JUMP JUMPDEST SWAP1 PUSH2 0x585 SWAP2 PUSH2 0x4AC JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x596 PUSH2 0x59D SWAP3 PUSH1 0x3 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x4 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0x5BC PUSH2 0x5C6 SWAP3 PUSH2 0x59F JUMP JUMPDEST PUSH2 0x220 JUMP JUMPDEST PUSH2 0x5A2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x5D2 SWAP1 PUSH2 0x5AD JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x5DE SWAP1 PUSH2 0x5A2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x5EA SWAP1 PUSH2 0x5D5 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x602 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x5E1 JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x620 PUSH2 0x61A PUSH2 0x615 PUSH1 0x0 PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST SWAP2 PUSH2 0x5D5 JUMP JUMPDEST EQ PUSH2 0x63D JUMPI PUSH2 0x63B SWAP2 PUSH2 0x633 PUSH1 0x0 PUSH2 0x5C9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x7AA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x662 PUSH2 0x64A PUSH1 0x0 PUSH2 0x5C9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x5EE JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x67A PUSH2 0x675 PUSH2 0x67F SWAP3 PUSH2 0x5A2 JUMP JUMPDEST PUSH2 0x220 JUMP JUMPDEST PUSH2 0x5A2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x68B SWAP1 PUSH2 0x666 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x697 SWAP1 PUSH2 0x682 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x6A4 SWAP1 PUSH2 0x68E JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6C7 PUSH2 0x6CC SWAP2 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x6B8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6D9 SWAP1 SLOAD PUSH2 0x6BB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6E5 SWAP1 PUSH2 0x262 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x713 PUSH2 0x71A SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x709 PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x6DC JUMP JUMPDEST ADD SWAP1 PUSH2 0x6DC JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x727 SWAP2 SUB PUSH2 0x262 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x737 PUSH1 0x0 NOT SWAP2 PUSH2 0x204 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x756 PUSH2 0x751 PUSH2 0x75D SWAP3 PUSH2 0x3AF JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST DUP3 SLOAD PUSH2 0x72A JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x770 PUSH2 0x776 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x262 JUMP JUMPDEST SWAP3 PUSH2 0x262 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x781 JUMPI JUMP JUMPDEST PUSH2 0x265 JUMP JUMPDEST SWAP1 PUSH2 0x791 SWAP2 ADD PUSH2 0x262 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x7A8 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x6DC JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 PUSH2 0x7C9 PUSH2 0x7C3 PUSH2 0x7BE PUSH1 0x0 PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST SWAP2 PUSH2 0x5D5 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x8AE JUMPI PUSH2 0x7EE PUSH2 0x7E7 DUP4 PUSH2 0x7E2 PUSH1 0x2 PUSH2 0x6CF JUMP JUMPDEST PUSH2 0x761 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x741 JUMP JUMPDEST JUMPDEST DUP3 PUSH2 0x80B PUSH2 0x805 PUSH2 0x800 PUSH1 0x0 PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST SWAP2 PUSH2 0x5D5 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x881 JUMPI PUSH2 0x830 PUSH2 0x829 DUP4 PUSH2 0x824 PUSH1 0x2 PUSH2 0x6CF JUMP JUMPDEST PUSH2 0x71C JUMP JUMPDEST PUSH1 0x2 PUSH2 0x741 JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x87C PUSH2 0x86A PUSH2 0x864 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0x68E JUMP JUMPDEST SWAP4 PUSH2 0x68E JUMP JUMPDEST SWAP4 PUSH2 0x873 PUSH2 0x35 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x794 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x8A9 DUP3 PUSH2 0x8A3 PUSH2 0x894 PUSH1 0x0 DUP8 SWAP1 PUSH2 0x69A JUMP JUMPDEST SWAP2 PUSH2 0x89E DUP4 PUSH2 0x6CF JUMP JUMPDEST PUSH2 0x786 JUMP JUMPDEST SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x831 JUMP JUMPDEST PUSH2 0x8C2 PUSH2 0x8BD PUSH1 0x0 DUP4 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH2 0x6CF JUMP JUMPDEST DUP1 PUSH2 0x8D5 PUSH2 0x8CF DUP6 PUSH2 0x262 JUMP JUMPDEST SWAP2 PUSH2 0x262 JUMP JUMPDEST LT PUSH2 0x8FE JUMPI PUSH2 0x8E8 PUSH2 0x8F9 SWAP2 DUP5 SWAP1 PUSH2 0x71C JUMP JUMPDEST PUSH2 0x8F4 PUSH1 0x0 DUP5 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH2 0x741 JUMP JUMPDEST PUSH2 0x7EF JUMP JUMPDEST SWAP1 PUSH2 0x91D SWAP1 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x6E9 JUMP JUMPDEST SUB SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0x554 JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x9B JUMPI PUSH4 0xDD62ED3E SUB PUSH2 0xE JUMPI PUSH2 0x51E JUMP JUMPDEST PUSH2 0x4BA JUMP JUMPDEST PUSH2 0x486 JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x266 JUMP JUMPDEST PUSH2 0x179 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xEE JUMPI JUMP JUMPDEST PUSH2 0xDE JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x114 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x103 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x157 PUSH1 0x20 SWAP4 PUSH2 0x15C SWAP4 PUSH2 0x145 DUP2 PUSH2 0xF3 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP4 PUSH2 0xF7 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x100 JUMP JUMPDEST PUSH2 0x125 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x176 SWAP2 PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x12F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x1A9 JUMPI PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x194 PUSH2 0x6BB JUMP JUMPDEST PUSH2 0x19C PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x160 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1C2 SWAP1 PUSH2 0x1AE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1CE DUP2 PUSH2 0x1B9 JUMP JUMPDEST SUB PUSH2 0x1D5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1E7 DUP3 PUSH2 0x1C5 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1F5 DUP2 PUSH2 0x1E9 JUMP JUMPDEST SUB PUSH2 0x1FC JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x20E DUP3 PUSH2 0x1EC JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x239 JUMPI DUP1 PUSH2 0x22D PUSH2 0x236 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x1DA JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x201 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDE JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x24C SWAP1 PUSH2 0x23E JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x264 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x243 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x297 JUMPI PUSH2 0x293 PUSH2 0x282 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x210 JUMP JUMPDEST SWAP1 PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x28A PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x250 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST PUSH2 0x2A5 SWAP1 PUSH2 0x1E9 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2BD SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x29C JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0xE3 JUMP JUMPDEST PUSH2 0x2EB PUSH2 0x2DA PUSH2 0x727 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x32A JUMPI PUSH2 0x327 PUSH2 0x310 DUP5 PUSH1 0x0 DUP6 ADD PUSH2 0x1DA JUMP JUMPDEST SWAP4 PUSH2 0x31E DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x1DA JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x201 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDE JUMP JUMPDEST CALLVALUE PUSH2 0x360 JUMPI PUSH2 0x35C PUSH2 0x34B PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F4 JUMP JUMPDEST SWAP2 PUSH2 0x73D JUMP JUMPDEST PUSH2 0x353 PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x250 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x374 SWAP1 PUSH2 0x365 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x38C SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x36B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x3BE JUMPI PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0xE3 JUMP JUMPDEST PUSH2 0x3BA PUSH2 0x3A9 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x3B1 PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x378 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3F8 JUMPI PUSH2 0x3E2 PUSH2 0x3DC CALLDATASIZE PUSH1 0x4 PUSH2 0x210 JUMP JUMPDEST SWAP1 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x3EA PUSH2 0xD3 JUMP JUMPDEST DUP1 PUSH2 0x3F4 DUP2 PUSH2 0x3C3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x417 JUMPI PUSH2 0x414 SWAP2 PUSH1 0x0 ADD PUSH2 0x1DA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDE JUMP JUMPDEST CALLVALUE PUSH2 0x44C JUMPI PUSH2 0x448 PUSH2 0x437 PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH2 0x43F PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST CALLVALUE PUSH2 0x481 JUMPI PUSH2 0x461 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3 JUMP JUMPDEST PUSH2 0x47D PUSH2 0x46C PUSH2 0x828 JUMP JUMPDEST PUSH2 0x474 PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x160 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST CALLVALUE PUSH2 0x4B5 JUMPI PUSH2 0x49F PUSH2 0x499 CALLDATASIZE PUSH1 0x4 PUSH2 0x210 JUMP JUMPDEST SWAP1 PUSH2 0x83E JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0xD3 JUMP JUMPDEST DUP1 PUSH2 0x4B1 DUP2 PUSH2 0x3C3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST CALLVALUE PUSH2 0x4EB JUMPI PUSH2 0x4E7 PUSH2 0x4D6 PUSH2 0x4D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x210 JUMP JUMPDEST SWAP1 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x4DE PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x250 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x519 JUMPI DUP1 PUSH2 0x50D PUSH2 0x516 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x1DA JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1DA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDE JUMP JUMPDEST CALLVALUE PUSH2 0x54F JUMPI PUSH2 0x54B PUSH2 0x53A PUSH2 0x534 CALLDATASIZE PUSH1 0x4 PUSH2 0x4F0 JUMP JUMPDEST SWAP1 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x542 PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x594 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x58F JUMPI JUMP JUMPDEST PUSH2 0x55E JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x584 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP1 PUSH2 0x5CD PUSH2 0x5C6 DUP4 PUSH2 0x574 JUMP JUMPDEST DUP1 SWAP5 PUSH2 0x59E JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x626 JUMPI POP PUSH1 0x1 EQ PUSH2 0x5E9 JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5F6 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH2 0x5A7 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x60E JUMPI POP POP ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP6 SWAP4 SWAP6 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP3 SWAP1 PUSH2 0x5FB JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 PUSH2 0x64B SWAP2 PUSH2 0x5B2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x66E SWAP1 PUSH2 0x125 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x688 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x64E JUMP JUMPDEST SWAP1 PUSH2 0x6AD PUSH2 0x6A6 SWAP3 PUSH2 0x69D PUSH2 0xD3 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x641 JUMP JUMPDEST SUB DUP4 PUSH2 0x664 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6B8 SWAP1 PUSH2 0x68D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6C3 PUSH2 0x559 JUMP JUMPDEST POP PUSH2 0x6CE PUSH1 0x3 PUSH2 0x6AF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x6F3 SWAP2 PUSH2 0x6E2 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH2 0x6EB PUSH2 0x8B1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x8BE JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x712 PUSH2 0x717 SWAP2 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x724 SWAP1 SLOAD PUSH2 0x706 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x72F PUSH2 0x6F8 JUMP JUMPDEST POP PUSH2 0x73A PUSH1 0x2 PUSH2 0x71A JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x767 SWAP3 PUSH2 0x74A PUSH2 0x6D1 JUMP JUMPDEST POP PUSH2 0x75F PUSH2 0x756 PUSH2 0x8B1 JUMP JUMPDEST DUP3 SWAP1 DUP5 SWAP2 PUSH2 0x91C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x783 PUSH2 0x788 SWAP2 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x771 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x795 SWAP1 SLOAD PUSH2 0x777 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x7A0 PUSH2 0x76C JUMP JUMPDEST POP PUSH2 0x7AB PUSH1 0x5 PUSH2 0x78B JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x7B8 SWAP2 PUSH2 0xA8F JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x7D1 PUSH2 0x7CC PUSH2 0x7D6 SWAP3 PUSH2 0x1AE JUMP JUMPDEST PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x1AE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x7E2 SWAP1 PUSH2 0x7BD JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x7EE SWAP1 PUSH2 0x7D9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x7FB SWAP1 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x820 PUSH2 0x825 SWAP2 PUSH2 0x818 PUSH2 0x6F8 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x830 PUSH2 0x559 JUMP JUMPDEST POP PUSH2 0x83B PUSH1 0x4 PUSH2 0x6AF JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x848 SWAP2 PUSH2 0xAF1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x867 SWAP2 PUSH2 0x856 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH2 0x85F PUSH2 0x8B1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x876 SWAP1 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x8A9 SWAP2 PUSH2 0x89F PUSH2 0x8A4 SWAP3 PUSH2 0x897 PUSH2 0x6F8 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x8B9 PUSH2 0x8AC JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x8CC SWAP3 SWAP2 PUSH1 0x1 SWAP3 PUSH2 0xBB0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8D7 SWAP1 PUSH2 0x1B9 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x905 PUSH2 0x90C SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x8FB PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x29C JUMP JUMPDEST ADD SWAP1 PUSH2 0x29C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x919 SWAP2 SUB PUSH2 0x1E9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x92A DUP2 DUP4 SWAP1 PUSH2 0x884 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x940 PUSH2 0x93A PUSH1 0x0 NOT PUSH2 0x1E9 JUMP JUMPDEST SWAP2 PUSH2 0x1E9 JUMP JUMPDEST LT PUSH2 0x94D JUMPI JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x960 PUSH2 0x95A DUP8 PUSH2 0x1E9 JUMP JUMPDEST SWAP2 PUSH2 0x1E9 JUMP JUMPDEST LT PUSH2 0x987 JUMPI PUSH2 0x97E SWAP4 SWAP5 PUSH2 0x975 SWAP2 SWAP4 SWAP3 PUSH2 0x90E JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH2 0xBB0 JUMP JUMPDEST DUP1 CODESIZE DUP1 DUP1 PUSH2 0x946 JUMP JUMPDEST POP PUSH2 0x9A7 DUP5 SWAP3 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x8DB JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9C2 PUSH2 0x9BD PUSH2 0x9C7 SWAP3 PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x1AE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9D3 SWAP1 PUSH2 0x9AE JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x9EA SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x8CE JUMP JUMPDEST JUMP JUMPDEST SWAP2 DUP3 PUSH2 0xA09 PUSH2 0xA03 PUSH2 0x9FE PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST SWAP2 PUSH2 0x1B9 JUMP JUMPDEST EQ PUSH2 0xA66 JUMPI DUP2 PUSH2 0xA2A PUSH2 0xA24 PUSH2 0xA1F PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST SWAP2 PUSH2 0x1B9 JUMP JUMPDEST EQ PUSH2 0xA3D JUMPI PUSH2 0xA3B SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0xD0E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA62 PUSH2 0xA4A PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x9D6 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xA8B PUSH2 0xA73 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x9D6 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xAAB PUSH2 0xAA5 PUSH2 0xAA0 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST SWAP2 PUSH2 0x1B9 JUMP JUMPDEST EQ PUSH2 0xAC8 JUMPI PUSH2 0xAC6 SWAP2 PUSH2 0xABE PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xD0E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xAED PUSH2 0xAD5 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x9D6 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH2 0xB0E PUSH2 0xB08 PUSH2 0xB03 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST SWAP2 PUSH2 0x1B9 JUMP JUMPDEST EQ PUSH2 0xB2B JUMPI PUSH2 0xB29 SWAP2 SWAP1 PUSH2 0xB22 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0xD0E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB50 PUSH2 0xB38 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x9D6 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xB67 PUSH1 0x0 NOT SWAP2 PUSH2 0xB54 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0xB85 PUSH2 0xB80 PUSH2 0xB8A SWAP3 PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x1E9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xBA5 PUSH2 0xBA0 PUSH2 0xBAC SWAP3 PUSH2 0xB71 JUMP JUMPDEST PUSH2 0xB8D JUMP JUMPDEST DUP3 SLOAD PUSH2 0xB5A JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0xBCE PUSH2 0xBC8 PUSH2 0xBC3 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST SWAP2 PUSH2 0x1B9 JUMP JUMPDEST EQ PUSH2 0xC9C JUMPI DUP4 PUSH2 0xBEF PUSH2 0xBE9 PUSH2 0xBE4 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST SWAP2 PUSH2 0x1B9 JUMP JUMPDEST EQ PUSH2 0xC73 JUMPI PUSH2 0xC13 DUP4 PUSH2 0xC0E PUSH2 0xC07 PUSH1 0x1 DUP7 SWAP1 PUSH2 0x86C JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xC1D JUMPI JUMPDEST POP POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xC68 PUSH2 0xC56 PUSH2 0xC50 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0x7E5 JUMP JUMPDEST SWAP4 PUSH2 0x7E5 JUMP JUMPDEST SWAP4 PUSH2 0xC5F PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 LOG3 CODESIZE DUP1 DUP1 PUSH2 0xC18 JUMP JUMPDEST PUSH2 0xC98 PUSH2 0xC80 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x9D6 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC1 PUSH2 0xCA9 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x9D6 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xCEA PUSH2 0xCF0 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x1E9 JUMP JUMPDEST SWAP3 PUSH2 0x1E9 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0xCFB JUMPI JUMP JUMPDEST PUSH2 0xCC5 JUMP JUMPDEST SWAP1 PUSH2 0xD0B SWAP2 ADD PUSH2 0x1E9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 PUSH2 0xD2D PUSH2 0xD27 PUSH2 0xD22 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST SWAP2 PUSH2 0x1B9 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0xE12 JUMPI PUSH2 0xD52 PUSH2 0xD4B DUP4 PUSH2 0xD46 PUSH1 0x2 PUSH2 0x71A JUMP JUMPDEST PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x2 PUSH2 0xB90 JUMP JUMPDEST JUMPDEST DUP3 PUSH2 0xD6F PUSH2 0xD69 PUSH2 0xD64 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST SWAP2 PUSH2 0x1B9 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0xDE5 JUMPI PUSH2 0xD94 PUSH2 0xD8D DUP4 PUSH2 0xD88 PUSH1 0x2 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x90E JUMP JUMPDEST PUSH1 0x2 PUSH2 0xB90 JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xDE0 PUSH2 0xDCE PUSH2 0xDC8 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0x7E5 JUMP JUMPDEST SWAP4 PUSH2 0x7E5 JUMP JUMPDEST SWAP4 PUSH2 0xDD7 PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0xE0D DUP3 PUSH2 0xE07 PUSH2 0xDF8 PUSH1 0x0 DUP8 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST SWAP2 PUSH2 0xE02 DUP4 PUSH2 0x71A JUMP JUMPDEST PUSH2 0xD00 JUMP JUMPDEST SWAP1 PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xD95 JUMP JUMPDEST PUSH2 0xE26 PUSH2 0xE21 PUSH1 0x0 DUP4 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST DUP1 PUSH2 0xE39 PUSH2 0xE33 DUP6 PUSH2 0x1E9 JUMP JUMPDEST SWAP2 PUSH2 0x1E9 JUMP JUMPDEST LT PUSH2 0xE62 JUMPI PUSH2 0xE4C PUSH2 0xE5D SWAP2 DUP5 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH2 0xE58 PUSH1 0x0 DUP5 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xD53 JUMP JUMPDEST SWAP1 PUSH2 0xE81 SWAP1 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x8DB JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x71382B KECCAK256 0xD8 SELFBALANCE 0x2E PUSH5 0xD6CFEFCFFA 0xE9 0xDF KECCAK256 0xFC 0xBF TIMESTAMP SWAP16 DUP7 DUP2 KECCAK256 PUSH28 0xA7648CCFAB1E3864736F6C634300081C003300000000000000000000 ",
              "sourceMap": "189:564:9:-:0;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;:::i;249:240::-;458:25;249:240;;;;;:::i;:::-;362:21;374:9;362:21;;:::i;:::-;458:25;446:10;458:7;:25;468:15;458:7;474:9;468:15;:::i;:::-;458:25;;:::i;:::-;;:::i;:::-;;;:::i;:::-;249:240::o;189:564::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;:::o;1582:113:2:-;;1648:13;1671:17;1582:113;1648:13;;:::i;:::-;1671:17;;:::i;:::-;1582:113::o;189:564:9:-;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;7362:208:2:-;7432:7;:21;;7443:10;7451:1;7443:10;:::i;:::-;7432:21;:::i;:::-;;;:::i;:::-;;7428:91;;7557:5;7544:1;7536:10;7544:1;7536:10;:::i;:::-;7548:7;7557:5;;;:::i;:::-;7362:208::o;7428:91::-;7476:32;7497:10;7505:1;7497:10;:::i;:::-;7476:32;;;;;;;;;;;;;:::i;:::-;;;;189:564:9;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;5912:1107:2:-;;;;6001:4;:18;;6009:10;6017:1;6009:10;:::i;:::-;6001:18;:::i;:::-;;;:::i;:::-;;5997:540;;;;6137:21;;6153:5;6137:21;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;5997:540;6551:2;:16;;6557:10;6565:1;6557:10;:::i;:::-;6551:16;:::i;:::-;;;:::i;:::-;;6547:425;;;;6714:21;;6730:5;6714:21;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;6547:425;7002:2;7006:5;6987:25;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;5912:1107::o;6547:425::-;6925:22;6942:5;6925:22;:13;:9;6935:2;6925:13;;:::i;:::-;:22;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;6547:425;;5997:540;6211:15;;:9;6221:4;6211:15;;:::i;:::-;;:::i;:::-;6244:11;:19;;6258:5;6244:19;:::i;:::-;;;:::i;:::-;;6240:115;;6493:19;6475:37;6493:11;6507:5;6493:19;;:::i;:::-;6475:15;:9;6485:4;6475:15;;:::i;:::-;:37;:::i;:::-;5997:540;;6240:115;6315:4;6290:50;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode": {
                  "entryPoint": 227,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 474,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_addresst_address": {
                  "entryPoint": 1264,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_addresst_addresst_uint256": {
                  "entryPoint": 756,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_addresst_uint256": {
                  "entryPoint": 528,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_address": {
                  "entryPoint": 1021,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256": {
                  "entryPoint": 513,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encodeUpdatedPos_string_storage": {
                  "entryPoint": 1601,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": 2254,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_address_uint256_uint256": {
                  "entryPoint": 2267,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_bool": {
                  "entryPoint": 592,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bool_to_bool": {
                  "entryPoint": 579,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_string": {
                  "entryPoint": 352,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string_memory_ptr": {
                  "entryPoint": 303,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string_storage": {
                  "entryPoint": 1458,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple": {
                  "entryPoint": 963,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 2518,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256": {
                  "entryPoint": 681,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_to_uint256": {
                  "entryPoint": 668,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint8": {
                  "entryPoint": 888,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint8_to_uint8": {
                  "entryPoint": 875,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "allocate_unbounded": {
                  "entryPoint": 211,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": 1447,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_string": {
                  "entryPoint": 243,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_string": {
                  "entryPoint": 1438,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_string_fromStack": {
                  "entryPoint": 247,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 3291,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": 441,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bool": {
                  "entryPoint": 574,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint256": {
                  "entryPoint": 1795,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint8": {
                  "entryPoint": 1905,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": 2475,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 430,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": 489,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint8": {
                  "entryPoint": 869,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_address": {
                  "entryPoint": 2021,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_array_string_storage_to_string": {
                  "entryPoint": 1711,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 2506,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 2478,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 2009,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 1981,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 2929,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_array_from_storage_to_memory_string": {
                  "entryPoint": 1677,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 256,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "external_fun_allowance": {
                  "entryPoint": 1310,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_approve": {
                  "entryPoint": 614,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_balanceOf": {
                  "entryPoint": 1052,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_burn": {
                  "entryPoint": 1158,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_decimals": {
                  "entryPoint": 910,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_mint": {
                  "entryPoint": 969,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_name": {
                  "entryPoint": 377,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_symbol": {
                  "entryPoint": 1105,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_totalSupply": {
                  "entryPoint": 703,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_transfer": {
                  "entryPoint": 1210,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_transferFrom": {
                  "entryPoint": 815,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 1396,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_uint256": {
                  "entryPoint": 1798,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_uint8": {
                  "entryPoint": 1911,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 1636,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun__approve": {
                  "entryPoint": 2238,
                  "id": 690,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun__burn": {
                  "entryPoint": 2801,
                  "id": 672,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun__mint": {
                  "entryPoint": 2703,
                  "id": 639,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun__transfer": {
                  "entryPoint": 2540,
                  "id": 529,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_allowance": {
                  "entryPoint": 2180,
                  "id": 426,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_approve": {
                  "entryPoint": 1750,
                  "id": 450,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_approve_750": {
                  "entryPoint": 2992,
                  "id": 750,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "fun_balanceOf": {
                  "entryPoint": 2057,
                  "id": 385,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_burn": {
                  "entryPoint": 2110,
                  "id": 1748,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_decimals": {
                  "entryPoint": 1944,
                  "id": 1722,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_mint": {
                  "entryPoint": 1966,
                  "id": 1735,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_msgSender": {
                  "entryPoint": 2225,
                  "id": 915,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_name": {
                  "entryPoint": 1723,
                  "id": 345,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_spendAllowance": {
                  "entryPoint": 2332,
                  "id": 798,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_symbol": {
                  "entryPoint": 2088,
                  "id": 354,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_totalSupply": {
                  "entryPoint": 1831,
                  "id": 372,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_transfer": {
                  "entryPoint": 2122,
                  "id": 409,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_transferFrom": {
                  "entryPoint": 1853,
                  "id": 482,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "fun_update": {
                  "entryPoint": 3342,
                  "id": 606,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": 1978,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_mapping_address_uint256_of_address": {
                  "entryPoint": 2156,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_uint256_of_address": {
                  "entryPoint": 2033,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 3269,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x22": {
                  "entryPoint": 1374,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 1614,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_uint256": {
                  "entryPoint": 2957,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint256": {
                  "entryPoint": 1818,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint8": {
                  "entryPoint": 1931,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74": {
                  "entryPoint": 1364,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 217,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 222,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 293,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 2900,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_0_unsigned": {
                  "entryPoint": 1789,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": 205,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 2906,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_uint256_to_uint256": {
                  "entryPoint": 2960,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 453,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_uint256": {
                  "entryPoint": 492,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "wrapping_add_uint256": {
                  "entryPoint": 3328,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "wrapping_sub_uint256": {
                  "entryPoint": 2318,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "zero_value_for_split_address": {
                  "entryPoint": 2220,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_bool": {
                  "entryPoint": 1745,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_string": {
                  "entryPoint": 1369,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint256": {
                  "entryPoint": 1784,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint8": {
                  "entryPoint": 1900,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361015610013575b610554565b61001e6000356100cd565b806306fdde03146100c8578063095ea7b3146100c357806318160ddd146100be57806323b872dd146100b9578063313ce567146100b457806340c10f19146100af57806370a08231146100aa57806395d89b41146100a55780639dc29fac146100a0578063a9059cbb1461009b5763dd62ed3e0361000e5761051e565b6104ba565b610486565b610451565b61041c565b6103c9565b61038e565b61032f565b6102bf565b610266565b610179565b60e01c90565b60405190565b600080fd5b600080fd5b60009103126100ee57565b6100de565b5190565b60209181520190565b60005b838110610114575050906000910152565b806020918301518185015201610103565b601f801991011690565b61014e61015760209361015c93610145816100f3565b938480936100f7565b95869101610100565b610125565b0190565b610176916020820191600081840391015261012f565b90565b346101a9576101893660046100e3565b6101a56101946106bb565b61019c6100d3565b91829182610160565b0390f35b6100d9565b60018060a01b031690565b6101c2906101ae565b90565b6101ce816101b9565b036101d557565b600080fd5b905035906101e7826101c5565b565b90565b6101f5816101e9565b036101fc57565b600080fd5b9050359061020e826101ec565b565b9190604083820312610239578061022d61023692600086016101da565b93602001610201565b90565b6100de565b151590565b61024c9061023e565b9052565b919061026490600060208501940190610243565b565b346102975761029361028261027c366004610210565b906106d6565b61028a6100d3565b91829182610250565b0390f35b6100d9565b6102a5906101e9565b9052565b91906102bd9060006020850194019061029c565b565b346102ef576102cf3660046100e3565b6102eb6102da610727565b6102e26100d3565b918291826102a9565b0390f35b6100d9565b909160608284031261032a5761032761031084600085016101da565b9361031e81602086016101da565b93604001610201565b90565b6100de565b346103605761035c61034b6103453660046102f4565b9161073d565b6103536100d3565b91829182610250565b0390f35b6100d9565b60ff1690565b61037490610365565b9052565b919061038c9060006020850194019061036b565b565b346103be5761039e3660046100e3565b6103ba6103a9610798565b6103b16100d3565b91829182610378565b0390f35b6100d9565b60000190565b346103f8576103e26103dc366004610210565b906107ae565b6103ea6100d3565b806103f4816103c3565b0390f35b6100d9565b9060208282031261041757610414916000016101da565b90565b6100de565b3461044c576104486104376104323660046103fd565b610809565b61043f6100d3565b918291826102a9565b0390f35b6100d9565b34610481576104613660046100e3565b61047d61046c610828565b6104746100d3565b91829182610160565b0390f35b6100d9565b346104b55761049f610499366004610210565b9061083e565b6104a76100d3565b806104b1816103c3565b0390f35b6100d9565b346104eb576104e76104d66104d0366004610210565b9061084a565b6104de6100d3565b91829182610250565b0390f35b6100d9565b9190604083820312610519578061050d61051692600086016101da565b936020016101da565b90565b6100de565b3461054f5761054b61053a6105343660046104f0565b90610884565b6105426100d3565b918291826102a9565b0390f35b6100d9565b600080fd5b606090565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610594575b602083101461058f57565b61055e565b91607f1691610584565b60209181520190565b600052602060002090565b90600092918054906105cd6105c683610574565b809461059e565b9160018116908160001461062657506001146105e9575b505050565b6105f691929394506105a7565b916000925b81841061060e57505001903880806105e4565b600181602092959395548486015201910192906105fb565b92949550505060ff19168252151560200201903880806105e4565b9061064b916105b2565b90565b634e487b7160e01b600052604160045260246000fd5b9061066e90610125565b810190811067ffffffffffffffff82111761068857604052565b61064e565b906106ad6106a69261069d6100d3565b93848092610641565b0383610664565b565b6106b89061068d565b90565b6106c3610559565b506106ce60036106af565b90565b600090565b6106f3916106e26106d1565b506106eb6108b1565b9190916108be565b600190565b600090565b60001c90565b90565b610712610717916106fd565b610703565b90565b6107249054610706565b90565b61072f6106f8565b5061073a600261071a565b90565b916107679261074a6106d1565b5061075f6107566108b1565b8290849161091c565b9190916109ec565b600190565b600090565b60ff1690565b610783610788916106fd565b610771565b90565b6107959054610777565b90565b6107a061076c565b506107ab600561078b565b90565b906107b891610a8f565b565b90565b6107d16107cc6107d6926101ae565b6107ba565b6101ae565b90565b6107e2906107bd565b90565b6107ee906107d9565b90565b906107fb906107e5565b600052602052604060002090565b610820610825916108186106f8565b5060006107f1565b61071a565b90565b610830610559565b5061083b60046106af565b90565b9061084891610af1565b565b610867916108566106d1565b5061085f6108b1565b9190916109ec565b600190565b90610876906107e5565b600052602052604060002090565b6108a99161089f6108a4926108976106f8565b50600161086c565b6107f1565b61071a565b90565b600090565b6108b96108ac565b503390565b916108cc9291600192610bb0565b565b6108d7906101b9565b9052565b60409061090561090c94969593966108fb606084019860008501906108ce565b602083019061029c565b019061029c565b565b9061091991036101e9565b90565b92919261092a818390610884565b908161094061093a6000196101e9565b916101e9565b1061094d575b5050509050565b8161096061095a876101e9565b916101e9565b106109875761097e939461097591939261090e565b90600092610bb0565b80388080610946565b506109a7849291926000938493637dc7a0d960e11b8552600485016108db565b0390fd5b90565b6109c26109bd6109c7926109ab565b6107ba565b6101ae565b90565b6109d3906109ae565b90565b91906109ea906000602085019401906108ce565b565b9182610a09610a036109fe60006109ca565b6101b9565b916101b9565b14610a665781610a2a610a24610a1f60006109ca565b6101b9565b916101b9565b14610a3d57610a3b92919091610d0e565b565b610a62610a4a60006109ca565b600091829163ec442f0560e01b8352600483016109d6565b0390fd5b610a8b610a7360006109ca565b6000918291634b637e8f60e11b8352600483016109d6565b0390fd5b80610aab610aa5610aa060006109ca565b6101b9565b916101b9565b14610ac857610ac691610abe60006109ca565b919091610d0e565b565b610aed610ad560006109ca565b600091829163ec442f0560e01b8352600483016109d6565b0390fd5b9081610b0e610b08610b0360006109ca565b6101b9565b916101b9565b14610b2b57610b299190610b2260006109ca565b9091610d0e565b565b610b50610b3860006109ca565b6000918291634b637e8f60e11b8352600483016109d6565b0390fd5b60001b90565b90610b6760001991610b54565b9181191691161790565b610b85610b80610b8a926101e9565b6107ba565b6101e9565b90565b90565b90610ba5610ba0610bac92610b71565b610b8d565b8254610b5a565b9055565b909281610bce610bc8610bc360006109ca565b6101b9565b916101b9565b14610c9c5783610bef610be9610be460006109ca565b6101b9565b916101b9565b14610c7357610c1383610c0e610c076001869061086c565b87906107f1565b610b90565b610c1d575b505050565b919091610c68610c56610c507f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925936107e5565b936107e5565b93610c5f6100d3565b918291826102a9565b0390a3388080610c18565b610c98610c8060006109ca565b6000918291634a1406b160e11b8352600483016109d6565b0390fd5b610cc1610ca960006109ca565b600091829163e602df0560e01b8352600483016109d6565b0390fd5b634e487b7160e01b600052601160045260246000fd5b610cea610cf0919392936101e9565b926101e9565b8201809211610cfb57565b610cc5565b90610d0b91016101e9565b90565b91909180610d2d610d27610d2260006109ca565b6101b9565b916101b9565b14600014610e1257610d52610d4b83610d46600261071a565b610cdb565b6002610b90565b5b82610d6f610d69610d6460006109ca565b6101b9565b916101b9565b14600014610de557610d94610d8d83610d88600261071a565b61090e565b6002610b90565b5b919091610de0610dce610dc87fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef936107e5565b936107e5565b93610dd76100d3565b918291826102a9565b0390a3565b610e0d82610e07610df8600087906107f1565b91610e028361071a565b610d00565b90610b90565b610d95565b610e26610e21600083906107f1565b61071a565b80610e39610e33856101e9565b916101e9565b10610e6257610e4c610e5d91849061090e565b610e58600084906107f1565b610b90565b610d53565b90610e81909192600093849363391434e360e21b8552600485016108db565b0390fdfea26469706673582212206271382b20d8472e64d6cfefcffae9df20fcbf429f8681207ba7648ccfab1e3864736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0x554 JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x9B JUMPI PUSH4 0xDD62ED3E SUB PUSH2 0xE JUMPI PUSH2 0x51E JUMP JUMPDEST PUSH2 0x4BA JUMP JUMPDEST PUSH2 0x486 JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x266 JUMP JUMPDEST PUSH2 0x179 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xEE JUMPI JUMP JUMPDEST PUSH2 0xDE JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x114 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x103 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x157 PUSH1 0x20 SWAP4 PUSH2 0x15C SWAP4 PUSH2 0x145 DUP2 PUSH2 0xF3 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP4 PUSH2 0xF7 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x100 JUMP JUMPDEST PUSH2 0x125 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x176 SWAP2 PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x12F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x1A9 JUMPI PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x194 PUSH2 0x6BB JUMP JUMPDEST PUSH2 0x19C PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x160 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1C2 SWAP1 PUSH2 0x1AE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1CE DUP2 PUSH2 0x1B9 JUMP JUMPDEST SUB PUSH2 0x1D5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1E7 DUP3 PUSH2 0x1C5 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1F5 DUP2 PUSH2 0x1E9 JUMP JUMPDEST SUB PUSH2 0x1FC JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x20E DUP3 PUSH2 0x1EC JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x239 JUMPI DUP1 PUSH2 0x22D PUSH2 0x236 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x1DA JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x201 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDE JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x24C SWAP1 PUSH2 0x23E JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x264 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x243 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x297 JUMPI PUSH2 0x293 PUSH2 0x282 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x210 JUMP JUMPDEST SWAP1 PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x28A PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x250 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST PUSH2 0x2A5 SWAP1 PUSH2 0x1E9 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2BD SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x29C JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0xE3 JUMP JUMPDEST PUSH2 0x2EB PUSH2 0x2DA PUSH2 0x727 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x32A JUMPI PUSH2 0x327 PUSH2 0x310 DUP5 PUSH1 0x0 DUP6 ADD PUSH2 0x1DA JUMP JUMPDEST SWAP4 PUSH2 0x31E DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x1DA JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x201 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDE JUMP JUMPDEST CALLVALUE PUSH2 0x360 JUMPI PUSH2 0x35C PUSH2 0x34B PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F4 JUMP JUMPDEST SWAP2 PUSH2 0x73D JUMP JUMPDEST PUSH2 0x353 PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x250 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x374 SWAP1 PUSH2 0x365 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x38C SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x36B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x3BE JUMPI PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0xE3 JUMP JUMPDEST PUSH2 0x3BA PUSH2 0x3A9 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x3B1 PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x378 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3F8 JUMPI PUSH2 0x3E2 PUSH2 0x3DC CALLDATASIZE PUSH1 0x4 PUSH2 0x210 JUMP JUMPDEST SWAP1 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x3EA PUSH2 0xD3 JUMP JUMPDEST DUP1 PUSH2 0x3F4 DUP2 PUSH2 0x3C3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x417 JUMPI PUSH2 0x414 SWAP2 PUSH1 0x0 ADD PUSH2 0x1DA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDE JUMP JUMPDEST CALLVALUE PUSH2 0x44C JUMPI PUSH2 0x448 PUSH2 0x437 PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH2 0x43F PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST CALLVALUE PUSH2 0x481 JUMPI PUSH2 0x461 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3 JUMP JUMPDEST PUSH2 0x47D PUSH2 0x46C PUSH2 0x828 JUMP JUMPDEST PUSH2 0x474 PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x160 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST CALLVALUE PUSH2 0x4B5 JUMPI PUSH2 0x49F PUSH2 0x499 CALLDATASIZE PUSH1 0x4 PUSH2 0x210 JUMP JUMPDEST SWAP1 PUSH2 0x83E JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0xD3 JUMP JUMPDEST DUP1 PUSH2 0x4B1 DUP2 PUSH2 0x3C3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST CALLVALUE PUSH2 0x4EB JUMPI PUSH2 0x4E7 PUSH2 0x4D6 PUSH2 0x4D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x210 JUMP JUMPDEST SWAP1 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x4DE PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x250 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x519 JUMPI DUP1 PUSH2 0x50D PUSH2 0x516 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x1DA JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1DA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDE JUMP JUMPDEST CALLVALUE PUSH2 0x54F JUMPI PUSH2 0x54B PUSH2 0x53A PUSH2 0x534 CALLDATASIZE PUSH1 0x4 PUSH2 0x4F0 JUMP JUMPDEST SWAP1 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x542 PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x594 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x58F JUMPI JUMP JUMPDEST PUSH2 0x55E JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x584 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP1 PUSH2 0x5CD PUSH2 0x5C6 DUP4 PUSH2 0x574 JUMP JUMPDEST DUP1 SWAP5 PUSH2 0x59E JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x626 JUMPI POP PUSH1 0x1 EQ PUSH2 0x5E9 JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5F6 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH2 0x5A7 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x60E JUMPI POP POP ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP6 SWAP4 SWAP6 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP3 SWAP1 PUSH2 0x5FB JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 PUSH2 0x64B SWAP2 PUSH2 0x5B2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x66E SWAP1 PUSH2 0x125 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x688 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x64E JUMP JUMPDEST SWAP1 PUSH2 0x6AD PUSH2 0x6A6 SWAP3 PUSH2 0x69D PUSH2 0xD3 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x641 JUMP JUMPDEST SUB DUP4 PUSH2 0x664 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6B8 SWAP1 PUSH2 0x68D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6C3 PUSH2 0x559 JUMP JUMPDEST POP PUSH2 0x6CE PUSH1 0x3 PUSH2 0x6AF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x6F3 SWAP2 PUSH2 0x6E2 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH2 0x6EB PUSH2 0x8B1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x8BE JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x712 PUSH2 0x717 SWAP2 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x724 SWAP1 SLOAD PUSH2 0x706 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x72F PUSH2 0x6F8 JUMP JUMPDEST POP PUSH2 0x73A PUSH1 0x2 PUSH2 0x71A JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x767 SWAP3 PUSH2 0x74A PUSH2 0x6D1 JUMP JUMPDEST POP PUSH2 0x75F PUSH2 0x756 PUSH2 0x8B1 JUMP JUMPDEST DUP3 SWAP1 DUP5 SWAP2 PUSH2 0x91C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x783 PUSH2 0x788 SWAP2 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x771 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x795 SWAP1 SLOAD PUSH2 0x777 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x7A0 PUSH2 0x76C JUMP JUMPDEST POP PUSH2 0x7AB PUSH1 0x5 PUSH2 0x78B JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x7B8 SWAP2 PUSH2 0xA8F JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x7D1 PUSH2 0x7CC PUSH2 0x7D6 SWAP3 PUSH2 0x1AE JUMP JUMPDEST PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x1AE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x7E2 SWAP1 PUSH2 0x7BD JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x7EE SWAP1 PUSH2 0x7D9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x7FB SWAP1 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x820 PUSH2 0x825 SWAP2 PUSH2 0x818 PUSH2 0x6F8 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x830 PUSH2 0x559 JUMP JUMPDEST POP PUSH2 0x83B PUSH1 0x4 PUSH2 0x6AF JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x848 SWAP2 PUSH2 0xAF1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x867 SWAP2 PUSH2 0x856 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH2 0x85F PUSH2 0x8B1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x876 SWAP1 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x8A9 SWAP2 PUSH2 0x89F PUSH2 0x8A4 SWAP3 PUSH2 0x897 PUSH2 0x6F8 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x8B9 PUSH2 0x8AC JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x8CC SWAP3 SWAP2 PUSH1 0x1 SWAP3 PUSH2 0xBB0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8D7 SWAP1 PUSH2 0x1B9 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x905 PUSH2 0x90C SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x8FB PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x29C JUMP JUMPDEST ADD SWAP1 PUSH2 0x29C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x919 SWAP2 SUB PUSH2 0x1E9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x92A DUP2 DUP4 SWAP1 PUSH2 0x884 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x940 PUSH2 0x93A PUSH1 0x0 NOT PUSH2 0x1E9 JUMP JUMPDEST SWAP2 PUSH2 0x1E9 JUMP JUMPDEST LT PUSH2 0x94D JUMPI JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x960 PUSH2 0x95A DUP8 PUSH2 0x1E9 JUMP JUMPDEST SWAP2 PUSH2 0x1E9 JUMP JUMPDEST LT PUSH2 0x987 JUMPI PUSH2 0x97E SWAP4 SWAP5 PUSH2 0x975 SWAP2 SWAP4 SWAP3 PUSH2 0x90E JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH2 0xBB0 JUMP JUMPDEST DUP1 CODESIZE DUP1 DUP1 PUSH2 0x946 JUMP JUMPDEST POP PUSH2 0x9A7 DUP5 SWAP3 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x8DB JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9C2 PUSH2 0x9BD PUSH2 0x9C7 SWAP3 PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x1AE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9D3 SWAP1 PUSH2 0x9AE JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x9EA SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x8CE JUMP JUMPDEST JUMP JUMPDEST SWAP2 DUP3 PUSH2 0xA09 PUSH2 0xA03 PUSH2 0x9FE PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST SWAP2 PUSH2 0x1B9 JUMP JUMPDEST EQ PUSH2 0xA66 JUMPI DUP2 PUSH2 0xA2A PUSH2 0xA24 PUSH2 0xA1F PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST SWAP2 PUSH2 0x1B9 JUMP JUMPDEST EQ PUSH2 0xA3D JUMPI PUSH2 0xA3B SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0xD0E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA62 PUSH2 0xA4A PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x9D6 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xA8B PUSH2 0xA73 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x9D6 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xAAB PUSH2 0xAA5 PUSH2 0xAA0 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST SWAP2 PUSH2 0x1B9 JUMP JUMPDEST EQ PUSH2 0xAC8 JUMPI PUSH2 0xAC6 SWAP2 PUSH2 0xABE PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xD0E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xAED PUSH2 0xAD5 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x9D6 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH2 0xB0E PUSH2 0xB08 PUSH2 0xB03 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST SWAP2 PUSH2 0x1B9 JUMP JUMPDEST EQ PUSH2 0xB2B JUMPI PUSH2 0xB29 SWAP2 SWAP1 PUSH2 0xB22 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0xD0E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB50 PUSH2 0xB38 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x9D6 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xB67 PUSH1 0x0 NOT SWAP2 PUSH2 0xB54 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0xB85 PUSH2 0xB80 PUSH2 0xB8A SWAP3 PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x1E9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xBA5 PUSH2 0xBA0 PUSH2 0xBAC SWAP3 PUSH2 0xB71 JUMP JUMPDEST PUSH2 0xB8D JUMP JUMPDEST DUP3 SLOAD PUSH2 0xB5A JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0xBCE PUSH2 0xBC8 PUSH2 0xBC3 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST SWAP2 PUSH2 0x1B9 JUMP JUMPDEST EQ PUSH2 0xC9C JUMPI DUP4 PUSH2 0xBEF PUSH2 0xBE9 PUSH2 0xBE4 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST SWAP2 PUSH2 0x1B9 JUMP JUMPDEST EQ PUSH2 0xC73 JUMPI PUSH2 0xC13 DUP4 PUSH2 0xC0E PUSH2 0xC07 PUSH1 0x1 DUP7 SWAP1 PUSH2 0x86C JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xC1D JUMPI JUMPDEST POP POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xC68 PUSH2 0xC56 PUSH2 0xC50 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0x7E5 JUMP JUMPDEST SWAP4 PUSH2 0x7E5 JUMP JUMPDEST SWAP4 PUSH2 0xC5F PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 LOG3 CODESIZE DUP1 DUP1 PUSH2 0xC18 JUMP JUMPDEST PUSH2 0xC98 PUSH2 0xC80 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x9D6 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC1 PUSH2 0xCA9 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x9D6 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xCEA PUSH2 0xCF0 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x1E9 JUMP JUMPDEST SWAP3 PUSH2 0x1E9 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0xCFB JUMPI JUMP JUMPDEST PUSH2 0xCC5 JUMP JUMPDEST SWAP1 PUSH2 0xD0B SWAP2 ADD PUSH2 0x1E9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 PUSH2 0xD2D PUSH2 0xD27 PUSH2 0xD22 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST SWAP2 PUSH2 0x1B9 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0xE12 JUMPI PUSH2 0xD52 PUSH2 0xD4B DUP4 PUSH2 0xD46 PUSH1 0x2 PUSH2 0x71A JUMP JUMPDEST PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x2 PUSH2 0xB90 JUMP JUMPDEST JUMPDEST DUP3 PUSH2 0xD6F PUSH2 0xD69 PUSH2 0xD64 PUSH1 0x0 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST SWAP2 PUSH2 0x1B9 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0xDE5 JUMPI PUSH2 0xD94 PUSH2 0xD8D DUP4 PUSH2 0xD88 PUSH1 0x2 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x90E JUMP JUMPDEST PUSH1 0x2 PUSH2 0xB90 JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xDE0 PUSH2 0xDCE PUSH2 0xDC8 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0x7E5 JUMP JUMPDEST SWAP4 PUSH2 0x7E5 JUMP JUMPDEST SWAP4 PUSH2 0xDD7 PUSH2 0xD3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0xE0D DUP3 PUSH2 0xE07 PUSH2 0xDF8 PUSH1 0x0 DUP8 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST SWAP2 PUSH2 0xE02 DUP4 PUSH2 0x71A JUMP JUMPDEST PUSH2 0xD00 JUMP JUMPDEST SWAP1 PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xD95 JUMP JUMPDEST PUSH2 0xE26 PUSH2 0xE21 PUSH1 0x0 DUP4 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST DUP1 PUSH2 0xE39 PUSH2 0xE33 DUP6 PUSH2 0x1E9 JUMP JUMPDEST SWAP2 PUSH2 0x1E9 JUMP JUMPDEST LT PUSH2 0xE62 JUMPI PUSH2 0xE4C PUSH2 0xE5D SWAP2 DUP5 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH2 0xE58 PUSH1 0x0 DUP5 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xD53 JUMP JUMPDEST SWAP1 PUSH2 0xE81 SWAP1 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x8DB JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x71382B KECCAK256 0xD8 SELFBALANCE 0x2E PUSH5 0xD6CFEFCFFA 0xE9 0xDF KECCAK256 0xFC 0xBF TIMESTAMP SWAP16 DUP7 DUP2 KECCAK256 PUSH28 0xA7648CCFAB1E3864736F6C634300081C003300000000000000000000 ",
              "sourceMap": "189:564:9:-:0;;;;;;;;;-1:-1:-1;189:564:9;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;1760:89:2:-;1805:13;;:::i;:::-;1837:5;1830:12;1837:5;1830:12;:::i;:::-;;:::o;189:564:9:-;;;:::o;3902:186:2:-;4054:5;3902:186;3975:4;;:::i;:::-;4007:12;;;:::i;:::-;4045:7;4054:5;;;:::i;:::-;4077:4;4070:11;:::o;189:564:9:-;;;:::o;:::-;;;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;2803:97:2:-;2855:7;;:::i;:::-;2881:12;;;;:::i;:::-;2874:19;:::o;4680:244::-;;4890:5;4680:244;4767:4;;:::i;:::-;4801:12;4854:5;4801:12;;:::i;:::-;4839:4;4845:7;4854:5;;;:::i;:::-;4886:2;4890:5;;;:::i;:::-;4913:4;4906:11;:::o;189:564:9:-;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;493:92::-;551:5;;:::i;:::-;571:9;;;;:::i;:::-;564:16;:::o;589:77::-;;654:6;589:77;654:6;:::i;:::-;589:77::o;189:564::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;2933:116:2:-;3024:18;;2933:116;2998:7;;:::i;:::-;3024:9;;:18;:::i;:::-;;:::i;:::-;3017:25;:::o;1962:93::-;2009:13;;:::i;:::-;2041:7;2034:14;2041:7;2034:14;:::i;:::-;;:::o;670:81:9:-;;739:6;670:81;739:6;:::i;:::-;670:81::o;3244:178:2:-;3388:5;3244:178;3313:4;;:::i;:::-;3345:12;;;:::i;:::-;3384:2;3388:5;;;:::i;:::-;3411:4;3404:11;:::o;189:564:9:-;;;;;:::i;:::-;;;;;;;;;:::o;3455:140:2:-;3561:27;3455:140;3561:18;:27;3455:140;3535:7;;:::i;:::-;3561:11;;:18;:::i;:::-;:27;:::i;:::-;;:::i;:::-;3554:34;:::o;189:564:9:-;;;:::o;656:96:5:-;709:7;;:::i;:::-;735:10;;728:17;:::o;8630:128:2:-;;8746:4;8630:128;8730:7;8746:4;;;:::i;:::-;8630:128::o;189:564:9:-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;:::i;:::-;;:::o;10319:476:2:-;;;;10445:25;10455:5;10462:7;10445:25;;:::i;:::-;10484:16;;:36;;10503:17;;10484:36;:::i;:::-;;;:::i;:::-;;10480:309;;10319:476;;;;;;:::o;10480:309::-;10540:16;:24;;10559:5;10540:24;:::i;:::-;;;:::i;:::-;;10536:130;;10758:5;10716;;10732:24;10716:5;10723:7;10732:16;:24;:::i;:::-;10758:5;;;;:::i;:::-;10480:309;;;;;;10536:130;10618:7;10591:60;10618:7;;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;189:564:9;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;5297:300:2:-;;5380:4;:18;;5388:10;5396:1;5388:10;:::i;:::-;5380:18;:::i;:::-;;;:::i;:::-;;5376:86;;5475:2;:16;;5481:10;5489:1;5481:10;:::i;:::-;5475:16;:::i;:::-;;;:::i;:::-;;5471:86;;5584:5;5574:4;5580:2;5584:5;;;:::i;:::-;5297:300::o;5471:86::-;5514:32;5535:10;5543:1;5535:10;:::i;:::-;5514:32;;;;;;;;;;;;;:::i;:::-;;;;5376:86;5421:30;5440:10;5448:1;5440:10;:::i;:::-;5421:30;;;;;;;;;;;;;:::i;:::-;;;;7362:208;7432:7;:21;;7443:10;7451:1;7443:10;:::i;:::-;7432:21;:::i;:::-;;;:::i;:::-;;7428:91;;7557:5;7544:1;7536:10;7544:1;7536:10;:::i;:::-;7548:7;7557:5;;;:::i;:::-;7362:208::o;7428:91::-;7476:32;7497:10;7505:1;7497:10;:::i;:::-;7476:32;5514;;;;;;7476;;;;;;:::i;:::-;;;;7888:206;;7958:7;:21;;7969:10;7977:1;7969:10;:::i;:::-;7958:21;:::i;:::-;;;:::i;:::-;;7954:89;;8081:5;8060:7;8077:1;8069:10;8077:1;8069:10;:::i;:::-;8081:5;;;:::i;:::-;7888:206::o;7954:89::-;8002:30;8021:10;8029:1;8021:10;:::i;:::-;8002:30;5421;;;;;;8002;;;;;;:::i;:::-;;;;189:564:9;;;;:::o;:::-;;;10503:17:2;;189:564:9;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;9605:432:2:-;;;9717:5;:19;;9726:10;9734:1;9726:10;:::i;:::-;9717:19;:::i;:::-;;;:::i;:::-;;9713:89;;9815:7;:21;;9826:10;9834:1;9826:10;:::i;:::-;9815:21;:::i;:::-;;;:::i;:::-;;9811:90;;9910:35;9940:5;9910:27;:18;:11;9922:5;9910:18;;:::i;:::-;9929:7;9910:27;;:::i;:::-;:35;:::i;:::-;9955:76;;9605:432;;;;:::o;9955:76::-;10005:7;10014:5;9989:31;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;9955:76;;;;;9811:90;9859:31;9879:10;9887:1;9879:10;:::i;:::-;9859:31;;;;;;;;;;;;;:::i;:::-;;;;9713:89;9759:32;9780:10;9788:1;9780:10;:::i;:::-;9759:32;;;;;;;;;;;;;:::i;:::-;;;;189:564:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::o;5912:1107:2:-;;;;6001:4;:18;;6009:10;6017:1;6009:10;:::i;:::-;6001:18;:::i;:::-;;;:::i;:::-;;5997:540;;;;6137:21;;6153:5;6137:21;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;5997:540;6551:2;:16;;6557:10;6565:1;6557:10;:::i;:::-;6551:16;:::i;:::-;;;:::i;:::-;;6547:425;;;;6714:21;;6730:5;6714:21;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;6547:425;7002:2;7006:5;6987:25;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;5912:1107::o;6547:425::-;6925:22;6942:5;6925:22;:13;:9;6935:2;6925:13;;:::i;:::-;:22;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;6547:425;;5997:540;6211:15;;:9;6221:4;6211:15;;:::i;:::-;;:::i;:::-;6244:11;:19;;6258:5;6244:19;:::i;:::-;;;:::i;:::-;;6240:115;;6493:19;6475:37;6493:11;6507:5;6493:19;;:::i;:::-;6475:15;:9;6485:4;6475:15;;:::i;:::-;:37;:::i;:::-;5997:540;;6240:115;6315:4;6290:50;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;"
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(address,uint256)": "9dc29fac",
              "decimals()": "313ce567",
              "mint(address,uint256)": "40c10f19",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Mock ERC20 token for testing purposes\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"MockERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/MockERC20.sol\":\"MockERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/mock/MockERC20.sol\":{\"keccak256\":\"0x132e9bfea825f24aad910676fc2a9d0cb9c26d4dc8e3e402606098cf28c4909a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://148dea78545bdb2658127e96a5c97f925fc2a1fdd306d5d437f13306e355c7a5\",\"dweb:/ipfs/QmXhJVRbvPrCR3gos97L6Lj8iumeB3UGBuMWrxPGWGJEv5\"]}},\"version\":1}"
        }
      },
      "contracts/mock/Storage.sol": {
        "Storage": {
          "abi": [
            {
              "inputs": [],
              "name": "retrieve",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "num",
                  "type": "uint256"
                }
              ],
              "name": "store",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "allocate_unbounded": {
                  "entryPoint": 32,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 38,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234601c57600e6020565b61022661002c823961022690f35b6026565b60405190565b600080fdfe60806040526004361015610013575b61013a565b61001e60003561003d565b80632e64cec11461003857636057361d0361000e57610107565b610089565b60e01c90565b60405190565b600080fd5b600080fd5b600091031261005e57565b61004e565b90565b61006f90610063565b9052565b919061008790600060208501940190610066565b565b346100b957610099366004610053565b6100b56100a461016e565b6100ac610043565b91829182610073565b0390f35b610049565b6100c781610063565b036100ce57565b600080fd5b905035906100e0826100be565b565b906020828203126100fc576100f9916000016100d3565b90565b61004e565b60000190565b346101355761011f61011a3660046100e2565b6101e3565b610127610043565b8061013181610101565b0390f35b610049565b600080fd5b600090565b60001c90565b90565b61015961015e91610144565b61014a565b90565b61016b905461014d565b90565b61017661013f565b506101816000610161565b90565b60001b90565b9061019760001991610184565b9181191691161790565b90565b6101b86101b36101bd92610063565b6101a1565b610063565b90565b90565b906101d86101d36101df926101a4565b6101c0565b825461018a565b9055565b6101ee9060006101c3565b56fea2646970667358221220360570e29aafe68479a05a6965ad44ddfa330d05e9ff39c89f94abf41b93c45364736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1C JUMPI PUSH1 0xE PUSH1 0x20 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x2C DUP3 CODECOPY PUSH2 0x226 SWAP1 RETURN JUMPDEST PUSH1 0x26 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0x13A JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0x3D JUMP JUMPDEST DUP1 PUSH4 0x2E64CEC1 EQ PUSH2 0x38 JUMPI PUSH4 0x6057361D SUB PUSH2 0xE JUMPI PUSH2 0x107 JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x5E JUMPI JUMP JUMPDEST PUSH2 0x4E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6F SWAP1 PUSH2 0x63 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x87 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x66 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0xB9 JUMPI PUSH2 0x99 CALLDATASIZE PUSH1 0x4 PUSH2 0x53 JUMP JUMPDEST PUSH2 0xB5 PUSH2 0xA4 PUSH2 0x16E JUMP JUMPDEST PUSH2 0xAC PUSH2 0x43 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x73 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x49 JUMP JUMPDEST PUSH2 0xC7 DUP2 PUSH2 0x63 JUMP JUMPDEST SUB PUSH2 0xCE JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE0 DUP3 PUSH2 0xBE JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xFC JUMPI PUSH2 0xF9 SWAP2 PUSH1 0x0 ADD PUSH2 0xD3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x4E JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x135 JUMPI PUSH2 0x11F PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0xE2 JUMP JUMPDEST PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x43 JUMP JUMPDEST DUP1 PUSH2 0x131 DUP2 PUSH2 0x101 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x49 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x15E SWAP2 PUSH2 0x144 JUMP JUMPDEST PUSH2 0x14A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x16B SWAP1 SLOAD PUSH2 0x14D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x13F JUMP JUMPDEST POP PUSH2 0x181 PUSH1 0x0 PUSH2 0x161 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x197 PUSH1 0x0 NOT SWAP2 PUSH2 0x184 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1B3 PUSH2 0x1BD SWAP3 PUSH2 0x63 JUMP JUMPDEST PUSH2 0x1A1 JUMP JUMPDEST PUSH2 0x63 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1D8 PUSH2 0x1D3 PUSH2 0x1DF SWAP3 PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0x1C0 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x18A JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1EE SWAP1 PUSH1 0x0 PUSH2 0x1C3 JUMP JUMPDEST JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE SDIV PUSH17 0xE29AAFE68479A05A6965AD44DDFA330D05 0xE9 SELFDESTRUCT CODECOPY 0xC8 SWAP16 SWAP5 0xAB DELEGATECALL SHL SWAP4 0xC4 MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "169:356:10:-:0;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode": {
                  "entryPoint": 83,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_tuple_uint256": {
                  "entryPoint": 226,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256": {
                  "entryPoint": 211,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple": {
                  "entryPoint": 257,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_uint256": {
                  "entryPoint": 115,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_to_uint256": {
                  "entryPoint": 102,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "allocate_unbounded": {
                  "entryPoint": 67,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint256": {
                  "entryPoint": 330,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": 99,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 420,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "external_fun_retrieve": {
                  "entryPoint": 137,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_store": {
                  "entryPoint": 263,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_from_storage_value_offset_uint256": {
                  "entryPoint": 333,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_retrieve": {
                  "entryPoint": 366,
                  "id": 1774,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_store": {
                  "entryPoint": 483,
                  "id": 1765,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": 417,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint256": {
                  "entryPoint": 448,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint256": {
                  "entryPoint": 353,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74": {
                  "entryPoint": 314,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 73,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 78,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "shift_left": {
                  "entryPoint": 388,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_0_unsigned": {
                  "entryPoint": 324,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": 61,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 394,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_uint256_to_uint256": {
                  "entryPoint": 451,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_uint256": {
                  "entryPoint": 190,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "zero_value_for_split_uint256": {
                  "entryPoint": 319,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361015610013575b61013a565b61001e60003561003d565b80632e64cec11461003857636057361d0361000e57610107565b610089565b60e01c90565b60405190565b600080fd5b600080fd5b600091031261005e57565b61004e565b90565b61006f90610063565b9052565b919061008790600060208501940190610066565b565b346100b957610099366004610053565b6100b56100a461016e565b6100ac610043565b91829182610073565b0390f35b610049565b6100c781610063565b036100ce57565b600080fd5b905035906100e0826100be565b565b906020828203126100fc576100f9916000016100d3565b90565b61004e565b60000190565b346101355761011f61011a3660046100e2565b6101e3565b610127610043565b8061013181610101565b0390f35b610049565b600080fd5b600090565b60001c90565b90565b61015961015e91610144565b61014a565b90565b61016b905461014d565b90565b61017661013f565b506101816000610161565b90565b60001b90565b9061019760001991610184565b9181191691161790565b90565b6101b86101b36101bd92610063565b6101a1565b610063565b90565b90565b906101d86101d36101df926101a4565b6101c0565b825461018a565b9055565b6101ee9060006101c3565b56fea2646970667358221220360570e29aafe68479a05a6965ad44ddfa330d05e9ff39c89f94abf41b93c45364736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0x13A JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0x3D JUMP JUMPDEST DUP1 PUSH4 0x2E64CEC1 EQ PUSH2 0x38 JUMPI PUSH4 0x6057361D SUB PUSH2 0xE JUMPI PUSH2 0x107 JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x5E JUMPI JUMP JUMPDEST PUSH2 0x4E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6F SWAP1 PUSH2 0x63 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x87 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x66 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0xB9 JUMPI PUSH2 0x99 CALLDATASIZE PUSH1 0x4 PUSH2 0x53 JUMP JUMPDEST PUSH2 0xB5 PUSH2 0xA4 PUSH2 0x16E JUMP JUMPDEST PUSH2 0xAC PUSH2 0x43 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x73 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x49 JUMP JUMPDEST PUSH2 0xC7 DUP2 PUSH2 0x63 JUMP JUMPDEST SUB PUSH2 0xCE JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE0 DUP3 PUSH2 0xBE JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xFC JUMPI PUSH2 0xF9 SWAP2 PUSH1 0x0 ADD PUSH2 0xD3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x4E JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x135 JUMPI PUSH2 0x11F PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0xE2 JUMP JUMPDEST PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x43 JUMP JUMPDEST DUP1 PUSH2 0x131 DUP2 PUSH2 0x101 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x49 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x15E SWAP2 PUSH2 0x144 JUMP JUMPDEST PUSH2 0x14A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x16B SWAP1 SLOAD PUSH2 0x14D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x13F JUMP JUMPDEST POP PUSH2 0x181 PUSH1 0x0 PUSH2 0x161 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x197 PUSH1 0x0 NOT SWAP2 PUSH2 0x184 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1B3 PUSH2 0x1BD SWAP3 PUSH2 0x63 JUMP JUMPDEST PUSH2 0x1A1 JUMP JUMPDEST PUSH2 0x63 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1D8 PUSH2 0x1D3 PUSH2 0x1DF SWAP3 PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0x1C0 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x18A JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1EE SWAP1 PUSH1 0x0 PUSH2 0x1C3 JUMP JUMPDEST JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE SDIV PUSH17 0xE29AAFE68479A05A6965AD44DDFA330D05 0xE9 SELFDESTRUCT CODECOPY 0xC8 SWAP16 SWAP5 0xAB DELEGATECALL SHL SWAP4 0xC4 MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "169:356:10:-:0;;;;;;;;;-1:-1:-1;169:356:10;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;444:79::-;485:7;;:::i;:::-;510:6;;;;:::i;:::-;503:13;:::o;169:356::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;299:64::-;344:12;299:64;344:12;;:::i;:::-;299:64::o"
            },
            "methodIdentifiers": {
              "retrieve()": "2e64cec1",
              "store(uint256)": "6057361d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"retrieve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Store & retrieve value in a variable\",\"kind\":\"dev\",\"methods\":{\"retrieve()\":{\"details\":\"Return value \",\"returns\":{\"_0\":\"value of 'number'\"}},\"store(uint256)\":{\"details\":\"Store value in variable\",\"params\":{\"num\":\"value to store\"}}},\"title\":\"\\u30b5\\u30f3\\u30d7\\u30eb\\u7528\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u3000Storage\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/Storage.sol\":\"Storage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/mock/Storage.sol\":{\"keccak256\":\"0xe589e6e0926456a2872053f451f499102b907c319fd979476c0f6afe2004a383\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://eb9d4fcfb363d4cf22f9551c568ffff5a6217007c0c56160206e6f513b74873c\",\"dweb:/ipfs/QmNuPbHbaTykVNzWBPP5ve9psqQbWkAEEWWLrozAyCb7pt\"]}},\"version\":1}"
        }
      }
    }
  }
}